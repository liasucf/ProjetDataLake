{
    "id": "53865181",
    "text": "Cloud-based quantum computing is the invocation of quantum emulators, simulators or processors through the cloud. Increasingly, cloud services are being looked on as the method for providing access to quantum processing. Quantum computers achieve their massive computing power by initiating quantum physics into processing power and when users are allowed access to these quantum-powered computers through the internet it is known as quantum computing within the cloud. IBM had connected a small quantum computer to the cloud and it allows for simple programs to be built and executed on the cloud. Many people from academic researchers and professors to schoolkids, have already built programs that run many different quantum algorithms using the program tools. Some consumers hoped to use the fast computing to model financial markets or to build more advanced AI systems. These use methods allow people outside a professional lab or institution to experience and learn more about such a phenomenal technology. == Application == Cloud-based quantum computing is used in several contexts: * In teaching, teachers can use cloud- based quantum computing to help their students better understand quantum mechanics, as well as implement and test quantum algorithms. * In research, scientists can use cloud-based quantum resources to test quantum information theories, perform experiments, compare architectures, amongst other things. * In games, developers can use cloud-based quantum resources can create quantum games to introduce people to quantum concepts. == Existing platforms == * Forest by Rigetti Computing, which consists of a toolsuite for quantum computing. It includes a programming language, development tools and example algorithms. * > by Microsoft, which is a software architecture and toolsuite for quantum computing. It includes a programming language, example optimization and scheduling algorithms, and quantum simulators. ** Q#, a quantum programming language by Microsoft on the .NET Framework seen as a successor to LIQUi|>. * IBM Q Experience by IBM, providing access to quantum hardware as well as HPC simulators. These can be accessed programmatically using the Python-based Qiskit framework, or via graphical interface with the IBM Q Experience GUI. Both are based on the OpenQASM standard for representing quantum operations. There is also a tutorial and online community. Currently available simulators and quantum devices are: ** Multiple transmon qubit processors. Those with 5 and 16 qubits are publicly accessible. Devices up to 65 qubits are available through the IBM Q Network. ** A 32 qubit cloud-based simulator. Software for locally hosted simulators are also provided as part of Qiskit. * Quantum in the Cloud by The University of Bristol, which consists of a quantum simulator and a four qubit optical quantum system. *Quantum Playground by Google, which features a simulator with a simple interface, and a scripting language and 3D quantum state visualization. * Quantum in the Cloud by Tsinghua University. It is a four-qubit new quantum cloud experience based on nuclear magnetic resonance-NMRCloudQ. *Quantum Inspire by Qutech is the first platform in Europe providing cloud-based quantum computing to two hardware chips. Next to a 5-qubit transmon processor, Quantum Inspire is the first platform in the world to provide online access to a fully programmable 2-qubit electron spin quantum processor: **Spin-2 is a 2-qubit quantum processor hosting two single electron spin qubits in a double quantum dot in isotopically purified 28Si. ** Starmon-5 consists of five superconducting transmon qubits in an X configuration. Next to the quantum chips, the platform gives access to QX, a quantum emulator backend. Two instances of the QX emulator are available, emulating up to 26 qubits on a commodity cloud-based server and up to 31 qubits using one 'fat' nodes on Cartesius, the Dutch national supercomputer of SurfSara. Circuit based quantum algorithms can be created through a graphical user interface or through the Python-based Quantum Inspire SDK, providing a backend for the projectQ framework, the Qiskit framework. Quantum Inspire provides a knowledge base with user guides and some example algorithms written in cQASM. * Amazon Braket \"is a fully managed service that helps you get started with quantum computing by providing a development environment to explore and design quantum algorithms, test them on simulated quantum computers, and run them on your choice of different quantum hardware technologies.\" * Forge by QC Ware, providing access to D-Wave hardware as well as Google and IBM simulators. The platform offers a 30-day free trial including one minute of quantum computing time. == References == == External links == * List of quantum tools on quantum computing report * List of quantum computing simulators on quantiki Category:Cloud computing Category:Quantum information science Category:Quantum computing Category:Quantum programming ",
    "title": "Cloud-based quantum computing"
}
{
    "id": "7818178",
    "text": "In computer science, a maximal pair is a tuple (p_1, p_2, l), such that, given a string S of length n, S[p_1..p_1+l-1]=S[p_2..p_2+l-1], but S[p_1-1] eq S[p_2-1] and S[p_1+l] eq S[p_2+l]. A maximal repeat is a string represented by such tuple. A supermaximal repeat is a maximal repeat never occurring as a proper substring of another maximal repeat. Both maximal pairs, maximal repeats and supermaximal repeats can be found in \\Theta(n+z) time using a suffix tree, if there are z such structures. == Example == {|class=\"wikitable\" style=\"text-align: center; |- | Index || 1|| || 3|| 4 || 5|| || 7|| 8|| 9|| || 11|| 12|| 13|| 14 |- | Character || x | || || || y | || || || w | || || || y || z |} (2,6,3) and (6,10,3) are maximal pairs as the referenced substrings do not share identical characters to the left or the right. (2,10,3) is not, as the character `y` follows both substrings. `abc` and `abcy` are maximal repeats, but only `abcy` is a supermaximal repeat. == References == == External links == *Project for the computation of all maximal repeats in one ore more strings in Python, using suffix array. Category:String (computer science) Category:Formal languages ",
    "title": "Maximal pair"
}
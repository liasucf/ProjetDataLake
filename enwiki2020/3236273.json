{
    "id": "3236273",
    "text": "Computer Associates International, Inc. v. Altai, Inc., 982 F.2d 693 (2d Cir. 1992)Computer Associates International, Inc. v. Altai, Inc., 982 F.2d 693, (2d Cir. 1992). is a decision from the United States Court of Appeals for the Second Circuit that addressed to what extent non-literal elements of software are protected by copyright law. The court used and recommended a three-step process called the Abstraction-Filtration-Comparison test. The case was an appeal from the United States District Court for the Eastern District of New York in which the district court found that defendant Altai's OSCAR 3.4 computer program had infringed plaintiff Computer Associates' copyrighted computer program entitled CA-SCHEDULER. The district court also found that Altai's OSCAR 3.5 program was not substantially similar to a portion of CA- SCHEDULER called ADAPTER, and thus denied relief as to OSCAR 3.5. Finally, the district court concluded that Computer Associate's state law trade secret misappropriation claim against Altai was preempted by the federal Copyright Act. The appeal was heard by Judges Frank X. Altimari, John Daniel Mahoney, and John M. Walker, Jr. The majority opinion was written by Judge Walker. Judge Altimari concurred in part and dissented in part. The Second Circuit affirmed the district court's ruling as to copyright infringement, but vacated and remanded its holding on trade secret preemption. == Background of the case == Computer Associates (CA) created a job scheduling program called CA- SCHEDULER which sorts, runs, and controls the various tasks given to a computer. This scheduler was designed to be compatible with IBM System 370 computers which ran one of three different operating systems: DOS/VSE, MVS, and VM/CMS. Traditionally, a program must be specifically compiled to run on a designated operating system. In order to allow the same code to run on the different operating systems, the CA-SCHEDULER included a component called ADAPTER that was designed to translate the language of the program into commands understandable to that particular operating system. This way the CA- SCHEDULER could use the same code but run on different operating systems. In 1982, Altai established their own job scheduler called ZEKE written for the VSE operating system. In efforts to create a version of ZEKE to run over the MVS operating system, Altai employee James Williams recruited his longtime friend Claude Arney, an employee of Computer Associates, to create the MVS version. Williams claims that at the time he did not know about the ADAPTER component or that Arney had familiarity with the CA-SCHEDULER and ADAPTER code. Arney left CA to work on Altai's ZEKE program, taking the VSE and MVS versions of the source code for ADAPTER with him. Using his knowledge of ADAPTER, Arney then convinced Altai to restructure the program to include a program translator to interface with various operating systems. Arney created the translator OSCAR 3.4 for Altai in which about 30% of OSCAR's source code was taken directly from CA's ADAPTER code. In 1988, CA discovered Altai's use of the CA ADAPTER code and brought an action for copyright infringement and trade secret misappropriation against Altai. In response, Altai ordered a clean room rewrite of the copied portions of the code to be performed by eight programmers who had no knowledge or involvement with the previous OSCAR code. This new program was released as OSCAR 3.5. In the judgment of the United States District Court for the Eastern District of New York, the Honorable George C. Pratt, United States Circuit Judge found that OSCAR 3.4 was a copyright infringement of CA's CA-SCHEDULER and awarded CA $364,444 in damages and apportioned profits. The district court ruled that OSCAR 3.5 rewrite, on the other hand, did not constitute copyright infringement. It also ruled that the state law trade secret claims were preempted by the federal Copyright Act, and thus Altai was not liable for trade secret misappropriation. Initially, both parties appealed the judgment. Altai appealed the judgment on OSCAR 3.4, but subsequently dropped the claim. CA appealed the judgment on OSCAR 3.5 and preemption on trade secret misappropriation. == Relevant law == Prior to this case, it had been well established that software can be protected by copyright law. In particular, previous cases have shown that literal elements of program code are protected by copyright (in Apple Computer, Inc. v. Franklin Computer Corp.Apple Computer, Inc. v. Franklin Computer Corp. , 714 F.2d 1240 (3d Cir. 1983). among others). The issue in this case is whether and to what extent copyright protects non-literal elements of program code, the structure, sequence and organization of the program. Although a few courts had examined this issue, this was the first of its kind in this circuit. == Issues == In the appeal, CA disputed the district court's finding that the OSCAR 3.5 did not have substantial similarity to CA's ADAPTER. They claimed that the district court did not apply a proper test that took into consideration the copying of non-literal elements of computer software. They claimed that despite the clean room rewrite, there was substantial similarity in the structures of ADAPTER including flow charts, inter-modular relationships, parameter lists, macros, and services obtained from the operating system. To approach this issue, the court fully supported the claim that non-literal elements of software are protected under copyright. Software is considered a literary work for the purposes of copyright law, and non-literal elements of literary works are protected under copyright. As such, non-literal elements of software are also protected. The question at hand was to what extent are the non-literal elements protected. Copyright protects the expression of an idea but not the idea itself. As such, it is important to determine where to draw the line between expression and idea. The court agreed with the opinion in Baker v. Selden which stated that things that \"must necessarily be used as incident to\" the idea are not subject to copyright protection.Baker v. Selden , 101 U.S. 99 (1879). This opinion, however, gave no advice on how to separate the idea from the expression. Facing a similar issue, Whelan v. Jaslow attempted to delineate the differences between idea and expression by saying that the function of the work is the idea and everything else not necessary to the function is the expression of the idea.Whelan Associates Inc. v. Jaslow Dental Laboratory, Inc. , 797 F.2d 1222 (3d Cir. 1986). The court agreed with district court's refusal to follow the Whelan logic because the test is \"conceptually overbroad.\" A program can have multiple functions and thus many ideas. As an alternate metric, the court presented a three-step test to determine substantial similarity, abstraction-filtration-comparison. This process is based on other previously established copyright principles of merger, scenes a faire, and the public domain. In this test, the court must first determine the allegedly infringed program's constituent structural parts. Then, the parts are filtered to extract any non-protected elements. Non-protected elements include: elements made for efficiency (i.e. elements with a limited number of ways it can be expressed and thus incidental to the idea), elements dictated by external factors (i.e. standard techniques), and design elements taken from the public domain. Any of these non-protected elements are thrown out and the remaining elements are compared with the allegedly infringing program's elements to determine substantial similarity. Given the rapidly developing nature of technology, the court recommended a modification of the three-step test where appropriate. They also recommended that the allegedly infringed program be put through the three-step test and then compared to the allegedly infringing program, instead of the reverse as the district court originally chose. == Decision == The court reexamined the district court's process and found no significant fault with it. After taking out all functional elements and elements from the public domain, only a few lists and macros in OSCAR 3.5 were similar to ADAPTER, and their impact on the program was not large enough to declare copyright infringement. The court found that the similarity in services required by the operating system was due to the nature of the operating system, thus it was not protected by copyright. Similarly, the flow charts were found to be an element dictated by external factors flowing from the nature of the work, also unprotectable by copyright law. In light of this analysis, the court upheld the district courts finding that there was no copyright infringement by OSCAR 3.5. > With respect to code, the district court observed that after the rewrite of > OSCAR 3.4 to OSCAR 3.5, \u201cthere remained virtually no lines of code that were > identical to ADAPTER.\u201d Id. at 561. Accordingly, the court found that the > code \u201cpresent[ed] no similarity at all.\u201d Id. at 562. CA's second argument for the appeal concerned trade secret misappropriation. The district court determined that the allegation of misappropriation was based on Altai's use of the infringing material, therefore the copyright infringement claim preempted the misappropriation claim according to 17 U.S.C. \u00a7 301., Preemption with respect to other laws Upon revisiting the matter of trade secret misappropriation, the court found that with Arney's potential breach of confidentiality and Altai's potential liability for improper trade secret acquisition, these extra elements differentiate the trade secret misappropriation claim from the copyright infringement claim. The court vacated the district court's preemption ruling and remanded the case back to the district court. == Reactions == The abstraction-filtration-comparison test has been quickly adopted by the courts. In fact, every court since 1992[-2006] has chosen to use the 3-step filtration test over the Whelan test.Mark A. Lemley, Peter S. Menell, Robert P. Merges, and Pamela Samuelson, Software and Internet Law (3d ed. 2006). Some, however, have criticized the approach and claim that it overly narrows the scope of copyright protection. CA and other large computer companies argue that without broader protection, the test will stifle development and disincentivize programmers from actively designing and improving programs. == See also == *Copyright infringement of software *List of leading legal cases in copyright law *Analytic dissection ==References== ==Further reading== * Pamela Samuelson, Why Copyright Law Excludes Systems and Processes from the Scope of Its Protection, 85 Tex. L. Rev. 1921, 1969-1971 (2007). == External links == * Expert Witness's Perspective on Copyright Infringement in Software Cases * MIT Case Summary Category:United States copyright case law Category:United States Court of Appeals for the Second Circuit cases Category:1992 in United States case law Category:CA Technologies Category:United States lawsuits ",
    "title": "Computer Associates International, Inc. v. Altai, Inc."
}
{
    "id": "3262179",
    "text": "Cobham's thesis, also known as Cobham\u2013Edmonds thesis (named after Alan Cobham and Jack Edmonds), asserts that computational problems can be feasibly computed on some computational device only if they can be computed in polynomial time; that is, if they lie in the complexity class P. In modern terms, it identifies tractable problems with the complexity class P. Formally, to say that a problem can be solved in polynomial time is to say that there exists an algorithm that, given an n-bit instance of the problem as input, can produce a solution in time O(nc), the letter O is big-O notation and c is a constant that depends on the problem but not the particular instance of the problem. Alan Cobham's 1965 paper entitled \"The intrinsic computational difficulty of functions\" is one of the earliest mentions of the concept of the complexity class P, consisting of problems decidable in polynomial time. Cobham theorized that this complexity class was a good way to describe the set of feasibly computable problems. Jack Edmonds's 1965 paper \"Paths, trees, and flowers\" is also credited with identifying P with tractable problems. ==Limitations== The graph shows time of solution of problem in milliseconds (msec) vs. problem size, n, for knapsack problems solved by a state-of-the-art specialized algorithm using a 933 MHz Pentium III computer (average of 100 instances, data from:D. Pisinger, 2003. \"Where are the hard knapsack problems?\" Technical Report 2003/08, Department of Computer Science, University of Copenhagen, Copenhagen, Denmark, see , accessed 31 January 2015.). The fit of the quadratic equation suggests that empirical algorithmic complexity for instances with 50\u201310,000 variables is O((log n)2) despite having exponential worst-case complexity estimate in theory. While Cobham's thesis is an important milestone in the development of the theory of computational complexity, it has limitations as applied to practical feasibility of algorithms. The thesis essentially states that \"P\" means \"easy, fast, and practical,\" while \"not in P\" means \"hard, slow, and impractical.\" But this is not always true, because the thesis abstracts away some important variables that influence the runtime in practice: * It ignores constant factors and lower-order terms. * It ignores the size of the exponent. The time hierarchy theorem proves the existence of problems in P requiring arbitrarily large exponents. * It ignores the typical size of the input. All three are related, and are general complaints about analysis of algorithms, but they particularly apply to Cobham's thesis since it makes an explicit claim about practicality. Under Cobham's thesis, a problem for which the best algorithm takes n100 instructions is considered feasible, and a problem with an algorithm that takes 20.00001 n instructions infeasible--even though one could never solve an instance of size n = 2 with the former algorithm, whereas an instance of the latter problem of size n = 106 could be solved without difficulty. In fields where practical problems have millions of variables (such as Operations Research or Electronic Design Automation), even O(n3) algorithms are often impractical. ==References== Category:Computational complexity theory ",
    "title": "Cobham's thesis"
}
{
    "id": "827006",
    "text": "example of an ORM2 diagram Object-role modeling (ORM) is used to model the semantics of a universe of discourse. ORM is often used for data modeling and software engineering. An object-role model uses graphical symbols that are based on first order predicate logic and set theory to enable the modeler to create an unambiguous definition of an arbitrary universe of discourse. Attribute free, the predicates of an ORM Model lend themselves to the analysis and design of graph database models in as much as ORM was originally conceived to benefit relational database design. The term \"object-role model\" was coined in the 1970s and ORM based tools have been used for more than 30 years \u2013 principally for data modeling. More recently ORM has been used to model business rules, XML-Schemas, data warehouses, requirements engineering and web forms. == History == The roots of ORM can be traced to research into semantic modeling for information systems in Europe during the 1970s. There were many pioneers and this short summary does not by any means mention them all. An early contribution came in 1973 when Michael Senko wrote about \"data structuring\" in the IBM Systems Journal. In 1974 Jean-Raymond Abrial contributed an article about \"Data Semantics\". In June 1975, Eckhard Falkenberg's doctoral thesis was published and in 1976 one of Falkenberg's papers mentions the term \"object-role model\". G.M. Nijssen made fundamental contributions by introducing the \"circle-box\" notation for object types and roles, and by formulating the first version of the conceptual schema design procedure. Robert Meersman extended the approach by adding subtyping, and introducing the first truly conceptual query language. Object role modeling also evolved from the Natural language Information Analysis Method, a methodology that was initially developed by the academic researcher, G.M. Nijssen in the Netherlands (Europe) in the mid-1970s and his research team at the Control Data Corporation Research Laboratory in Belgium, and later at the University of Queensland, Australia in the 1980s. The acronym NIAM originally stood for \"Nijssen's Information Analysis Methodology\", and later generalised to \"Natural language Information Analysis Methodology\" and Binary Relationship Modeling since G. M. Nijssen was only one of many people involved in the development of the method. In 1989 Terry Halpin completed his PhD thesis on ORM, providing the first full formalization of the approach and incorporating several extensions. Also in 1989, Terry Halpin and G.M. Nijssen co-authored the book \"Conceptual Schema and Relational Database Design\" and several joint papers, providing the first formalization of object-role modeling. A graphical NIAM design tool which included the ability to generate database-creation scripts for Oracle, DB2 and DBQ was developed in the early 1990s in Paris. It was originally named Genesys and was marketed successfully in France and later Canada. It could also handle ER diagram design. It was ported to SCO Unix, SunOs, DEC 3151's and Windows 3.0 platforms, and was later migrated to succeeding Microsoft operating systems, utilising XVT for cross operating system graphical portability. The tool was renamed OORIANE and is currently being used for large data warehouse and SOA projects. Also evolving from NIAM is \"Fully Communication Oriented Information Modeling\" FCO-IM (1992). It distinguishes itself from traditional ORM in that it takes a strict communication-oriented perspective. Rather than attempting to model the domain and its essential concepts, it models the communication in this domain (universe of discourse). Another important difference is that it does this on instance level, deriving type level and object/fact level during analysis. Another recent development is the use of ORM in combination with standardised relation types with associated roles and a standard machine-readable dictionary and taxonomy of concepts as are provided in the Gellish English dictionary. Standardisation of relation types (fact types), roles and concepts enables increased possibilities for model integration and model reuse. == Concepts == Overview of object-role model notation, Stephen M. Richard (1999). === Facts === Object-role models are based on elementary facts, and expressed in diagrams that can be verbalised into natural language. A fact is a proposition such as \"John Smith was hired on 5 January 1995\" or \"Mary Jones was hired on 3 March 2010\". With ORM, propositions such as these, are abstracted into \"fact types\" for example \"Person was hired on Date\" and the individual propositions are regarded as sample data. The difference between a \"fact\" and an \"elementary fact\" is that an elementary fact cannot be simplified without loss of meaning. This \"fact-based\" approach facilitates modeling, transforming, and querying information from any domain.http://www.orm.net/pdf/ORM2_TechReport1.pdf === Attribute-free === ORM is attribute-free: unlike models in the entity\u2013relationship (ER) and Unified Modeling Language (UML) methods, ORM treats all elementary facts as relationships and so treats decisions for grouping facts into structures (e.g. attribute-based entity types, classes, relation schemes, XML schemas) as implementation concerns irrelevant to semantics. By avoiding attributes, ORM improves semantic stability and enables verbalization into natural language. === Fact-based modeling === Fact-based modelling includes procedures for mapping facts to attribute-based structures, such as those of ER or UML. Fact- based textual representations are based on formal subsets of native languages. ORM proponents argue that ORM models are easier to understand by people without a technical education. For example, proponents argue that object-role models are easier to understand than declarative languages such as Object Constraint Language (OCL) and other graphical languages such as UML class models. Fact-based graphical notations are more expressive than those of ER and UML. An object-role model can be automatically mapped to relational and deductive databases (such as datalog). === ORM 2 graphical notation === ORM2 is the latest generation of object-role modeling . The main objectives for the ORM 2 graphical notation are: Halpin, T. 2005, 'ORM 2', On the Move to Meaningful Internet Systems 2005: OTM 2005 Workshops, eds R. Meersman, Z. Tari, P. Herrero et al., Cyprus. Springer LNCS 3762, pp 676-87. * More compact display of ORM models without compromising clarity * Improved internationalization (e.g. avoid English language symbols) * Simplified drawing rules to facilitate creation of a graphical editor * Extended use of views for selectively displaying/suppressing detail * Support for new features (e.g. role path delineation, closure aspects, modalities) === Design procedure === Example of the application of Object Role Modeling in a \"Schema for Geologic Surface\", Stephen M. Richard (1999).Stephen M. Richard (1999). Geologic Concept Modeling. U.S. Geological Survey Open-File Report 99-386. System development typically involves several stages such as: feasibility study; requirements analysis; conceptual design of data and operations; logical design; external design; prototyping; internal design and implementation; testing and validation; and maintenance. The seven steps of the conceptual schema design procedure are:Terry Halpin (2001). \"Object-Role Modeling: an overview\" # Transform familiar information examples into elementary facts, and apply quality checks # Draw the fact types, and apply a population check # Check for entity types that should be combined, and note any arithmetic derivations # Add uniqueness constraints, and check arity of fact types # Add mandatory role constraints, and check for logical derivations # Add value, set comparison and subtyping constraints # Add other constraints and perform final checks ORM's conceptual schema design procedure (CSDP) focuses on the analysis and design of data. == See also == * Concept map * Conceptual schema * Information flow diagram * Ontology double articulation * Ontology engineering * Relational algebra * Three schema approach == References == == Further reading == * * * * == External links == * The ORM foundation * Terry Halpin's ORM site * FactModeling.org dedicated to Fact- Based Modeling Category:Data modeling Category:Data modeling languages Category:Modeling languages ",
    "title": "Object-role modeling"
}
{
    "id": "3258313",
    "text": "A NetWare Loadable Module (NLM) is a loadable kernel module (a binary code module) that can be loaded into Novell's NetWare operating system. NLMs can implement hardware drivers, server functions (e.g. clustering), applications (e.g. GroupWise), system libraries or utilities. NLMs were supported beginning with the Intel 80386-based NetWare version 3.x. Prior versions of NetWare had a monolithic kernel, and significant hardware or functionality changes required re-linking the kernel from object modules. Due to stability issues with early third-party NLMs, they never became popular for server application programming, with few exceptions like antivirus programs, backup programs and certain database products. ==Functionality== Upon loading, a NLM requests resources, such as memory and process threads, from the NetWare kernel. The NetWare kernel tracks such requests, and can identify memory and other resources assigned to a specific NLM. NLMs may auto-load other NLMs upon which they themselves depend. NLMs may register commands with the NetWare kernel, extending the command vocabulary available at the NetWare console prompt. When properly coded, NLMs can be re-entrant, allowing multiple instances of the same code to be loaded and run. ==Programming issues== Initially, Novell published a development toolkit for NLM programming including kernel API documentation and a C compiler (Watcom), but third-party support for the NLM executable function was very limited. In early NetWare versions (prior to v4.x), all processes were executed in the kernel address space, without specific memory protection. It was therefore possible for bugs in NLMs to overwrite the kernel's or other NLM's address space and ultimately crash the server -- in the mainframe-derived Novell terminology, this was known as an ABEND or ABnormal END. Moreover, NetWare used a non-preemptive, or cooperative, multitasking model, meaning that an NLM was required to yield to the kernel regularly. An NLM executing an infinite loop, for example, could therefore not be stopped. In NetWare v4.x, Novell introduced a limited form of memory protection, which was extended to Protected Address Spaces in NetWare v5.x. Through these mechanisms, properly-coded NLMs can be loaded into their own address space, and mis-behaving NLMs can be prevented from compromising the kernel integrity. ==Compilers== Official compilers that produce NLMs are: * Watcom C/C++ compiler / OpenWatcom * Metrowerks Codewarrior for NetWare * EPC C/C++ * Novell NLMLINK.EXE NLM development is also possible with GNU cc and binutils. More details are available in NetWare Loadable Module Programming HOWTO by Martin Hinner. == Client-side NLMs with NIOS == Announced in March 1995, Novell introduced a new 32-bit DOS/Windows NetWare client (Client 32 based on ODI32/NIOS) in 1996, replacing the former 16-bit client based on ODI/VLM. Its NIOS component (NetWare I/O Subsystem) used techniques similar to DPMS to relocate and run NLMs in protected mode and extended memory in order to reduce the conventional memory footprint of the client down to 2 to 5 KB. ==See also== * Virtual Loadable Module (VLM) ==References== ==Further reading== * * Category:Executable file formats Category:Novell NetWare ",
    "title": "NetWare Loadable Module"
}
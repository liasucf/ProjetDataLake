{
    "id": "2736424",
    "text": "Atari Assembler Editor (sometimes written as Atari Assembler / Editor) is a cartridge-based development system used to edit, assemble, and debug 6502 programs for the Atari 8-bit family of home computers. It was programmed by Kathleen O'Brien of Shepardson Microsystems, the company which wrote Atari BASIC, and Assembler Editor shares many design concepts with that language. Assembly times are slow, making the cartridge challenging to use for larger programs. In the manual, Atari recommended the Assembler Editor as a tool for writing subroutines to speed up Atari BASIC. The Atari Macro Assembler was offered by Atari to provide better performance and more powerful features, such as macros, but it was disk-based, copy-protected, and did not include an editor or debugger. Despite the recommendation, commercial software was written using the Assembler Editor, such as the games Eastern Front (1941) and Galahad and the Holy Grail. The source code to the original Assembler Editor was licensed to Optimized Systems Software who shipped EASMD based on it. ==History== Assembler Editor was written by Kathleen O'Brien of Shepardson Microsystems. The company had been hired by Atari to help fit Microsoft 6502 BASIC onto an 8KB ROM, something the programmers at Atari were struggling with. Instead, Bill Wilkinson suggested designing an entirely new version of BASIC, which became Atari BASIC. While Atari BASIC was being written, primarily by Paul Laughton, O'Brien's husband, O'Brien worked on Assembler Editor. Assembler Editor was written \"by hand\" by punching codes into a punch tape machine, running the tape through an EPROM burner, and then testing the resulting ROM in an Atari 800. The cartridge was completed before Atari BASIC, and O'Brien spent some time working on portions of that project as well. As part of Shepardson's work on the Atari, a number of common routines were copied into the Atari's operating system. These included the floating point routines, which O'Brien was tasked with writing, although she had not worked on such code before. These routines were considered to be notoriously slow, a topic that Wilkinson often wrote about. == Details == The Assembler Editor is two-pass 6502 assembler in an 8KB cartridge. Both source and object code can be in memory simultaneously, allowing repeated editing, assembly, and running of the resulting code without accessing a disk or tape drive. ===Edit=== The cartridge starts in EDIT mode. The programmer enters lines of assembly source into the Atari BASIC-like editor. Source text must be prefixed with a line number, or it is interpreted as a command. Like Atari BASIC, Assembler Editor included an `ENTER` command that could be used to combine files together into a single larger program listing. Unlike Atari BASIC, Assembler Editor included a number of commands for automatically creating spaced-out line numbers, as well as renumbering lines and deleting them en masse. The editor also had a `FIND` command, which was very useful when working with labels. Instructions are listed in the order they will be placed in memory. The starting point for the instructions is specified with the `*=` instruction, so, for instance, code intended to be placed in the special \"page six\" would be prefixed with the line `*= $0600`. Variable names could be assigned to point to specific locations, and this was often combined with an increment `*= *+1` to directly encode offsets into tables. Values following instructions were normally interpreted as \"the value at this memory address\", but an actual numeric value could be provided as an \"immediate operand\" by appending it with a hash, like `LDA #12`, which loads the accumulator with the decimal value 12. Hexadecimal was indicated with a dollar sign, `LDA #$12` would load the accumulator with 12 hex, or 18 decimal. Indirect addressing was supported using parentheses; `LDA ($600)` would use the values in location $600,$601 to produce a 16-bit address, and then load the accumulator with the value found at that location. Errors are reported with numeric error codes, with about 50 such codes in total. ===Assemble=== Code can be assembled at any time by typing the `ASM` command into the editor. Assembler Editor was widely derided as the slowest assembler on the platform. Much of this was due to it sharing much of the editor code with Atari BASIC, which had also been written by Shepardson Microsystems. Atari BASIC was notorious for the very slow routines used to convert numerical constants in code into an internal representation, which used binary coded decimal (BCD) routines in the Atari's operating system. This meant that all numbers, even line numbers, had to be converted to BCD. Oddly, it also meant that `1E2` was a legal line number. ===Debug=== The debugger, really a monitor, is entered with the `BUG` command. The `X` command returns to EDIT mode. The debugger allows the viewing and changing of registers and memory locations, code tracing, single-step and disassembly. == Example code == The following is 6502 code for Hello World! written for the Assembler Editor: 10 ; HELLO.ASM 20 ; --------- 30 ; 40 ; THIS ATARI ASSEMBLY PROGRAM 50 ; WILL PRINT THE \"HELLO WORLD\" 60 ; MESSAGE TO THE SCREEN 70 ; 0100 ; CIO EQUATES 0110 ; =========== 0120 *= $0340 ;START OF IOCB 0130 IOCB 0140 ; 0150 ICHID *= *+1 ;DEVICE HANDLER 0160 ICDNO *= *+1 ;DEVICE NUMBER 0170 ICCOM *= *+1 ;I/O COMMAND 0180 ICSTA *= *+1 ;I/O STATUS 0190 ICBAL *= *+1 ;LSB BUFFER ADDR 0200 ICBAH *= *+1 ;MSB BUFFER ADDR 0210 ICPTL *= *+1 ;LSB PUT ROUTINE 0220 ICPTH *= *+1 ;MSB PUT ROUTINE 0230 ICBLL *= *+1 ;LSB BUFFER LEN 0240 ICBLH *= *+1 ;MSB BUFFER LEN 0250 ICAX1 *= *+1 ;AUX BYTE 1 0260 ICAX2 *= *+1 ;AUX BYTE 1 0270 ; 0280 GETREC = 5 ;GET TEXT RECORD 0290 PUTREC = 9 ;PUT TEXT RECORD 0300 ; 0310 CIOV = $E456 ;CIO ENTRY VECTOR 0320 RUNAD = $02E0 ;RUN ADDRESS 0330 EOL = $9B ;END OF LINE 0340 ; 0350 ; SETUP FOR CIO 0360 ; ------------- 0370 *= $0600 0380 START LDX #0 ;IOCB 0 0390 LDA #PUTREC ;WANT OUTPUT 0400 STA ICCOM,X ;ISSUE CMD 0410 LDA #MSG&255 ;LOW BYTE OF MSG 0420 STA ICBAL,X ; INTO ICBAL 0430 LDA #MSG/256 ;HIGH BYTE 0440 STA ICBAH,X ; INTO ICBAH 0450 LDA #0 ;LENGTH OF MSG 0460 STA ICBLH,X ; HIGH BYTE 0470 LDA #$FF ;255 CHAR LENGTH 0480 STA ICBLL,X ; LOW BYTE 0490 ; 0500 ; CALL CIO TO PRINT 0510 ; ----------------- 0520 JSR CIOV ;CALL CIO 0530 RTS ;EXIT TO DOS 0540 ; 0550 ; OUR MESSAGE 0560 ; ----------- 0570 MSG .BYTE \"HELLO WORLD!\",EOL 0580 ; 0590 ; INIT RUN ADDRESS 0600 ; ---------------- 0610 *= RUNAD 0620 .WORD START 0630 .END These commands can be interactively entered to assemble the code, enter the debugger, run the program, then exit the debugger when it is finished: ASM BUG G600 X ==Legacy== Shortly after Shepardson delivered Assembler Editor and Atari BASIC to Atari, Bob Shepardson, the owner, decided to return to being a one-person company. O'Brien, Laughton and Wilkinson formed their own company, Optimized Systems Software (OSS), to continue development of the Atari products. They licensed the original source code for BASIC, Assembler Editor and Atari DOS, which they had collectively written. In 1981, OSS released an improved version of Assembler Editor, EASMD on floppy disk. EASMD was replaced by MAC/65 in 1982. MAC/65 was one of the fastest assemblers on the platform. Much of the improved performance of MAC/65 is the result of tokenizing lines of code as they're entered\u2014at is the case with Atari BASIC\u2014to reduce the amount of work needed at assembly time. Assembler Editor continued to be available from Atari, and increased in popularity as the price dropped to US$10 or $5 in the latter half of the 1980s. ==See also== *MAC/65 ==References== ===Citations=== ===Bibliography=== * * * * * ==External links== *Assembler Editor at Atari Mania, including manual *Atari Macro Assembler information Category:1981 software Category:Assemblers Category:Atari 8-bit family software ",
    "title": "Atari Assembler Editor"
}
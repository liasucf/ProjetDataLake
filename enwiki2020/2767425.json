{
    "id": "2767425",
    "text": "Railo Server, commonly referred to as Railo ( ), is open source software which implements the general-purpose CFML server-side scripting language, often used to create dynamic websites, web applications and intranet systems. CFML is a dynamic language supporting multiple programming paradigms and runs on the Java virtual machine (JVM). Railo was created by the Swiss company Railo Technologies GmbH, intended as a high performance alternative to Adobe ColdFusion. In 2008, Railo switched to an open source community-driven model, and became a JBoss project. The Railo Open Source project is led by Railo Technologies, with development work funded by consulting and support contracts, but anyone may contribute code for consideration. == Naming == Railo was named after an alien dog in Star Trek Enterprise. The dog is actually named Rhylo, but written phonetically in German it is Railo. Thus, Railo can be pronounced either as rhy-lo or as rai-lo - both are acceptable. Railo major releases have a codename of notable and loyal dogs from history. == History == Railo began in 2002 as a student project by Michael Offner and Gert Franz to compile CFML code into PHP, a choice made due to the ubiquity of PHP, however it was found that this did not give the desired performance and stability, and the decision was made to switch to the Java platform instead.http://www.getrailo.org/index.cfm/about-railo/ The project was successful enough that it was decided to continue to develop into a full product. Several alpha and beta releases were made before the official 1.0 release in April 2006. Railo continued to be developed but was relatively unknown to many CFML developers, until June 2008 at the Scotch on the Rocks conference in Edinburgh, when Railo Technologies used the Day 2 keynote to announce a partnership with JBoss and a switch to open source.http://www.infoq.com/news/2008/06/railo_jboss In May 2012, at the cf. Objective conference, the foundation of \"The Railo Company Ltd\" was announced, a Private Limited Company, comprising the Swiss company Railo Technologies GmbH in conjunction with five other companies who operated in the CFML industry. === Lucee Fork === On 29 January 2015, the Lucee project, a fork of the Railo 4.2 codebase, was announced by the original developer of Railo, who stated that he would not be working further on Railo. The other developers have confirmed they will also be focusing solely on Lucee, and - although no official statement has been made by The Railo Company - the community consensus is that further development on the Railo project is unlikely.http://www.codersrevolution.com/blog/railo-and-lucee-hunka-hunka- burning-questionshttp://blog.adamcameron.me/2015/01/lucee.html On 19 July 2016, The Railo Company was dissolved.https://beta.companieshouse.gov.uk/company/08055066/filing-history === Release history === {| class=\"wikitable\" |- ! Major version (Codename) !! Minor version !! Release date !! Notes |- !rowspan=\"8\"|0 | Alpha 1 | | The first official release of the Railo CFML engine.https://web.archive.org/web/20051031204526/http://www.railo.ch/en/index.cfm |- | Alpha 2 | | |- | Alpha 3 | | |- | Alpha 4 | | |- | Beta 1 | | The first beta release of Railo. |- | Beta 2 | | |- | Beta 3 | | |- | RC1 | | The first release candidate of Railo was presented to the German CFUG in Munich. |- !|1.0 | 1.0.0.000 | | |- !rowspan=\"3\"|2.0 | 2.0.0.000 | | |- | 2.0.1.000 | | |- | 2.0.2.000 | | |- !rowspan=\"4\"|3.0 | 3.0.0.000 | | |- | 3.0.1.000 | | |- | 3.0.2.000 | | |- | 3.0.3.000 | | |- !rowspan=\"3\"|3.1 (Barry) | 3.1.0.000 | | First Open Source release of Railo. |- | 3.1.1.000 | | |- | 3.1.2.000 | | |- !rowspan=\"3\"|3.2 (Greyfriars Bobby) | 3.2.1.000 | | |- | 3.2.2.000 | | |- | 3.2.3.000 | | |- !rowspan=\"2\"|3.3 (Hachiko) | 3.3.1.000 | | Added built-in support for ORM and many other features.http://wiki.getrailo.org/wiki/What%27s_New |- | 3.3.4.003 | | |- !rowspan=\"2\"|4.0 (Appollo) | 4.0.0.013 | | |- | 4.0.5.004 | | |- ! | 4.1 (Endal) | 4.1.2.005 | | . |- !rowspan=\"2\"| 4.2 (Togo) | 4.2.0.009 | | |- | 4.2.1.000 | | |- ! |4.2.2.005 |2014-12-18 |Current stable release of Railo |} == Platforms and license == Railo runs on the JVM as a servlet, and will work with any servlet container (e.g. Apache Tomcat, Eclipse Jetty) or application server (e.g. JBoss AS, GlassFish). It is possible to connect a web server (e.g. Apache, IIS, nginx, Cherokee) in front, using connectors such as mod jk, mod proxy, or equivalent, but this is not required by Railo. Railo has an installer for Linux, macOS, and Windows, which bundles Apache Tomcat. There is also a pre-configured Railo Express download using Jetty. From v4.0 onwards, Railo will have a command line version, enabling CFML to be used as a general- purpose language, outside of the servlet environment. Railo since v3.1 is licensed as LGPL v2.1, with the source code available on GitHubhttps://github.com/getrailo/railo == Philosophy == A primary aim of Railo was to provide the functionality of ColdFusion using less resources and giving better performance, and the Railo Technologies team continue to \"treat slowness as a bug\" as a core development philosophy. Many performance tests have shown Railo to perform faster than other CFML engines.http://cfmlblog.adamcameron.me/2013/08/saving-class-files-in- coldfusion-and.html In addition to this, Railo attempts to resolve many inconsistencies found in traditional CFML. These are either forced changes in behaviour, or configurable options in the Railo Administrator. The Railo Technologies team have always been open to feedback and active at CFML community events, and are keen to remind people that Railo is a community project. Railo Technologies also creates strong technology partnerships with CFML software companies, including Blue River Interactive Group (developers of Mura CMS), CONTENS Software GmbH (developers of CONTENS CMS), and Intergral GmbH (developers of FusionReactor and FusionDebug), to help ensure their software works well with Railo. In addition, Railo Technologies offer formal \"Partner Programs\" for Solutions (development), Hosting, and Training. == Usage == The Railo Application Server currently averages 7,000 downloads (and growing) per month. Railo is used by a number of companies, notably including: * Amtrak california (Californian rail company) Uses Railo-powered Mura CMS on http://www.amtrakcalifornia.com * Apple Inc. (consumer electronics and software company) Uses Railo-powered Mura CMS internally. * Diamond Bank (A commercial bank in Nigeria) * DistroKid (Music publishing / distribution service, by Philip J. Kaplan) * IDG Germany (publisher of Computer World, GameStar, PCWorld magazines) Railo powers IDG's German websites, e.g. http://www.computerwoche.de * Fandalism (social network for musicians, by Philip J. Kaplan) * NASA Jet Propulsion Laboratory (center for the robotic exploration of space) * The List (UK entertainment magazine) Railo powers public website http://www.list.co.uk * RTL Group (Europe's second largest TV, radio, and production company)Uses Railo internally, also uses Railo-powered CONTENS CMS to generate public websites. * STV Player (Scottish video on- demand service) Railo powers http://player.stv.tv service. * Swisscom (A major telecommunications provider in Switzerland) Railo powers https://io.swisscom.ch service. == Features == * Supports object-oriented programming with inheritance, mixins and metaclasses * Dynamic typing and duck typing * Literal notation for arrays and structs * Embedding variables in strings (interpolation) * Named arguments, optional arguments, and default arguments * Three levels of object variable scope: This (object public), Variables (object private), Local (function private) * Multiple global variable scope: Request, Session, Client, Application, Server, Cluster * Distinct user-provided variable scopes: Form (post), Url (get), Cookie, CGI * Automatic garbage collection, (via JVM) * Global and local exception handling, (via `onError` and `try/catch`) * Custom dispatch behaviour (through `onMissingMethod` and implicit getters and setters) * Implicit object conversion (through `_toString`, `_toNumeric`, `_toBoolean`, `_toDate`) http://wiki.getrailo.org/wiki/TIPS:Implicit_Conversions/wiki/TIPS:Magic_Functions * Native threads * Support for Unicode, multiple character encodings, and i18n * Large standard library, covering common web development needs * Railo Extension Store and Extension Manager for easy installation of additional software and extensions * Native plug-in API in CFML or Java * Native handling for easily creating and consuming web services * Separate GUI Administrators for individual web contexts, plus a global server administrator * All admin settings configurable programmatically, or via editing XML config files * Native resources for all built-in filesystem tags and functions. * Clustering and Synchronization for both traditional and cloud servers * Task Manager for scheduling repeated actions, or re-trying failed events * Native support for Hibernate ORM * Large number of image manipulation functions * Event Gateways for asynchronous code executionhttp://wiki.getrailo.org/wiki/3-2:Event_gateways * Native support for a variety of different caching mechanisms * Native session management (CFML sessions or J2EE sessions) with `onSessionStart` and `onSessionEnd` triggers. * Built-in user authentication and roles functionality. == Security == CFML has built-in functionality for preventing code injection, via the `cfqueryparam` tag, and functions such as `HtmlEditFormat`, `XmlFormat`, `JsStringFormat`. There are also third-party CFML implementations of the OWASP Enterprise Security API,https://code.google.com/p/owasp-esapi-coldfusion/ and the AntiSamy project.http://www.petefreitag.com/item/760.cfm One of the key architecture decisions with Railo was to follow the JEE servlet model, with support for multiple independent web contexts on a single server. This is a key security factor, as it prevents unrelated applications from interfering with each other, as may happen on a shared ColdFusion server (which only has a single web context). == Syntax == Railo implements the CFML language - see the CFML syntax section for examples as well as CFScript. == Differences == === Differences from other languages === CFML has a tag-based syntax which is visually different from most other languages, though aside from this it is similar to other dynamic languages, with the following exceptions: * CFML contains two syntaxes, a tag-based syntax (not XML compliant) and a C-style syntax called cfscript. * Arrays in CFML are indexed from one, not from zero. * CFML supports both ordered and named function arguments, or a combination. * CFML does not have static variables. === Differences from Adobe ColdFusion === Whilst Railo implements CFML, and is generally compatible with Adobe ColdFusion (ACF), the original CFML engine, there are some notable differences between the two: * Railo is open-source LGPL v2.1 software. ACF is proprietary technology. * Railo uses a multi web context architecture, compared to ACF's single web context. * Railo allows you create \"built-in\" user-defined functions, using standard CFML. * Railo is unable to decrypt (or execute) templates that have been encrypted with ACF's encryption mechanism. * Railo has a significantly faster release cycle for major, minor, and patch releases. * In Railo, scopes always take priority. In ACF, creating a variable named \"Url\" may block access to the Url scope. In Railo, the variable can only be accessed as \"Variables.Url\". * Railo only searches for CFCs inside the custom tag path if defined accordingly in the administrator (it has a distinct CFC path instead). * Railo 4.x introduces a command line interface (CLI) that allows executing CFML scripts from the command line * Railo allows using object methods. So instead of using array Append (arr, \"value\") one can write: arr.append(\"value\").append(\"anotherValue\"). == See also == * Lucee - fork of Railo currently supported by Railo's original developers. * Adobe ColdFusion - the original CFML engine. * Open BlueDragon - another Open Source CFML engine. * CFML - the language Railo uses. == References == == External links == * Category:CFML compilers Category:CFML programming language ",
    "title": "Railo"
}
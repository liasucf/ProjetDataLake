{
    "id": "265268",
    "text": "E is a high performance theorem prover for full first-order logic with equality. It is based on the equational superposition calculus and uses a purely equational paradigm. It has been integrated into other theorem provers and it has been among the best-placed systems in several theorem proving competitions. E is developed by Stephan Schulz, originally in the Automated Reasoning Group at TU Munich, now at Baden-W\u00fcrttemberg Cooperative State University Stuttgart. ==System== The system is based on the equational superposition calculus. In contrast to most other current provers, the implementation actually uses a purely equational paradigm, and simulates non- equational inferences via appropriate equality inferences. Significant innovations include shared term rewriting (where many possible equational simplifications are carried out in a single operation), several efficient term indexing data structures for speeding up inferences, advanced inference literal selection strategies, and various uses of machine learning techniques to improve the search behaviour. Since version 2.0, E supports many-sorted logic. E is implemented in C and portable to most UNIX variants and the Cygwin environment. It is available under the GNU GPL. ==Competitions== The prover has consistently performed well in the CADE ATP System Competition, winning the CNF/MIX category in 2000 and finishing among the top systems ever since. In 2008 it came in second place.FOF division of CASC in 2008 In 2009 it won second place in the FOF (full first order logic) and UEQ (unit equational logic) categories and third place (after two versions of Vampire) in CNF (clausal logic). It repeated the performance in FOF and CNF in 2010, and won a special award as \"overall best\" system. In the 2011 CASC-23 E won the CNF division and achieved second places in UEQ and LTB. ==Applications== E has been integrated into several other theorem provers. It is, with Vampire, SPASS, CVC4, and Z3, at the core of Isabelle's Sledgehammer strategy. E also is the reasoning engine in SInE and LEO-II and used as the clausification system for iProver. Applications of E include reasoning on large ontologies, software verification, and software certification. ==References== ==External links== *E home page *E's developer Category:Free software programmed in C Category:Free theorem provers Category:Unix programming tools ",
    "title": "E (theorem prover)"
}
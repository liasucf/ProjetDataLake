{
    "id": "26978338",
    "text": "In mathematics, economics, and computer science, the Gale\u2013Shapley algorithm (also known as the deferred acceptance algorithm) is an algorithm for finding a solution to the stable matching problem, named for David Gale and Lloyd Shapley. It takes polynomial time, and the time is linear in the size of the input to the algorithm. Depending on how it is used, it can find either the solution that is optimal for the participants on one side of the matching, or for the participants on the other side. It is a truthful mechanism from the point of view of the participants for whom it provides the optimal solution. ==Background== The stable matching problem, in its most basic form, takes as input equal numbers of two types of participants ( men and women, or medical students and internships, for example), and an ordering for each participant giving their preference for whom to be matched to among the participants of the other type. A matching is not stable if: In other words, a matching is stable when there does not exist any match (A, B) which both prefer each other to their current partner under the matching. A stable matching always exists, and the algorithmic problem solved by the Gale\u2013Shapley algorithm is to find one. ==Solution== Animation showing an example of the Gale\u2013Shapley algorithm In 1962, David Gale and Lloyd Shapley proved that, for any equal number of men and women, it is always possible to solve the SMP and make all marriages stable. They presented an algorithm to do so.Harry Mairson: \"The Stable Marriage Problem\", The Brandeis Review 12, 1992 (online). The Gale\u2013Shapley algorithm involves a number of \"rounds\" (or \"iterations\"): * In the first round, first a) each unengaged man proposes to the woman he prefers most, and then b) each woman replies \"maybe\" to her suitor she most prefers and \"no\" to all other suitors. She is then provisionally \"engaged\" to the suitor she most prefers so far, and that suitor is likewise provisionally engaged to her. * In each subsequent round, first a) each unengaged man proposes to the most- preferred woman to whom he has not yet proposed (regardless of whether the woman is already engaged), and then b) each woman replies \"maybe\" if she is currently not engaged or if she prefers this man over her current provisional partner (in this case, she rejects her current provisional partner who becomes unengaged). The provisional nature of engagements preserves the right of an already-engaged woman to \"trade up\" (and, in the process, to \"jilt\" her until- then partner). * This process is repeated until everyone is engaged. The runtime complexity of this algorithm is O(n^2) where n is the number of men or women. This algorithm guarantees that: ; Everyone gets married : At the end, there cannot be a man and a woman both unengaged, as he must have proposed to her at some point (since a man will eventually propose to everyone, if necessary) and, being proposed to, she would necessarily be engaged (to someone) thereafter. ; The marriages are stable : Let Alice and Bob both be engaged, but not to each other. Upon completion of the algorithm, it is not possible for both Alice and Bob to prefer each other over their current partners. If Bob prefers Alice to his current partner, he must have proposed to Alice before he proposed to his current partner. If Alice accepted his proposal, yet is not married to him at the end, she must have dumped him for someone she likes more, and therefore doesn't like Bob more than her current partner. If Alice rejected his proposal, she was already with someone she liked more than Bob. ==Algorithm== algorithm stable_matching is Initialize all m \u2208 M and w \u2208 W to free while \u2203 free man m who still has a woman w to propose to do w := first woman on m's list to whom m has not yet proposed if w is free then (m, w) become engaged else some pair (m', w) already exists if w prefers m to m' then m' becomes free (m, w) become engaged else (m', w) remain engaged end if end if repeat ==Optimality of the solution== Proof that deferred acceptance is optimal for men The existence of different stable matchings raises the question: which matching is returned by the Gale-Shapley algorithm? Is it the matching better for men, for women, or the intermediate one? In the above example, the algorithm converges in a single round on the men-optimal solution because each woman receives exactly one proposal, and therefore selects that proposal as her best choice, ensuring that each man has an accepted offer, ending the match. This is a general fact: the Gale-Shapley algorithm in which men propose to women always yields a stable matching that is the best for all men among all stable matchings. Similarly, if the women propose then the resulting matching is the best for all women among all stable matchings. These two matchings are the top and bottom elements of a larger structure on all stable matchings, the lattice of stable matchings. To see this, consider the illustration at the right. Let A be the matching generated by the men-proposing algorithm, and B an alternative stable matching that is better for at least one man, say m0. Suppose m0 is matched in B to a woman w1, which he prefers to his match in A. This means that in A, m0 has visited w1, but she rejected him (this is denoted by the green arrow from m0 to w1). w1 rejected him in favor of some man that she prefers, say m2. So in B, w1 is matched to m0 but \"yearns\" (wants but unmatched) for m2 (this is denoted by the red arrow from w1 to m2). Since B is a stable matching, m2 must be matched in B to some woman he prefers to w1, say w3. This means that in A, m2 has visited w3 before arriving at w1, which means that w3 has rejected him. By similar considerations, and since the graph is finite, we must eventually have a directed cycle in which each man was rejected in A by the next woman in the cycle, who rejected him in favor of the next man in the cycle. But this is impossible since such \"cycle of rejections\" cannot start anywhere: suppose by contradiction that it starts at e.g. m0 \\- the first man rejected by his adjacent woman (w1). By assumption, this rejection happens only after m2 comes to w1. But this can happen only after w3 rejects m2 \\- contradiction to m0 being the first. == Strategic considerations == The GS algorithm is a truthful mechanism from the point of view of men (the proposing side). I.e, no man can get a better matching for himself by misrepresenting his preferences. Moreover, the GS algorithm is even group-strategy proof for men, i.e., no coalition of men can coordinate a misrepresentation of their preferences such that all men in the coalition are strictly better-off. However, it is possible for some coalition to misrepresent their preferences such that some men are better-off and the other men retain the same partner. The GS algorithm is non- truthful for the women (the reviewing side): each woman may be able to misrepresent her preferences and get a better match. ==Implementation in software packages== *R: The Gale\u2013Shapley algorithm (also referred to as deferred-acceptance algorithm) for the stable marriage and the hospitals/residents problem is available as part of the `matchingMarkets` and `matchingR` packages. *API: The MatchingTools API provides a free application programming interface for the Gale\u2013Shapley algorithm. *Python: The Gale\u2013Shapley algorithm is included along with several other well-known matching game algorithms in the `matching` library, and `QuantEcon/MatchingMarkets.py` package includes several others for generalized matching games. *MATLAB: The Gale\u2013Shapley algorithm is implemented in the `assign2DStable` function that is part of the United States Naval Research Laboratory's free Tracker Component Library. ==See also== *Deferred-acceptance auction ==References== ==External links== *Gale\u2013Shapley JavaScript Demonstration Category:Stable matching Category:Lloyd Shapley Category:Algorithms ",
    "title": "Gale\u2013Shapley algorithm"
}
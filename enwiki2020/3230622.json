{
    "id": "3230622",
    "text": "JIS X 0201, a Japanese Industrial Standard developed in 1969 (then called JIS C 6220 until the JIS category reform), was the first Japanese electronic character set to become widely used. It is either 7-bit encoding or 8-bit encoding, although 8-bit encoding is dominant for modern use. The full name of this standard is 7-bit and 8-bit coded character sets for information interchange (). The first 96 codes comprise an ISO 646 variant, mostly following ASCII with some differences, while the second 96 character codes represent the phonetic Japanese katakana signs. Since the encoding does not provide any way to express hiragana or kanji, it is only capable of expressing simplified written Japanese. Nevertheless, it is possible to express, at least phonetically, the full range of sounds in the language. In the 1980s, this was acceptable for media such as text mode computer terminals, telegrams, receipts or other electronically handled data. JIS X 0201 was supplanted by subsequent encodings such as Shift JIS (which combines this standard and JIS X 0208) and later Unicode. ==History== The Comite Consultatif International Telephonique et Telegraphique (CCITT) introduced the International Telegraph Alphabet No.2 (ITA2) code as an international standard, which was the 5-bit Latin encoding. Most countries have their own national standards based on this. In Japan, the Agency of Industrial Science and Technology (AIST) standardized it as the 6-bit character codes of JIS C 0803-1961 (Keyboard layout and codes for teleprinters), which combined with katakana characters. However, it didn't match the industry requirements because the character map was small, and the code layout was impractical. The AIST considered a practical character encoding to replace various codes used in Japan. In 1963, ISO introduced a draft of ISO R 646 (6 and 7-bit coded character sets for information processing interchange). AIST committed the conjunction of ISO R 646 and katakana mapping to the Information Processing Society of Japan (IPSJ). IPSJ formed the code standardization committee. The committee didn't adopt the 6-bit form of ISO's draft because the katakana set couldn't fit into its character map. The early JIS draft mapped small katakana characters next to each of their normal katakana characters. It was considered to be convenient for sorting by Goj\u016bon order. Some committee members criticized it would complicate the mechanic of keyboards which only handled normal katakana characters. The later draft mapped small katakana characters to positions 0xA7-0xAF. In 1966, the fourth draft of ISO specified the national currency symbol at 0x24, and the JIS committee planned to map the yen sign. The first edition of ISO 646 was published in 1967. It specified the ASCII's dollar sign 0x24 as the invariant character, so the JIS committee decided to replace the ASCII's backslash 0x5c (one of variant characters) with the yen sign. However, CCITT introduced the International Alphabet No.5 (IA5) in 1968, which stated that there was no requirement for the dollar sign and it could be replaced with the international currency sign (\u00a4). ISO 646 was revised in 1973 to conform with IA5. JIS C 6220 (Codes for information interchange, \u60c5\u5831\u4ea4\u63db\u7528\u7b26\u53f7) was published in 1969. Its number was changed to JIS X 0201 due to the JIS category reform in 1987, and the name was changed to 7-bit and 8-bit coded character sets for information interchange (7\u30d3\u30c3\u30c8\u53ca\u30738\u30d3\u30c3\u30c8\u306e\u60c5\u5831\u4ea4\u63db\u7528\u7b26\u53f7\u5316\u6587\u5b57\u96c6\u5408) in the 1990 edition. The character set of JIS X 0201 had been widely used in Japan. The Nationwide Banking Data Communication System (\u5168\u56fd\u9280\u884c\u30c7\u30fc\u30bf\u901a\u4fe1\u30b7\u30b9\u30c6\u30e0), the largest funds transfer system in Japan, was established in 1973. Transaction messages between banks used a subset of JIS X 0201. The system had been used until 2018, and it was replaced by the ZEDI (The Nationwide Banking Electronic Data Interchange System, \u5168\u9280EDI\u30b7\u30b9\u30c6\u30e0) which could handle hiragana and kanji characters. In 1978, JIS C 6226 (JIS X 0208) 2-byte character set was developed to express hiragana and kanji characters. It includes katakana characters, but their codes and layout are different from JIS X 0201. Computer manufacturers developed their own extensions of JIS X 0208 to retain compatibility with JIS X 0201. In 1982, the Microsoft Kanji encoding scheme (Codepage 932 of MS-DOS) and Digital Research's SJC26 (for Japanese CP/M-86) were developed to combine JIS X 0201 single-byte encoding and JIS X 0208 double byte encoding without shift out and shift in characters. They were called Shift JIS, which became the industrial standard for personal computers. ==Implementation details== 7-bit Roman (shift in) set 7-bit Kana (shift out) set The first half (Roman set) of JIS X 0201 constitutes a Japanese variant of ISO 646, amounting to ASCII with backslash (\\\\) and tilde (~) replaced by yen (\u00a5) and overline (\u203e), while the second half (Kana set) consists mainly of katakana. Control characters are specified in JIS X 0211. In the 7-bit format, the shift out control character (0x0E) switches to the Kana set and shift in (0x0F) switches to the Roman set. In the 8-bit format, given in the chart below, bytes with the most significant bit set (i.e. 0x80-0xFF) are used for the Kana set and bytes with it unset (i.e. 0x00-0x7F) are used otherwise. Names used specifically for the 7-bit Roman set include \"JISCII\", \"JIS Roman\", \"ISO646-JP\", \"JIS C6220-1969-ro\", \"Japanese-Roman\", \"Japan 7-Bit Latin\", and \"ISO-IR-14\", whereas names used specifically for the 7-bit Kana set include \"ISO-IR-13\", \"JIS C6220-1969-jp\" and \"x0201-7\". The substitution of the yen symbol for backslash can make paths on DOS and Windows-based computers with Japanese support display strangely, like \"C:\u00a5Program Files\u00a5\", for example. Another similar problem is C programming language's control characters of string literals, like `printf(\"Hello, world.\u00a5n\");`. ==Codepage layout== The following table is the original 8-bit coded character set of JIS X 0201 (with the kana set indicated by bytes with the high bit set). {| |- ! | colspan=\"16\" rowspan=\"2\" | |- ! |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! | colspan=\"16\" rowspan=\"2\" | |- ! |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |} ===As part of Shift JIS=== Following is the mapping used for JIS X 0201 as part of Shift_JIS, i.e. showing the 8-bit form of JIS X 0201, and mapping the Katakana characters to the Halfwidth and Fullwidth Forms block (which in turn derives its half width kana layout from JIS X 0201). {| |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || |style=\"background-color: #fbb;\"| |style=\"background- color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |- ! |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |- ! |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| |style=\"background-color: #fbb;\"| || || || |} Red cells indicate first bytes of double-byte Shift JIS characters. === Alternative mapping of katakana === The basic ISO-2022-JP profile does not permit the Kana set of JIS X 0201, only the Roman set and JIS X 0208 (although ISO 2022 / JIS X 0202 itself permits it). Accordingly, when converting JIS X 0201 katakana (or Unicode half-width kana, which use the same layout) to ISO-2022-JP, the following mapping or transformation is often used. This allows the kana to be converted to JIS X 0208. In theory, this mapping is equally correct, as JIS X 0201 itself does not specify display width, although in practice (and especially in duospaced environments) JIS X 0201 is used for half-width katakana. For ease of comparison with the chart above, the mapping is shown below over the JIS X 0201 katakana encoding and with the high bit set. {| |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- |} ==Variants and extensions== ===Shift JIS=== ===IBM's implementations=== Code page 897 is IBM's implementation of the 8-bit form of JIS X 0201. It includes several additional graphical characters in the C0 control characters area, and the code points in question may be used as control characters or graphical characters depending on the context, similarly in concept to OEM-US, but with different graphical characters. The C0 rows are shown below. {| |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |} IBM also implements the 7-bit Roman set of JIS X 0201 as Code page 895 and the 7-bit Kana set as Code page 896 for use as ISO 2022 or EUC-JP code-sets. Code page 896, in addition to standard JIS X 0201 assignments, defines five additional assignments, shown below. Although use of these extended characters is not permitted by the associated CCSID 896, they are permitted by the alternative CCSID 4992. {| |- ! || || || || || || || || || || || || || || || || |} IBM's Code page 1041 is an extended version of Code page 897, encoding these five IBM extended characters in alternative locations which are compatible with Shift JIS (respectively 0x80, 0xA0, 0xFD, 0xFE and 0xFF). IBM's Code page 903 is encoded for use as the single byte component of certain simplified Chinese character encodings. Despite this, it follows ISO 646-JP / the Roman half of JIS X 0201, in that it replaces the ASCII backslash 0x5C (rather than the ASCII dollar sign 0x24 as in GB 1988 / ISO 646-CN) with the yen/yuan sign. It also uses the same C0 replacement graphics as code page 897. It is closely related to Code page 904, which is encoded for use as the single byte component of certain traditional Chinese character encodings, and uses the same C0 replacement graphics, but follows ASCII. ===Others=== File:PC-8001 character set.png|NEC PC-8001 (1979) character set as rendered in the 8\u00d78 pixel font File:NEC-C-6220-paths.svg|NEC variant used on the PC98 series. File:Charset.gif|Hitachi variant used on the HD44780. ==Footnotes== ==References== ==External links== * Diagram of JIS X 0201 (as 7-bit code sets) Category:Encodings of Japanese Category:JIS standards Category:Computer- related introductions in 1969 ",
    "title": "JIS X 0201"
}
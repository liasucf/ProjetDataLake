{
    "id": "46837303",
    "text": "In re Lowry, 32 F.3d 1579 (Fed. Cir. 1994) was a 1994 decision of the United States Court of Appeals for the Federal Circuit on the patent eligibility of data structures. The decision, which reversed a PTO rejection of data structure claims, was followed by a significant change in PTO policy as to granting software related patents, a cessation of PTO appeals to the Supreme Court from reversals of PTO rejections of software patent applications, an increasing lenity at the Federal Circuit toward such patents and patent applications, and a great increase in the number of software patents issued by the PTO. ==Background== Edward S. Lowry filed a computer software patent application in which he described an application program that managed database information by using software data structures that he called \"attribute data objects\" (ADOs). An ADO is a single primitive data element \"compris[ing] sequences of bits which are stored in the memory as electrical (or magnetic) signals that represent information.\"Lowry, 32 F.3d at 1580-81. According to Lowry's patent application, \"[a]n attribute expresses the idea that one thing is attributed to another thing.\" Thus, the Attributive data model capitalizes on the concept that a database is a collection of attributions, whereby information is represented in terms of its characteristics and relationships to other information. Lowry asserted that using ADOs provided a more efficient method for storing, retrieving, adding, and removing information from a database. Claim 1 was considered representative. It provided: > 1\\. A memory for storing data for access by an application program being > executed on a data processing system, comprising: a data structure stored in > said memory, said data structure including information resident in a > database used by said application program and including: a plurality of > attribute data objects stored in said memory, each of said attribute data > objects containing different information from said database; a single holder > attribute data object for each of said attribute data objects, each of said > holder attribute data objects being one of said plurality of attribute data > objects, a being-held relationship existing between each attribute data > object and its holder attribute data object, and each of said attribute data > objects having a being-held relationship with only a single other attribute > data object, thereby establishing a hierarchy of said plurality of attribute > data objects; a referent attribute data object for at least one of said > attribute data objects, said referent attribute data object being > nonhierarchically related to a holder attribute data object for the same at > least one of said attribute data objects and also being one of said > plurality of attribute data objects, attribute data objects for which there > exist only holder attribute data objects being called element data objects, > and attribute data objects for which there also exist referent attribute > data objects being called relation data objects; and an apex data object > stored in said memory and having no being-held relationship with any of said > attribute data objects, however, at least one of said attribute data objects > having a being-held relationship with said apex data object. The examiner rejected all of Lowry's claims as so-called printed matter. That is, they were directed to information stored on a medium (\"substrate\") without any unobvious cooperation between the medium and the information to provide a useful function.This test comes from the Federal Circuit\u2019s decision in The PTO Board of Appeals sustained the examiner's rejection of all claims. The claimed data structures were stored into a computer memory, but they did not sufficiently interact with the memory to provide a functional relationship with it. Accordingly, the ADOs were not \"patentably distinguished\" from the prior art,The Kumpati patent was \"a CPU using a memory and containing stored data in a data structure,\" so the Board found that it made the claimed ADOs unpatentable. making them obvious or anticipated, and thus unpatentable. Lowry then appealed to the Federal Circuit. ==Federal Circuit opinion== On appeal, the Federal Circuit panel reversed the Board's rejection of the patent application. The court held, per Judge Rader, that all of Lowry's software data structure claims were patentable. It disagreed, first, that the ADOs were printed matter. It said that a data structure stored in a memory does not convey \"intelligence to a reader.\" It had to \"be processed . . . by a machine, the computer'\" to do that. That kept the ADOs from being printed matter: \"The printed matter cases have no factual relevance where the invention as defined by the claims requires that the information be processed not by the mind but by a machine, the computer.\"Lowry, 32 F.3d at 1583. This is based on and quotes In re Bernhart, 417 F.2d 1395, 1399 (C.C.P.A. 1969). See Piano roll blues Wikipedia article for further discussion of this doctrine. The court also maintained that Lowry's claimed data structure did sufficiently interact with the substrate (the computer memory) to satisfy the functional relationship standard. The court asserted that, at the lowest physical level, storing data structures into a memory actually imposed a physical organization on that memoryLowry, 32 F.3d at 1583. This is equivalent to saying that a computer program converts a computer into a new machine by programming it, as in Bernhart and as discussed in the Piano roll blues article. Moreover, the court said, storing the ADOs into computer memory resulted in more efficient computer operation.Lowry, 32 F.3d at 1584. There was a functional relationship between the ADOs and memory, the court maintained, even though a human being could not see any physical changes. The examiner and Board had denied this. They said that the provision of new signals to be stored by the computer does not make it a new machine, i.e. the computer is structurally the same, \"no matter how new, useful and unobvious the result.\" The court replied: To this question we say that if a machine is programmed in a certain new and unobvious way, it is physically different from the machine without that program; its memory elements are differently arranged. The fact that these physical changes are invisible to the eye should not tempt us to conclude that the machine has not been changed.Lowry, 32 F.3d at 1583. This is quoted from the Bernhart case. The court stated: \"The PTO did not establish that the ADOs, within the context of the entire claims, lack a new and nonobvious functional relationship with the memory.\" Under prevailing Federal Circuit patent law doctrine, the court noted, it was the burden of the PTO to prove that this relationship was obvious.See Since that had not been done, the Federal Circuit said, the rejection must be reversed. ==Impact and aftermath== The Lowry case marked a turning point in the Federal Circuit's patent-eligibility analysis of computer software cases and the PTO's policy about issuing such patents. The Federal Circuit began to abandon the policy reflected in such cases as In re Schrader, See Software patents under United States patent law#Pre-1994 period. which emphasized the importance of hardware elements to provide patent eligibility for software,See Freeman-Walter-Abele Test. and developed its own standards for patent eligibility that were different from those of Supreme Court precedents. Eventually, according to a 2006 dissenting opinion of several Supreme Court Justices, the Federal Circuit evolved a legal standard for patent eligibility under which it held claims patent eligible \"where this Court has held the contrary.\"Laboratory Corp. of Amer. Holdings v. Metabolite Laboratories, 548 U.S. 124, 136 (2006). After the Lowry decision, the PTO stopped resisting the grant of software-related patents. In a series of cases from Gottschalk v. Benson and Parker v. Flook in the early 1970s to Diamond v. Diehr in the early 1980s, the Department of Justice had supported the Patent Office and PTO's appeals from judicial decisions overturning the agency's rejections of computer software patents. But the Solicitor General\u2019s office (which is in charge at the Justice Department of appeals to the Supreme Court) declined to allow the PTO to seek Supreme Court review of Lowry, allegedly \"because it [Lowry] was a confusing and unsuitable vehicle.\"George Washington Univ. Law School, Computer Law, ch. 8-C, Note 3. \"The USPTO gets ready to throw in the towel,\" cartoon published in IEEE Micro in July 1995 In addition, personnel changes at the Justice Department and PTO occurred that lessened support for such appeals.See Software Patents; George Washington Univ. Law School, Computer Law, ch. 8-C, Beauregard case, Note 3 (\"It seemed time for the PTO to throw in the towel.\"). A cartoon in IEEE Micro magazine illustrated the point. GAO Analysis of US PTO Data Showing Number of Software and Non-Software Patents Issued Each Year From 1991 to 2011 After 1994, therefore, the PTO began to issue many software and business-method patents. In 1991, software related patents represented about 20 percent of the yearly total; by 2011 they accounted for about 50 percent. The absolute number of software patents rose from about 25,000 per year to 125,000 per year in this period. An accompanying graph shows a GAO analysis of such data. This course of action continued until well after 2000, when substantial personnel changes had occurred both within the PTO and the Federal Circuit. These changes led to the Federal Circuit's In re Bilski decision that led to Bilski v. Kappos and in 2013 the Supreme Court's decision followed in Alice Corp. v. CLS Bank International. These decisions inaugurated a new era in computer software patent-eligibility law. Under the legal analysis now prescribed in the Alice case, the ADO of claim 1 in Lowry today probably would be held a patent- ineligible abstract idea.In Digitech Image Technologies, LLC v. Electronics for Imaging, Inc., 758 F. 3d 1344 (2014), the Federal Circuit held, \"Without additional limitations, a process that employs mathematical algorithms to manipulate existing information to generate additional information is not patent eligible.\" ==References== ==External links== * Category:Software patent case law Category:United States Court of Appeals for the Federal Circuit cases Category:United States patent case law Category:1994 in United States case law ",
    "title": "In re Lowry"
}
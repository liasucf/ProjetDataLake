{
    "id": "2214548",
    "text": "gtkmm (formerly known as gtk-- or gtk minus minusThe gtkmm FAQ) is the official C++ interface for the popular GUI library GTK. gtkmm is free software distributed under the GNU Lesser General Public License (LGPL). gtkmm allows the creation of user interfaces either in code or with the Glade Interface Designer, using the Gtk::Builder class. Other features include typesafe callbacks, a comprehensive set of graphical control elements, and the extensibility of widgets via inheritance. ==Features== Because gtkmm is the official C++ interface of the GUI library GTK, C++ programmers can use the common OOP techniques such as inheritance, and C++-specific facilities such as STL (In fact, many of the gtkmm interfaces, especially those for widget containers, are designed to be similar to the Standard Template Library (STL)). Main features of gtkmm are listed as follows: * Use inheritance to derive custom widgets. * Type-safe signal handlers, in standard C++. * Polymorphism. * Use of Standard C++ Library, including strings, containers, and iterators. * Full internationalization with UTF-8. * Complete C++ memory management. ** Object composition. ** Automatic de-allocation of dynamically allocated widgets. * Full use of C++ namespaces. * No macros. * Cross- platform: Linux (gcc, LLVM), FreeBSD (gcc, LLVM), NetBSD (gcc), Solaris (gcc, Forte), Win32 (gcc, MSVC++), macOS (gcc), others. ==Hello World in gtkmm== //HelloWorldWindow.h #ifndef HELLOWORLDWINDOW_H #define HELLOWORLDWINDOW_H #include #include // Derive a new window widget from an existing one. // This window will only contain a button labelled \"Hello World\" class HelloWorldWindow : public Gtk::Window { public: HelloWorldWindow(); protected: Gtk::Button hello_world; }; #endif //HelloWorldWindow.cc #include #include \"HelloWorldWindow.h\" HelloWorldWindow::HelloWorldWindow() : hello_world(\"Hello World\") { // Set the title of the window. set_title(\"Hello World\"); // Add the member button to the window, add(hello_world); // Handle the 'click' event. hello_world.signal_clicked().connect([] () { std::cout << \"Hello world\" << std::endl; }); // Display all the child widgets of the window. show_all_children(); } //main.cc #include #include \"HelloWorldWindow.h\" int main(int argc, char *argv[]) { // Initialization Gtk::Main kit(argc, argv); // Create a hello world window object HelloWorldWindow example; // gtkmm main loop Gtk::Main::run(example); return 0; } The above program will create a window with a button labeled \"Hello World\". The button sends \"Hello world\" to standard output when clicked. The program is run using the following commands: $ g++ -std=c++11 *.cc -o example `pkg-config gtkmm-3.0 --cflags --libs` $ ./example This is usually done using a simple makefile. ==Applications== Some notable applications that use gtkmm include: * Amsynth * Cadabra (computer program) * Inkscape Vector graphics drawing. *Horizon EDA an Electronic Design Automation package for printed circuit board design. *PDF Slicer A simple application to extract, merge, rotate and reorder pages of PDF documents. * Workrave Assists in recovery and prevention of RSI. * Gnome System Monitor * Gigedit * GParted disk partitioning tool. * Nemiver GUI for the GNU debugger gdb. * PulseAudio tools: pavucontrol, paman, paprefs pavumeter, * RawTherapee * GNOME Referencer document organiser and bibliography manager * Seq24 * Synfig Studio * Linthesia * MySQL Workbench Administrator Database GUI. * Ardour Open Source digital audio workstation (DAW) for Linux and MacOS. * Gnote desktop notetaking application. * VisualBoyAdvance * VMware Workstation and VMware Player both use gtkmm for their Linux ports. ==See also== * GTK * wxWidgets * FLTK * FOX toolkit * Qt * VCF ==References== ==External links== * * Category:Articles with example C++ code Category:C++ libraries Category:Free computer libraries Category:Free software programmed in C++ Category:GTK language bindings Category:Software using the LGPL license ",
    "title": "Gtkmm"
}
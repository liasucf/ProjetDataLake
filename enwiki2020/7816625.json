{
    "id": "7816625",
    "text": "The package-merge algorithm is an O(nL)-time algorithm for finding an optimal length-limited Huffman code for a given distribution on a given alphabet of size n, where no code word is longer than L. It is a greedy algorithm, and a generalization of Huffman's original algorithm. Package-merge works by reducing the code construction problem to the binary coin collector's problem. ==The coin collector's problem== Suppose a coin collector has a number of coins of various denominations, each of which has a numismatic value unrelated to its denomination. The coin collector has run out of money and needs to use some of his coin collection to buy something of cost N. He wishes to select a subset of coins from his collection of minimum numismatic value whose denominations total N. The binary version of this problem is that all denominations are powers of 2, that is, 1, 1/2, 1/4, etc. dollars. ==Description of the package-merge algorithm== Assume that the largest denomination is 1 dollar, and that N is an integer. (The algorithm works even if these assumptions do not hold, by trivial modifications.) The coin collector first separates his coins into lists, one for each denomination, sorted by numismatic value. He then packages the smallest denomination coins in pairs, starting from the pair of smallest total numismatic value. If there is one coin left over, it will be the coin of highest numismatic value of that denomination, and it is set aside and ignored henceforth. These packages are then merged into the list of coins of the next smallest denomination, again in order of numismatic value. The items in that list are then packaged in pairs, and merged into the next smallest list, and so forth. Finally, there is a list of items, each of which is a 1 dollar coin or a package consisting of two or more smaller coins whose denominations total 1 dollar. They are also sorted in order of numismatic value. The coin collector then selects the least value N of them. Note that the time of the algorithm is linear in the number of coins. ==Reduction of length-limited Huffman coding to the coin collector's problem== Let L be the maximum length any code word is permitted to have. Let p1, \u2026, pn be the frequencies of the symbols of the alphabet to be encoded. We first sort the symbols so that pi \u2264 pi+1. Create L coins for each symbol, of denominations 2\u22121, \u2026, 2\u2212L, each of numismatic value pi. Use the package-merge algorithm to select the set of coins of minimum numismatic value whose denominations total n \u2212 1\\. Let hi be the number of coins of numismatic value pi selected. The optimal length-limited Huffman code will encode symbol i with a bit string of length hi. The canonical Huffman code can easily be constructed by a simple bottom-up greedy method, given that the hi are known, and this can be the basis for fast data compression. ==Performance improvements and generalizations== With this reduction, the algorithm is O(nL)-time and O(nL)-space. However, the original paper, \"A fast algorithm for optimal length-limited Huffman codes\", shows how this can be improved to O(nL)-time and O(n)-space. The idea is to run the algorithm a first time, only keeping enough data to be able to determine two equivalent subproblems that sum to half the size of the original problem. This is done recursively, resulting in an algorithm that takes about twice as long but requires only linear space. Many other improvements have been made to the package-merge algorithm to reduce the multiplicative constant and to make it faster in special cases, such as those problems having repeated pis. The package-merge approach has also been adapted to related problems such as alphabetic coding. Methods involving graph theory have been shown to have better asymptotic space complexity than the package-merge algorithm, but these have not seen as much practical application. ==References== ==External links== * * * An implementation of the package-merge algorithm \"\" * A fast entropy coder that uses package-merge algorithm Category:Lossless compression algorithms Category:Coding theory ",
    "title": "Package-merge algorithm"
}
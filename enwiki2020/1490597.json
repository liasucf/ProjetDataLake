{
    "id": "1490597",
    "text": "The Magic User Interface (MUI in short) is an object-oriented system by Stefan Stuntz to generate and maintain graphical user interfaces. With the aid of a preferences program, the user of an application has the ability to customize the system according to personal taste. The Magic User Interface was written for AmigaOS and gained popularity amongst both programmers and users. It has been ported to PowerPC processors and adopted as the default GUI toolkit of the MorphOS operating system. The MUI application programmer interface has been cloned by the Zune toolkit used in the AROS Research Operating System. ==History== Creating GUI applications on Amiga was difficult for a very long time, mainly because the programmer got only a minuscule amount of support from the operating system. Beginning with Kickstart 2.0, the gadtools.library was a step in the right direction, however, even using this library to generate complex and flexible interfaces remained difficult and still required a great deal of patience. The largest problem in existing tools for the creation of user interfaces was the inflexible output. Most of the programs were still using built-in fonts and window sizes, thus making the use of new high resolution graphics hardware adapters nearly unbearable. Even the preference programs on the Workbench were still only using the default fixed- width font. In 1992 Stefan Stuntz started developing new object-oriented GUI toolkit for Amiga. Main goals for new GUI toolkit were: * Font sensitivity Possible for the font to be set in every application. * Changeable window sizes Windows have a sizing gadget which allows users to change the window size until it suits their needs * Flexibility Elements can be changed by the user regarding their own personal tastes. * Controlling by keyboard Widgets can be controlled by the keyboard as well as by the mouse. * System integration Every program has an ARexx port and can be iconified or uniconified by pushing a gadget or by using the Commodities exchange program. * Adjusting to its environment Every application can be made to open on any screen and adapts itself to its environment.Stuntzi, S: MUI User Documentation. 1997 MUI was released as shareware. Starting from MUI 3.9 unrestricted version is integrated with MorphOS but shareware key is still required to activate all user configuration options in AmigaOS. ==Application theory== UI development is done at source-code level without the aid of GUI builders. In MUI application the programmer only defines logical structure of the GUI and the layout is determined on run time depending on user configuration. Unlike on other GUI toolkits developer does not determine exact coordinates for UI objects but only their relative placement to each other using object groups. In traditional Intuition-based UI coding programmer had to calculate placement of gadgets relative to font and border sizes. By default all UI elements are resizable and change their size to match window size. It can also automatically switch into smaller font or hide UI elements if there is not enough space on screen to display window with full contents. This makes it very easy to build UI which adapts well to tiny and large displays as well.Stuntzi, S: MUI Programmer Documentation. 1997 There are over 50 built-in MUI classes today and various third-party MUI classes. ===Example=== // Complete MUI application #include #include // Sample application: ApplicationObject, SubWindow, WindowObject, WindowContents, VGroup, Child, TextObject, MUIA_Text_Contents, \"Hello World!\", End, End, End, End; This example code creates small MUI application with the text \"Hello World!\" displayed on it. It is also possible embed other BOOPSI based GUI toolkit objects inside MUI application. ==Applications== Some notable applications that use MUI as a widget toolkit include: * Aladdin4D - 3D rendering/animation application * Ambient - desktop environment * AmIRC - IRC client * Digital Universe - desktop planetarium * IBrowse - web browser * Origyn Web Browser - web browser * PageStream - desktop publishing * SimpleMail - email client * Voyager - web browser * YAM - email client ==Other GUI toolkits== Currently there are two main widget toolkits in the Amiga world, which are competing with each other. The most widely used is MUI (adopted into AROS, MorphOS and in most Amiga programs), the other one is ReAction which was adopted in AmigaOS 3.5. There is in development a GTK MUI wrapper and it will allow the porting of various GTK based software. There is also modern interfaces based on XML, Feelin. ==Palette extension to Workbench defaults== MUI extended Workbench's four-colour palette with four additional colours, allowing smoother gradients with less noticeable dithering. The MagicWB companion to MUI made use of this extended palette to provide more attractive icons to replace the dated Workbench defaults. MUI 4 added support for alpha blending and support for user defined widget shapes. {| class=\"wikitable\" style=\"margin-left:auto;margin-right:auto;\" ! !! colspan=\"8\" | MUI eight-colour palette |- ! Colour | style=\"background:rgb(149,149,149);\"| | style=\"background:rgb(000,000,000);\"| | style=\"background:rgb(255,255,255);\"| | style=\"background:rgb(59,103,162);\"| | style=\"background:rgb(123,123,123);\"| | style=\"background:rgb(175,175,175);\"| | style=\"background:rgb(170,144,124);\"| | style=\"background:rgb(255,169,151);\"| |- ! Red | 149 || 000 || 255 || 59 || 123 || 175 || 170 || 255 |- ! Green | 149 || 000 || 255 || 103 || 123 || 175 || 144 || 169 |- ! Blue | 149 || 000 || 255 || 162 || 123 || 175 || 124 || 151 |} ==See also== * ReAction GUI (ClassAct) * Zune ==References== ==External links== * MUI homepage * Unofficial MUI nightly build directory * Tutorial Category:Widget toolkits Category:Amiga APIs Category:Amiga software Category:AmigaOS Category:AmigaOS 4 software Category:MorphOS ",
    "title": "Magic User Interface"
}
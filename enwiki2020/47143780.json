{
    "id": "47143780",
    "text": "This page provides the comparison tables of functional programming instructions between programming languages. Comparison of basic instructions of imperative paradigm is provided by the comparison of basic instructions. == List operations == === Function applications and lists === For brevity, these words will be have the specified meanings in the following tables (unless noted to be part of language syntax): ;: A function. May be unary or n-ary (or always unary for languages without n-ary functions). :;, , etc.: functions of specific arity. (with no number) is the same as , also known as a projection in many languages. ;: Unary function returning a Boolean value. (ML type: ) (C-like type: ). ;: The list being operated on. ;: Comma-separated list of one or more argument names, in the form of . ;: A pattern, in languages with pattern matching. ;: Any relevant value, depending on context. {| class=\"wikitable\" ! ! identity lambda ! lambda !map !apply ! filter !fold ! sum |- |Python | | | | | | | |- |Mathematica | | (arguments are , , etc.) | | | | | |- |C# | | | rowspan=\"2\" | | rowspan=\"3\" |Requires reflection | rowspan=\"2\" | | rowspan=\"2\" | | rowspan=\"2\" | |- |Visual Basic .NET | | |- |F# (can use Enumerable as well) |(built-in) | | | | | |} === Numerical operations on lists === ;: a binary function that returns a value indicating sort order (an integer in most languages). {| class=\"wikitable\" ! ! sort ! max ! min |- | Python | | | |- | Mathematica | | | |- |C# | rowspan=\"2\" | | rowspan=\"2\" | | rowspan=\"2\" | |- |Visual Basic .NET |- |F# | | | |} === Iterations on lists === {| class=\"wikitable\" ! ! group by |- | Python | |- | Mathematica | |- |C# | rowspan=\"2\" | |- |Visual Basic .NET |- |F# |seq.groupBy func list |} === Generating lists by combinatorics tools === ;start: first value of range. ;step: increment of range. ;count: number of items in range. ;last: inclusive last value of range. ;end: exclusive last value of range. {| class=\"wikitable\" ! ! Generate range (lazily) ! Infinite range (lazily) |- | Python | (Python 2) (Python 3) | |- |C# | rowspan=\"2\" | | rowspan=\"2\" | |- |Visual Basic .NET |- |F# |} | |} == References == *functional programming ",
    "title": "Comparison of programming languages (functional programming)"
}
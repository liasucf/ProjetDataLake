{
    "id": "1429083",
    "text": "This article lists communication protocols that are designed for file transfer over a telecommunications network. Protocols for shared file systems\u2014such as 9P and the Network File System\u2014are beyond the scope of this article, as are file synchronization protocols. ==Protocols for packet-switched networks== A packet-switched network transmits data that is divided into units called packets. A packet comprises a header (which describes the packet) and a payload (the data). The Internet is a packet-switched network, and most of the protocols in this list are designed for its protocol stack, the IP protocol suite. They use one of two transport layer protocols: the Transmission Control Protocol (TCP) or the User Datagram Protocol (UDP). In the tables below, the \"Transport\" column indicates which protocol(s) the transfer protocol uses at the transport layer. Some protocols designed to transmit data over UDP also use a TCP port for oversight. The \"Server port\" column indicates the port from which the server transmits data. In the case of FTP, this port differs from the listening port. Some protocols\u2014including FTP, FTP Secure, FASP, and Tsunami\u2014listen on a \"control port\" or \"command port\", at which they receive commands from the client. Similarly, the encryption scheme indicated in the \"Encryption\" column applies to transmitted data only, and not to the authentication system. ===Overview=== {| class=\"wikitable sortable\" style=\"text-align:center\" |+ style=\"font-weight:normal; line-height:2em\" | ! scope=\"col\" colspan=\"2\" | Protocol !! scope=\"col\" rowspan=\"2\" | Original author !! scope=\"col\" rowspan=\"2\" | First published !! scope=\"col\" rowspan=\"2\" | Protocol suite !! scope=\"col\" rowspan=\"2\" | Standard !! scope=\"col\" rowspan=\"2\" class=\"unsortable\" | |- ! scope=\"col\" | Full name !! scope=\"col\" | Abbreviation |- | style=\"text-align:left\" | BitTorrent || BT || Bram Cohen || 2001 || || || |- | style=\"text-align:left\" | CCSDS File Delivery Protocol || CFDP || || || || || |- | style=\"text-align:left\" | Cross File Transfer || CFT || || || || || |- | style=\"text-align:left\" | EForward || || || || || || |- | style=\"text-align:left\" | Ether File Transfer Protocol || EFTP || John Shoch || 1979 || PARC Universal Packet || || |- | style=\"text-align:left\" | Fast and Secure Protocol || FASP || Ying Xu, Michelle Munson, Serban Simu || 2007 || || || |- | style=\"text-align:left\" | File Delivery over Unidirectional Transport || FLUTE || Internet Society || 2004 || || || |- | style=\"text- align:left\" | File Service Protocol || FSP || Wen-King Su || 1991 || || || |- | style=\"text-align:left\" | File Transfer Access and Management || FTAM || || || || || |- | style=\"text-align:left\" | File Transfer Protocol || FTP || Abhay Bhushan || 1971 || Internet protocol suite || || |- | style=\"text-align:left\" | FTP Secure || FTPS || Internet Society || 1997 || Internet protocol suite || || |- | style=\"text-align:left\" | HTTP Secure || HTTPS || Taher Elgamal et al. || 1995 || Internet protocol suite || || |- | style=\"text-align:left\" | Host Unix Linkage File Transfer || HULFT || || || || || |- | style=\"text- align:left\" | Hypertext Transfer Protocol || HTTP || Tim Berners-Lee et al. || 1991 || Internet protocol suite || || |- | style=\"text-align:left\" | Micro Transport Protocol || \u03bcTP || Ludvig Strigeus, Greg Hazel, Stanislav Shalunov, Arvid Norberg, Bram Cohen || 2007 || || || |- | style=\"text-align:left\" | Multicast Dissemination Protocol || MDP || || || || || |- | style=\"text- align:left\" | Multicast File Transfer Protocol || MFTP || C. Kenneth Miller et al. || 1995 || || || |- | style=\"text-align:left\" | NACK-Oriented Reliable Multicast Transport Protocol || NORM || || || || || |- | style=\"text- align:left\" | Odette File Transfer Protocol || OFTP || Organisation for Data Exchange by Tele Transmission in Europe || 1986 || X.25 || || |- | style=\"text-align:left\" | Odette File Transfer Protocol 2 || OFTP2 || Organisation for Data Exchange by Tele Transmission in Europe || 2007 || X.25, Internet protocol suite || || |- | style=\"text-align:left\" | Reliable Blast UDP || RBUDP || Eric He et al. || 2002 || || || |- | style=\"text-align:left\" | Remote copy || rcp || || 1982 || Internet protocol suite || || |- | style=\"text-align:left\" | Secure copy || SCP || Tatu Yl\u00f6nen || || Secure Shell || || |- | style=\"text-align:left\" | Secure Hypertext Transfer Protocol || S-HTTP || IETF Web Transaction Security Working Group || 1999 || || || |- | style=\"text-align:left\" | Simple Asynchronous File Transfer || SAFT || Ulli Horlacher || 1995 || || || |- | style=\"text-align:left\" | Simple File Transfer Protocol || SFTP || Mark K. Lottor || 1984 || || || Lottor (1984), pp. 1, 13 |- | style=\"text-align:left\" | SSH file transfer protocol || SFTP || Tatu Yl\u00f6nen || || Secure Shell || || |- | style=\"text-align:left\" | T.127 || T.127 || || || || || |- | style=\"text-align:left\" | Trivial File Transfer Protocol || TFTP || Noel Chiappa || 1980 || Internet protocol suite || || |- | style=\"text-align:left\" | Tsunami UDP Protocol || Tsunami || Mark Meiss et al. || 2002 || || || |- | style=\"text-align:left\" | Tus open protocol for resumable file uploads || tus || Felix Geisend\u00f6rfer, Marius Kleidl et al. || 2014 || || || |- | style=\"text-align:left\" | UDP-based Data Transfer Protocol || UDT || Yunhong Gu || 2004 || || || |- | style=\"text-align:left\" | UDP-based File Transfer Protocol || UFTP || Dennis Bush || 2001 || || || |- | style=\"text-align:left\" | Unix-to-Unix Copy || UUCP || Mike Lesk || 1979 || || || |- | style=\"text-align:left\" | Warp Speed Data Transfer || WDT || Laurent Demailly et al. || 2015 || || || |} ===Features=== The \"Managed\" column indicates whether the protocol is designed for managed file transfer (MFT). MFT protocols prioritise secure transmission in industrial applications that require such features as auditable transaction records, monitoring, and end- to-end data security. Such protocols may be preferred for electronic data interchange. {| class=\"wikitable sortable\" style=\"text-align:center\" ! scope=\"col\" | Protocol !! scope=\"col\" | Encryption !! scope=\"col\" | Transfer resuming !! scope=\"col\" | Multicast capable !! scope=\"col\" | Managed !! scope=\"col\" class=\"unsortable\" | |- | style=\"text-align:left\" | BitTorrent || || || || || |- | style=\"text- align:left\" | Cross File Transfer (CFT) || || || || || |- | style=\"text- align:left\" | EForward || || || || || |- | style=\"text-align:left\" | Ether File Transfer Protocol (EFTP) || || || || || |- | style=\"text-align:left\" | Fast and Secure Protocol (FASP) || || || || || |- | style=\"text-align:left\" | File Delivery over Unidirectional Transport (FLUTE) || || || || || |- | style=\"text-align:left\" | File Service Protocol (FSP) || || || || || |- | style=\"text-align:left\" | File Transfer Access and Management (FTAM) || || || || || |- | style=\"text-align:left\" | File Transfer Protocol (FTP) || || || || || |- | style=\"text-align:left\" | FTP Secure (FTPS) || || || || || |- | style=\"text-align:left\" | HTTP Secure (HTTPS) || || || || || |- | style=\"text-align:left\" | Host Unix Linkage File Transfer (HULFT) || || || || || |- | style=\"text-align:left\" | Hypertext Transfer Protocol (HTTP) || || || || || |- | style=\"text-align:left\" | Micro Transport Protocol (\u03bcTP) || || || || || |- | style=\"text-align:left\" | Multicast Dissemination Protocol (MDP) || || || || || |- | style=\"text-align:left\" | Multicast File Transfer Protocol (MFTP) || || || || || |- | style=\"text-align:left\" | NACK-Oriented Reliable Multicast Transport Protocol (NORM) || || || || || |- | style=\"text- align:left\" | Odette File Transfer Protocol (OFTP) || || || || || |- | style=\"text-align:left\" | Odette File Transfer Protocol 2 (OFTP2) || || || || || |- | style=\"text-align:left\" | Reliable Blast UDP (RBUDP) || || || || || |- | style=\"text-align:left\" | Remote copy (rcp) || || || || || |- | style=\"text-align:left\" | Secure copy (SCP) || || || || || |- | style=\"text- align:left\" | Secure Hypertext Transfer Protocol (S-HTTP) || || || || || |- | style=\"text-align:left\" | Simple Asynchronous File Transfer (SAFT) || || || || || |- | style=\"text-align:left\" | Simple File Transfer Protocol (SFTP) || || || || || Lottor (1984), p. 10 |- | style=\"text-align:left\" | SSH file transfer protocol (SFTP) || || || || || |- | style=\"text-align:left\" | T.127 || || || || || |- | style=\"text-align:left\" | Trivial File Transfer Protocol (TFTP) || || || || || |- | style=\"text-align:left\" | Tsunami UDP Protocol || || || || || |- | style=\"text-align:left\" | Tus open protocol for resumable file uploads (tus) || || || || || |- | style=\"text-align:left\" | UDP-based Data Transfer Protocol (UDT) || || || || || |- | style=\"text-align:left\" | UDP- based File Transfer Protocol (UFTP) || || || || || |- | style=\"text- align:left\" | Unix-to-Unix Copy (UUCP) || || || || || |- | style=\"text- align:left\" | Warp Speed Data Transfer (WDT) || || || || || |} ===Ports=== In the table below, the data port is the network port or range of ports through which the protocol transmits file data. The control port is the port used for the dialogue of commands and status updates between client and server. The column \"Assigned by IANA\" indicates whether the port is listed in the Service Name and Transport Protocol Port Number Registry, which is curated by the Internet Assigned Numbers Authority (IANA). IANA devotes each port number in the registry to a specific service with a specific transport protocol. The table below lists the transport protocol in the \"Transport\" column. {| class=\"wikitable sortable\" style=\"text-align:center\" ! scope=\"col\" rowspan=\"2\" colspan=\"2\" | Protocol !! scope=\"col\" colspan=\"3\" | Data port !! scope=\"col\" colspan=\"3\" | Control port !! scope=\"col\" rowspan=\"2\" | Assigned !! scope=\"col\" rowspan=\"2\" | Assignee !! scope=\"col\" rowspan=\"2\" class=\"unsortable\" | |- ! scope=\"col\" | Server !! scope=\"col\" | Client !! scope=\"col\" | Transport ! scope=\"col\" | Server !! scope=\"col\" | Client !! scope=\"col\" | Transport |- | style=\"text-align:left\" colspan=\"2\" | BitTorrent || 6881 || 6881 || TCP || 6881 || 6881 || TCP || || || |- | style=\"text- align:left\" colspan=\"2\" | CCSDS File Delivery Protocol (CFDP) || || || || || || || || || |- | style=\"text-align:left\" colspan=\"2\" | Cross File Transfer (CFT) || 1761 || || TCP / X.25 || || || || || |- | style=\"text-align:left\" colspan=\"2\" | EForward || 2181 || || TCP / UDP || || || || || || |- | style=\"text-align:left\" colspan=\"2\" | Ether File Transfer Protocol (EFTP) || || || || || || || || || |- | style=\"text-align:left\" colspan=\"2\" | Fast and Secure Protocol (FASP) || \u226533001 || || UDP || 22 || || TCP || || || |- | style=\"text-align:left\" colspan=\"2\" | File Delivery over Unidirectional Transport (FLUTE) || 4001 || || UDP || || || || || || |- | style=\"text- align:left\" colspan=\"2\" | File Service Protocol (FSP) || || || UDP || || || || || || |- | style=\"text-align:left\" colspan=\"2\" | File Transfer Access and Management (FTAM) || 4800 / 102 || || TCP || || || || || || |- | style=\"text- align:left\" rowspan=\"2\" | File Transfer Protocol (FTP) || style=\"text- align:right\" | Active mode || 20 || 20 || rowspan=\"2\" | TCP || rowspan=\"2\" | 21 || rowspan=\"2\" | \u22651024 || rowspan=\"2\" | TCP || rowspan=\"2\" || rowspan=\"2\" | Jon Postel || rowspan=\"2\" | |- | style=\"text-align:right\" | Passive mode || \u22651024 || \u22651024 |- | style=\"text-align:left\" colspan=\"2\" | FTP Secure (FTPS) || 989 || || TCP || 990 || || TCP || || Christopher Allen || |- | style=\"text- align:left\" colspan=\"2\" | HTTP Secure (HTTPS) || 443 || || TCP || || || TCP || || IESG || |- | style=\"text-align:left\" colspan=\"2\" | Host Unix Linkage File Transfer (HULFT) || 30000 || || TCP || || || TCP || || || |- | style=\"text- align:left\" colspan=\"2\" | Hypertext Transfer Protocol (HTTP) || 80 || || TCP || || || TCP || || Tim Berners-Lee || |- | style=\"text-align:left\" colspan=\"2\" | Micro Transport Protocol (\u03bcTP) || || || UDP || || || || || || |- | style=\"text-align:left\" colspan=\"2\" | Multicast Dissemination Protocol (MDP) || || || UDP || || || || || || |- | style=\"text-align:left\" colspan=\"2\" | Multicast File Transfer Protocol (MFTP) || 5402 || || UDP || || || || || Steve Bannister || |- | style=\"text-align:left\" colspan=\"2\" | NACK-Oriented Reliable Multicast Transport Protocol (NORM) || || || UDP || || || || || || |- | style=\"text-align:left\" colspan=\"2\" | Odette File Transfer Protocol (OFTP) || 3305 || || TCP / X.25 || || || TCP / X.25 || || || |- | style=\"text-align:left\" colspan=\"2\" | Odette File Transfer Protocol 2 (OFTP2) || 6619 || || TCP / X.25 || || || TCP / X.25 || || || |- | style=\"text- align:left\" colspan=\"2\" | Reliable Blast UDP (RBUDP) || || || UDP || || || || || || |- | style=\"text-align:left\" colspan=\"2\" | Remote copy (rcp) || 514 || || TCP || || || TCP || || || |- | style=\"text-align:left\" colspan=\"2\" | Secure copy (SCP) || 22 || || TCP || || || TCP || || || |- | style=\"text- align:left\" colspan=\"2\" | Secure Hypertext Transfer Protocol (S-HTTP) || 80 || || TCP || || || TCP || || || |- | style=\"text-align:left\" colspan=\"2\" | Simple Asynchronous File Transfer (SAFT) || 487 || || TCP || || || || || Ulli Horlacher || |- | style=\"text-align:left\" colspan=\"2\" | Simple File Transfer Protocol (SFTP) || 115 || || TCP || || || TCP || || Mark Lottor || |- | style=\"text-align:left\" colspan=\"2\" | SSH file transfer protocol (SFTP) || 22 || || TCP || || || TCP || || || |- | style=\"text-align:left\" colspan=\"2\" | T.127 || 1503 || || TCP || || || TCP || || Jim Johnston || |- | style=\"text- align:left\" colspan=\"2\" | Trivial File Transfer Protocol (TFTP) || 69 || || UDP || || || || || David Clark || |- | style=\"text-align:left\" colspan=\"2\" | Tsunami UDP Protocol || || || UDP || || || TCP || || || |- | style=\"text- align:left\" colspan=\"2\" | Tus open protocol for resumable file uploads (tus) || 80 || || TCP || || || TCP || || || |- | style=\"text-align:left\" colspan=\"2\" | UDP-based Data Transfer Protocol (UDT) || || || UDP || || || || || || |- | style=\"text-align:left\" colspan=\"2\" | UDP-based File Transfer Protocol (UFTP) || 1044 || || UDP || || || || || || |- | style=\"text- align:left\" colspan=\"2\" | Unix-to-Unix Copy (UUCP) || 540 || || TCP || || || TCP || || || |- | style=\"text-align:left\" colspan=\"2\" | Warp Speed Data Transfer (WDT) || || || TCP || || || TCP || || || |} ==Serial protocols== A 9-pin to 25-pin RS-232 adapter cable The following protocols were designed for serial communication, mostly for the RS-232 standard. They are used for uploading and downloading computer files via modem or serial cable (e.g., by null modem or direct cable connection). UUCP is one protocol that can operate with either RS-232 or the Transmission Control Protocol as its transport. The Kermit protocol can operate over any computer-to-computer transport: direct serial, modem, or network (notably TCP/IP, including on connections secured by SSL, SSH, or Kerberos). OBject EXchange is a protocol for binary object wireless transfer via the Bluetooth standard. Bluetooth was conceived as a wireless replacement for RS-232. ===Overview=== {| class=\"wikitable sortable\" style=\"text-align:center\" ! scope=\"col\" | Protocol !! scope=\"col\" | Author !! scope=\"col\" | First released !! scope=\"col\" | License !! scope=\"col\" | Description !! scope=\"col\" class=\"unsortable\" | |- | style=\"text-align:left\" | BiModem || Erik Labs || 1989 || || Bi-directional transfers. || |- | style=\"text-align:left\" | BLAST || Communications Research Group || || || Powerful protocol originating on minicomputers for telemetry purposes. Later found use on micros. || |- | style=\"text-align:left\" | C-MODEM || Lavio Pareschi || 1989 || || Packet lengths from 32 to 4096 bytes, optional (but normally used) streaming mode. || |- | style=\"text-align:left\" | B protocol || CompuServe || 1981 || || Offered file transfer as well as a command stream. || |- | style=\"text-align:left\" | JMODEM || Richard B. Johnson || || || XMODEM derivative with blocks from 512 to 8192 bytes and RLE compression. || |- | style=\"text-align:left\" | HS/Link || Samuel H. Smith || 1991 || || || |- | style=\"text-align:left\" | Kermit || Frank da Cruz et al. || 1981 || Open Source (BSD) as of 2011 || Transport- and platform-independent transfer of text and binary files across full- or half-duplex connections with conversion of text file formats and character sets. || da Cruz (1987) p. 3 |- | style=\"text-align:left\" | LeechModem || Sam Brown || || || Variations of X and Y that faked failed downloads in order to avoid BBS download quotas. || |- | style=\"text-align:left\" | Lynx || Matthew Thomas || 1989 || || Similar to Kermit: 64-byte packets, 2 to 16 packets per window, CRC-32. Little or no support outside the Lynx program itself. || |- | style=\"text-align:left\" | NMODEM || L. B. Neal || 1990 || || Essentially XMODEM-CRC with 2048 byte blocks. || |- | style=\"text-align:left\" | OBEX File Transfer Protocol || || || || style=\"text-align:left\" | A synchronous file transfer protocol in the OBject EXchange (OBEX) Bluetooth profile. || |- | style=\"text-align:left\" | OBEX Push || || || || style=\"text-align:left\" | An asynchronous file transfer protocol in the OBject EXchange (OBEX) Bluetooth profile. || |- | style=\"text-align:left\" | Punter || Steve Punter || || || Suite of similar- but-different XMODEM-like protocols for various Commodore machines. || |- | style=\"text-align:left\" | SEAlink || Thom Henderson || 1986 || || style=\"text- align:left\" | A MODEM7/XMODEM-compatible protocol with sliding window support developed to avoid propagation delays in satellite transmissions and packet networks. || |- | style=\"text-align:left\" | SMODEM || Arisoft || || || || |- | style=\"text-align:left\" | Tmodem || Mike Bryeans || || || || |- | style=\"text-align:left\" | UUCP || Mike Lesk || 1979 || || Suite of protocols for copying files between Unix machines, used for many purposes including the distribution of email. Also allows commands to be sent, which led to the first internet worms. The file transfer protocol within UUCP is the \"g\" protocol. || |- | style=\"text-align:left\" | MODEM7 || Mark M. Zeigler, James K. Mills || 1980 || || Slight extension of XMODEM to add filename support and batch transfers. || |- | style=\"text-align:left\" | XMODEM || Ward Christensen || 1977 || || Very simple protocol that saw widespread use and provided the pattern for many following protocols. || Glass (1988) p. 87 |- | style=\"text- align:left\" | WXMODEM || Peter Boswell || 1986 || || Version of XMODEM with sliding windows for higher performance. || Glass (1988) p. 89 |- | style=\"text-align:left\" | YMODEM || Chuck Forsberg || 1985 || || Series of optional expansions on XMODEM for higher performance. || |- | style=\"text- align:left\" | ZMax || Mike Bryeans || || || Modifications to ZMODEM to allow packets up to 32 kB in length. || |- | style=\"text-align:left\" | ZMODEM || Chuck Forsberg || 1986 || || Streaming protocol that forsakes XMODEM compatibility but offers a wide variety of new features and improved performance. Became almost universal on BBS systems in the early 1990s. || |} ===Features=== {| class=\"wikitable sortable\" style=\"text-align:center\" ! scope=\"col\" | Protocol !! scope=\"col\" | Data block size !! scope=\"col\" | Data compression !! scope=\"col\" | Error detection !! Transfer resuming !! scope=\"col\" | Bidirectional !! scope=\"col\" | Sliding window !! scope=\"col\" class=\"unsortable\" | |- | style=\"text-align:left\" | BiModem || || || || || || || |- | style=\"text-align:left\" | BLAST || || || CRC || || || || |- | style=\"text-align:left\" | C-MODEM || 32\u20134096 || || CRC || || || |- | style=\"text-align:left\" | B protocol || 128\u20132048 || || CRC32 / CRC16 / 8-bit checksum || || || || |- | style=\"text-align:left\" | JMODEM || 64\u20138192 || RLE || || || || |- | style=\"text-align:left\" | HS/Link || || || CRC32 || || || || |- | style=\"text-align:left\" | Kermit || \u22649024 (negotiated) || RLE (run length encoding, negotiated) || Checksum or CRC16 (negotiated) || (binary files only, negotiated) || || || da Cruz (1987) pp. 234, 253, 307 |- | style=\"text- align:left\" | LeechModem || || || || || || || |- | style=\"text-align:left\" | Lynx || || RLE || CRC32 || || || || |- | style=\"text-align:left\" | NMODEM || 2048 || || || || || || |- | style=\"text-align:left\" | OBject EXchange || || || || || || || |- | style=\"text-align:left\" | Punter || || || || || || || |- | style=\"text-align:left\" | SEAlink || || || || || || || |- | style=\"text- align:left\" | SMODEM || || || || || || || |- | style=\"text-align:left\" | Tmodem || || || || || || || |- | style=\"text-align:left\" | UUCP \"g\" || \u22644096 || || || || || || |- | style=\"text-align:left\" | MODEM7 || 128 || || Checksum || || || || |- | style=\"text-align:left\" | XMODEM || 128 || || Checksum || || || || |- | style=\"text-align:left\" | WXMODEM || \u2264512 || || || || || || |- | style=\"text-align:left\" | YMODEM || 1024 || || CRC16 || || || || |- | style=\"text-align:left\" | ZMax || \u2264~32,768 || || CRC32 || || || || |- | style=\"text-align:left\" | ZMODEM || 256 / 1024 || || CRC32 || || || || |} ==See also== ==Notes== ==References== * * * * ==Further reading== * * * * * * * Category:Lists of software File transfer File transfer protocols ",
    "title": "Comparison of file transfer protocols"
}
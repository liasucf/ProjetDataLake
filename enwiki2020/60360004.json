{
    "id": "60360004",
    "text": "Spark NLP is an open-source text processing library for advanced natural language processing for the Python, Java and Scala programming languages. The library is built on top of Apache Spark and its Spark ML library for speed and scalability and on top of TensorFlow for deep learning training & inference functionality. Its goal is to provide an API for natural language processing pipelines that implement state-of-the-art academic research results as production-grade, scalable, and trainable software. The library offers pre- trained neural network models, pipelines, and embeddings, as well as support for training custom models. Spark NLP is geared towards production use in software systems that outgrow older libraries such as spaCy, nltk, and CoreNLP. As of February 2019, the library is in use by 16% of enterprise companies and the most widely used NLP library by such companies. On March 28, 2019, Spark NLP was named a winner of the Strata Data Award in the open source category \u201cfor providing state-of-the-art natural language processing in Python, Java & Scala\u201d. == Main features == The library\u2019s design uses the concept of a pipeline: an ordered set of text annotators. Out of the box annotators include: * Tokenizer: Word tokens * Normalizer: Text cleaning *Stemming: Hard stems * Lemmatizer: Lemmas * Regular expression: Rule matching * TextMatcher: Phrase matching * Chunker: Meaningful phrase matching * DateMatcher: Date-time parsing * SentenceDetector: Sentence Boundary Detector * DeepSentenceDetector: Sentence Boundary Detector with Machine Learning * POS tagger: Part of speech tagger * ViveknSentimentDetector: Sentiment analysis * Sentiment analysis: Sentiment analysis * Named Entity Recognition CRF annotator * Named Entity Recognition Deep Learning annotator * Spell checking & correction: Context Aware, Norvig, and Symmetric delete * Dependency Parser: Unlabeled grammatical relation * Typed Dependency Parser: Labeled grammatical relation * Document Classification: Multi-class, Multi-label, and Multi- lingual * Language detection: Automatic language identification. In addition to the software libraries, Spark NLP also includes free access to over 250 pre-trained models and over 90 pre-trained pipelines via the Models Hub. The Models Hub includes: * Pre-trained pipelines with tokenization, lemmatization, part-of-speech tagging, and named entity recognition exist for Danish, Dutch, English, Finnish, French, German, Italian, Norwegian, Polish, Portuguese, Russian, Spanish, and Swedish. Some pre-trained models are available for Afrikaans, Arabic, Armenian, Basque, Bengali, Breton, Bulgarian, Catalan, Czech, Esperanto, Galician, Greek, Hausa, Hebrew, Hindi, Hungarian, Indonesian, Irish, Japanese, Latin, Latvian, Marathi, Persian, Romanian, Slovak, Slovenian, Somali, Southern Sotho, Swahili, Tswana, Turkish, Ukrainian and Zulu. * Popular word embeddings including GloVe, ELMo, BERT, ALBERT, XLNet, Small BERT, and ELECTRA. * Popular sentence embeddings including Universal Sentence Embeddings (USE) and Language Agnostic BERT Sentence Embeddings (LaBSE). The Spark NLP community website provides free documentation and code examples, using runnable Colab notebooks. Some concrete usage scenarios for the pre-trained models and pipelines are also provided in the form of streamlit applications. They focus on popular NLP tasks such as document classification, sentiment analysis, named entity recognition, and language detection. == Spark NLP for Healthcare == Spark NLP for Healthcare is a commercial extension of Spark NLP for clinical and biomedical text mining. It provides healthcare-specific annotators, pipelines, models, and embeddings for: * Clinical entity recognition * Clinical Entity Linking * Entity normalization * Assertion Status Detection * De-identification * Relation Extraction * Spell checking & correction The library offers access to several clinical and biomedical transformers: JSL-BERT-Clinical, BioBERT, ClinicalBERT, GloVe-Med, GloVe-ICD-O. It also includes over 50 pre-trained healthcare models, that can recognize the following entities: * Clinical - support Signs, Symptoms, Treatments, Procedures, Tests, Labs, Sections * Drugs - support Name, Dosage, Strength, Route, Duration, Frequency * Risk Factors- support Smoking, Obesity, Diabetes, Hypertension, Substance Abuse * Anatomy - support Organ, Subdivision, Cell, Structure Organism, Tissue, Gene, Chemical * Demographics - support Age, Gender, Height, Weight, Race, Ethnicity, Marital Status, Vital Signs * Sensitive Data- support Patient Name, Address, Phone, Email, Dates, Providers, Identifiers == Spark OCR == Spark OCR is another commercial extension of Spark NLP for optical character recognition from images, scanned PDF documents, and DICOM files. It is a software library built on top of Apache Spark and offers the following capabilities: * Image pre- processing algorithms to improve text recognition results: ** Adaptive thresholding & denoising ** Skew detection & correction ** Adaptive scaling ** Layout Analysis & region detection ** Image cropping ** Removing background objects * Text recognition, by combining NLP and OCR pipelines: **Extracting text from images (optical character recognition) **Extracting data from tables **Recognizing and highlighting named entities in PDF documents **Masking sensitive text in order to de-identify images * Output generation in different formats: ** PDF, images, or DICOM files with annotated or masked entities ** Digital text for downstream processing in Spark NLP or other libraries ** Structured data formats (JSON and CSV), as files or Spark data frames * Scale out: distribute the OCR jobs across multiple nodes in a Spark cluster. * Frictionless unification of OCR, NLP, ML & DL pipelines. == License and availability == Spark NLP is licensed under the Apache 2.0 license. The source code is publicly available on GitHub as well as documentation and a tutorial. Prebuilt versions of Spark NLP are available in PyPi and Anaconda Repository for Python development, in Maven Central for Java & Scala development, and in Spark Packages for Spark development. == References == Category:2017 software Category:Open-source artificial intelligence Category:Software using the Apache license Category:Free software programmed in Python Category:Free software programmed in Scala ",
    "title": "Spark NLP"
}
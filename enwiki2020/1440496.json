{
    "id": "1440496",
    "text": "A versioning file system is any computer file system which allows a computer file to exist in several versions at the same time. Thus it is a form of revision control. Most common versioning file systems keep a number of old copies of the file. Some limit the number of changes per minute or per hour to avoid storing large numbers of trivial changes. Others instead take periodic snapshots whose contents can be accessed with similar semantics to normal file access. == Similar technologies == === Backup === A versioning file system is similar to a periodic backup, with several key differences. * Backups are normally triggered on a timed basis, while versioning occurs when the file changes. * Backups are usually system-wide or partition-wide, while versioning occurs independently on a file-by-file basis. * Backups are normally written to separate media, while versioning file systems write to the same hard drive (and normally the same folder, directory, or local partition). === In comparison to revision control systems === Versioning file systems provide some of the features of revision control systems. However, unlike most revision control systems, they are transparent to users, not requiring a separate \"commit\" step to record a new revision. === Journaling file system === Versioning file systems should not be confused with journaling file systems. Whereas journaling file systems work by keeping a log of the changes made to a file before committing those changes to that file system (and overwriting the prior version), a versioning file system keeps previous copies of a file when saving new changes. The two features serve different purposes and are not mutually exclusive. === Object Storage === Some Object storage implementations offers object versioning such as Amazon S3. ==Implementations== ===ITS=== An early implementation of versioning, possibly the first, was in MIT's ITS. In ITS, a filename consisted of two six-character parts; if the second part was numeric (consisted only of digits), it was treated as a version number. When specifying a file to open for read or write, one could supply a second part of \">\"; when reading, this meant to open the highest-numbered version of the file; when writing, it meant to increment the highest existing version number and create the new version for writing. Another early implementation of versioning was in TENEX, which became TOPS-20.Daniel G. Bobrow, Jerry D. Burchfiel, Daniel L. Murphy, Raymond S. Tomlinson, TENEX, A Paged Time Sharing System for the PDP-10 (Communications of the ACM, Vol. 15, pp. 135-143, March 1972) ===Files-11 (RSX-11 and OpenVMS)=== A powerful example of a file versioning system is built into the RSX-11 and OpenVMS operating system from Digital Equipment Corporation. In essence, whenever an application opens a file for writing, the file system automatically creates a new instance of the file, with a version number appended to the name. Version numbers start at 1 and count upward as new instances of a file are created. When an application opens a file for reading, it can either specify the exact file name including version number, or just the file name without the version number, in which case the most recent instance of the file is opened. The \"purge\" DCL/CCL command can be used at any time to manage the number of versions in a specific directory. By default, all but the highest numbered versions of all files in the current directory will be deleted; this behavior can be overridden with the /keep=n switch and/or by specifying directory path(s) and/or filename patterns. VMS systems are often scripted to purge user directories on a regular schedule; this is sometimes misconstrued by end-users as a property of the versioning system. ===Linux=== On February 8, 2004, Kiran-Kumar Muniswamy-Reddy, Charles P. Wright, Andrew Himmer, and Erez Zadok (all from Stony Brook University) proposed an application that was user friendly to many of the users who tested the app. The system was developed with Linux software, so it was first operated on Linux. * NILFS - A log-structured file system supporting versioning of the entire file system and continuous snapshotting. In this list, this is the only one that is stable and included in the mainline kernel. * Tux3 - Most recent change was in 2014. * Next3 - Most recent update was in 2012. * ext3cow - Most recent release was in 2005. ===LMFS=== The Lisp Machine File System supports versioning. This was provided by implementations from MIT, LMI, Symbolics and Texas Instruments. Such an operating system was Symbolics Genera. ===macOS=== Starting with Lion (10.7), macOS has a feature called Versions which allows Time Machine-like saving and browsing of past versions of documents for applications written to use Versions. This functionality, however, takes place at the application layer, not the filesystem layer; Lion and later releases do not incorporate a true versioning file system. ===SCO OpenServer=== HTFS, adopted as the primary filesystem for SCO OpenServer in 1995, supports file versioning. Versioning is enabled on a per-directory basis by setting the directory's setuid bit, which is inherited when subdirectories are created. If versioning is enabled, a new file version is created when a file or directory is removed, or when an existing file is opened with truncation. Non-current versions remain in the filesystem namespace, under the name of the original file but with a suffix attached consisting of a semicolon and version sequence number. All but the current version are hidden from directory reads (unless the SHOWVERSIONS environment variable is set), but versions are otherwise accessible for all normal operations. The environment variable and general accessibility allow versions to be managed with the usual filesystem utilities, though there is also an \"undelete\" command that can be used to purge and restore files, enable and disable versioning on directories, etc. === Others === * Subversion has a feature called \"autoversioning\" where a WebDAV source with a subversion backend can be mounted as a file system on systems that support this kind of mount (Linux, Windows and others do) and saves to that file system generate new revisions on the revision control system.Version Control with Subversion: Next Generation Open Source Version Control * The commercial Clearcase configuration management and revision control software has also supported \"MVFS\" (multi version file system) on HP- UX, AIX and Windows since the early 1990s. === Related software === The following are not versioning filesystems, but allow similar functionality. * ZFS supports Instantaneous snapshots and clones * Btrfs supports snapshots http://www.oracle.com/technetwork/articles/servers-storage-admin/advanced- btrfs-1734952.html Snapshots, Clones, and Seed Devices\" \"snapshots\" sub bullet. * HammerFS in DragonFlyBSD has the ability to store revisions in the filesystem. * NILFS, which supports snapshotting. * Plan 9's Fossil file system can provide a similar feature, taking periodic snapshots (often hourly) and making them available in `/n/snap`. Fossil can forever archive a snapshot into Venti (usually one snapshot each day) and make them available in `/n/dump`. If multiple changes are made to a file during the interval between snapshots, only the most recent will be recorded in the next snapshot. * Write Anywhere File Layout - NetApp's storage solutions implement a file system called WAFL, which uses snapshot technology to keep different versions of all files in a volume around. * pdumpfs, authored by Satoru Takabayashi, is a simple daily backup system similar to Plan 9's /n/dump, implemented in Ruby. It functions as a snapshotting tool, which makes it possible to copy a whole directory to another location by using hardlinks. Used regularly, this can produce an effect similar to versioning.pDumpFS Homepage *Microsoft Windows ** Shadow Copy - is a feature introduced by Microsoft with Windows Server 2003, 2008, 2012 as well as Windows 7, 8, and 10. Shadow Copy allows for taking manual or automatic backup copies or snapshots of a file or folder on a specific volume at a specific point in time. ** RollBack Rx - Allows snapshots of disk partitions to be taken. Each snapshot contains only the differences between previous snapshots, and take only seconds to create. Can be reliably used to keep a Windows OS stable and/or protected from malware. ** GoBack (discontinued) - The GoBack software for Windows from Symantec enables reversion of files, directories or disks to previous states. It can record a maximum of 8GB in changes, and temporarily stops recording each change in the event of high I/O activity. ** Versomatic - Versomatic software by Acertant automatically tracks file changes and preemptively archives a copy of a file before it is modified. * Cascade File System exposes a Subversion or Perforce repository via a file system driver. The user must still explicitly decide when to commit changes. * git implementation documents call git a \"content addressable filesystem with a VCS user interface written on top of it.\" ==See also== * Backup * Comparison of revision control software * Copy on write * Object storage ==References== == External links == * Category:Computer file systems ",
    "title": "Versioning file system"
}
{
    "id": "2574632",
    "text": "This is a list of approaches, styles, and philosophies in software development. It also contains programming paradigms, software development methodologies, software development processes, and single practices, principles and laws. ==Software development philosophies== Large-scale programming styles: * Behavior-driven development * Design-driven development * Domain-driven design * Secure by design * Test-driven development ** Acceptance test\u2013driven development ** Continuous test-driven development ** Specification by example Specification-related paradigms: * Iterative and incremental development * Waterfall model * Formal methods Comprehensive systems: * Agile software development ** Lean software development * Lightweight methodology ** Adaptive software development ** Extreme programming ** Feature-driven development ** ICONIX * Kanban (development) * Cowboy coding (a non-system) Rules of thumb: * KISS principle * Minimalism (computing) * Open\u2013closed principle * Release early, release often * Robustness principle * Rule of least power * There's more than one way to do it * Unix philosophy * Worse is better * You aren't gonna need it (YAGNI) * Don't repeat yourself (DRY) * SOLID (object-oriented design) * Single source of truth (SSOT) * Single version of the truth (SVOT) Other: * The Cathedral and the Bazaar - book comparing top-down vs. bottom-up open-source software * Davis 201 Principles of Software Development * Where's the Theory for Software Engineering? * The Philosophy of Computer Science * Don't Make Me Think (Principles of intuitive navigation and information design) == Programming paradigms == * Agent-oriented programming * Aspect-oriented programming (AOP) * Component-based software engineering * Functional programming (FP) * Literate programming * Logic programming * Modular programming * Object- oriented programming (OOP) * Reactive programming == Software development methodologies == * Agile Unified Process (AUP) * Constructionist design methodology (CDM) * Dynamic systems development method (DSDM) * Extreme programming (XP) * Iterative and incremental development * Kanban * Lean software development * Open Unified Process * Pair programming * Rapid application development (RAD) * Rational Unified Process (RUP) * Scrum * Structured systems analysis and design method (SSADM) * Unified Process (UP) == Software development processes == * Active-Admin-driven development (AADD) * Behavior-driven development (BDD) * Bug-driven development (BgDD) * Configuration-driven development (CDD) * Design-driven development (D3) * Domain-driven design (DDD) * Feature-driven development (FDD) * Test-driven development (TDD) * User-centered design (UCD) * Value-driven design (VDD) == See also == * Anti-pattern * Design pattern * Programming paradigm * Software development methodology * Software development process == References == * Don't Make Me Think (book by Steve Krug about human computer interaction and web usability) Category:Software development process Category:Software engineering Category:Methodology ",
    "title": "List of software development philosophies"
}
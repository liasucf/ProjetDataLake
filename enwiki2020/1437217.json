{
    "id": "1437217",
    "text": "OpenSceneGraph is an open-source 3D graphics application programming interface, used by application developers in fields such as visual simulation, computer games, virtual reality, scientific visualization and modeling. The toolkit is written in standard C++ using OpenGL, and runs on a variety of operating systems including Microsoft Windows, macOS, Linux, IRIX, Solaris and FreeBSD. Since version 3.0.0, OpenSceneGraph also supports application development for mobile platforms, namely iOS and Android. == History == The OpenSceneGraph project was initiated by Don Burns in 1998. Robert Osfield joined the project during 1999, working on porting finished components for Microsoft Windows. The project went open source in September 1999 and the official project website was created. Towards the end of the year Osfield took over the project and began extensive refactoring of the existing codebase, putting emphasis on modernisation, embracing modern C++ standards and design patterns. In April 2001, taking into account growing community of users and interest of public, Robert Osfield created OpenSceneGraph Professional Services, providing commercial support, consulting and training services. This marks full professionalization of the project. The first official stable version of OpenSceneGraph was version 1.0, released in 2005. An extended version 2.0 followed in 2007, adding support for multi-core and multi-gpu systems, several important NodeKits and usage of unified multiplatform build system CMake. Books and user handbooks were introduced.Martz, P.: OpenSceneGraph Quick Start Guide. Louisville, USA, 2007. The project has been quickly growing and becoming more popular ever since. There are more than 530 contributors signed under current stable version, and the official mailing list contains thousands of names.http://www.openscenegraph.org/projects/osg/wiki/Support/History == Features == Overview of the openscenegraph architecture. Features in version 1.0: * A feature-rich and widely adopted scene graph implementation * Support for performance increasing features *# View frustum, small feature and occlusion culling *# Level of detail *# State sorting and lazy state updating *# OpenGL fast paths and latest extensions *# Multi-threading and database optimization * Support for OpenGL, from 1.1 through 2.0 including the latest extensions * Tightly coupled support for OpenGL Shading Language, developed in conjunction with 3Dlabs * Support for a wide range of 2D image and 3D database formats, with loaders available for formats such as OpenFlight, TerraPage, OBJ, 3DS, JPEG, PNG and GeoTIFF * Particle effects * Support for anti-aliased TrueType text * Seamless support for framebuffer objects, pbuffers and frame buffer render-to-texture effects * Multi-threaded database paging support, which can be used in conjunction with all 3D database and image loaders * Large scale, whole earth geospatial terrain paged database generation * Introspection support for core libraries allowing external applications to query, get, set and operate on all classes in the scene graph, via a generic interface * Multi-threaded and configurable support for multiple CPU/multiple GPU machines Features in version 2.8.3http://www.openscenegraph.org/projects/osg/wiki/News/Press/OSG2.8.3 *Mac OS X 10.6 (Snow Leopard) support *ImageIO support on Mac OS X *3DS file format export and file conversion *Integrated Autodesk FBX technology *Integrated FFmpeg support for displaying video file content in 3D applications. *PLY file format support Features in version 2.8.4:http://www.openscenegraph.org/svn/osg/OpenSceneGraph/tags/OpenSceneGraph-2.8.4/NEWS.txt *VS2010 build support Features in version 3.0.0:http://www.openscenegraph.org/svn/osg/OpenSceneGraph/tags/OpenSceneGraph-3.0.0/NEWS.txt * OpenGL ES 1.1, and OpenGL ES 2.0 support * OpenGL 3.x and 4.x support along with associated OpenGL extensions * Support for Android on tablets and phones * Support for IOS on tablets and phones (end users applications have already been accepted on the App Store) * Introduction of Present3D application for immersive 3D presentations * New extensible serializers that provide new .osgb binary, .osgt ascii and .osgx xml file native formats * New generalized serializable metadata architecture * New osgQt library that makes it straight forward to integrate !OpenSceneGraph with Qt, including web browsing via QWebKit. * New FBX plugin based on the Audodesk FBX DSK that enables reading of the .fbx 3D authoring and interchange format * New directshow plugin for handling movies under Windows * New pov plugin for exporting a scene to POV- Ray format, enabling use of POV-Ray to do photo-realistic ray tracing * New ply plugin for reading ply files * Revamped 3ds plugin for reading and writing of .3ds files * Revamped dxf plugin for reading and writing of .dxf files * Support for Cocoa and 64bit OSX build ==Stable Version Release History== {| class=\"wikitable\" !Version !Release Date |- |3.0 |5 February 2013 |- |3.2 |24 July 2013 |- |3.4 |20 July 2015 |- |3.4.1 |28 August 2017 |- |3.6 |7 April 2018 |- |3.6.1 |28 May 2018 |- |3.6.2 |29 June 2018 |- |3.6.3 |14 September 2018 |- |3.6.4 |26 July 2019 |- |3.6.5 |31 January 2020 |} == Architecture == Library architecture can be separated into three main subsets \u2014 the core OpenSceneGraph library, osgViewer and a set of NodeKits. === Core === The base of OpenSceneGraph library can be further divided into four main modules. ====osg==== The core of OpenSceneGraph provides classes and methods for construction and manipulation of the scene graph. It contains classes representing various types of nodes, scene geometry, OpenGL state abstraction, geometric transformations, as well as mathematical classes for 2D and 3D vector and matrix operations. Advanced memory management is also included. ====OpenThreads==== The OpenSceneGraph project contains a threading library, OpenThreads, which is a lightweight cross-platform thread model. It is intended to provide a minimal and complete Object-Oriented (OO) thread interface for C++ programmers. It is loosely modeled on the Java thread API, and the POSIX Threads standards. The architecture of OpenThreads is designed around \"swappable\" thread models which are defined at compile-time in a shared object library. It is of importance to note that while a factory pattern design could have been used to achieve the goal of generic interface, it would have required the programmer to allocate each of the 4 fundamental types (Thread, Mutex, Barrier, & Condition) on the heap. Due to the cost associated with heap allocation of the underlying concrete implementations of these constructs on some platforms, such allocation was deemed unacceptable at the time this library was originally written, and thus the factory pattern was not used. Instead, a somewhat abstruse - but effective - technique was chosen to provide the necessary data/implementation hiding. This technique uses private void pointers to encapsulate object private data. The void pointers actually point at concrete data structures, but give a uniform interface to the dso. The design goal of OpenThreads is to construct optimized implementations using platform optimized multi-processing constructs such as the sproc methods used on IRIX, and Windows threads. ====osgUtil==== osgUtil contains rendering backend functionality and utilities taking care of scene graph traversal, rendering optimisation and transforming the scene into a stream of OpenGL calls. It also provides means of basic interaction with scene, such as object picking. ====osgDB==== OpenSceneGraph also comes with a large collection of database loaders and many 2D/3D data formats manipulators. More than 50 different formats are supported - most common 3D data formats, such as COLLADA (.dae), LightWave (.lwo), Wavefront (.obj), OpenFlight (.flt), 3D Studio Max (.3ds), DirectX (.x) and many others. OpenSceneGraph also provides its own native ASCII .osg format. There are exporters into .osg format available for Blender, Maya and 3D Studio MAX. Supported picture formats include .rgb, .gif, .jpg, .png, .tiff, .pic, .bmp, .dds, .tga and quicktime. This module also provides I/O device abstraction. === osgViewer === osgViewer Library provides a quick and easy way of visualizing the graphics scene. It is also a platform- independent abstraction for various window system interfaces. === NodeKits === Project distribution also contains a variety of so-called NodeKits. These are solutions of common problems and frequently used more advanced 3D application components and graphics algorithms. Among the most significant are * osgAnimation \u2014 Skeletal models usage, animating and morphing. * osgFX \u2014 Special effects and image postprocessing. * osgManipulator \u2014 Interactive 3D scene manipulation. * osgParticle \u2014 Advanced particle system usage. * osgQt \u2014 Integration with Qt toolkit and incorporation of QtGUI elements into OSG applications. * osgShadow \u2014 Framework for shadow rendering techniques. * osgTerrain \u2014 Extensive terrain rendering. * osgText \u2014 Quality antialiased fonts, TrueType and FreeType font support. * osgVolume \u2014 Volume rendering and volumetric data manipulation. * osgWidget \u2014 Simple GUI creation. ==Reception and adoption== OpenSceneGraph doesn't provide any functionality for higher \"gaming\" logic, it is a rendering-only tool. There are several full-scale engines for computer games (or so-called serious games) creation using OSG as a base of graphics rendering, the most common framework being Delta3D. There is a great variety of software products built on top of OpenSceneGraph; among others, Virtual Terrain Project and ViewTec TerrainView. List of OSG users contains companies as Boeing, NASA, FlightGear, Norcontrol and many others.http://www.openscenegraph.com/index.php/gallery/use- caseshttp://www.openscenegraph.org/projects/osg/wiki/Screenshotshttp://vterrain.org/http://www.viewtec.net/index.php?page=productshttp://www.delta3d.org At the opensource community level, several project has adopted OSG as rendering backend: * FlightGear (Flight Simulation software) * OpenMW (Opensource engine for Morrowind) OpenSceneGraph has received a javascript/WebGL implementation called OSG.JS that is used by many online 3D scene viewers including Sketchfab and Clara.io. A wrapping from C++ to javascript through Emscripten OGStudio is also currently developed. Among other products that use OSG must be mentioned: * Remo 3D OSG Scene Editor * http://www.palomino3d.org/ ==See also== * OSG.JS * OpenGL * OGRE * Delta3D * Irrlicht Engine * Crystal Space * Visualization Library * OpenSG * ossimPlanet * Grome * Open Inventor * Unity (game engine) ==References== == External links == * - official website for the project * AlphaPixel OSG Binaries - Windows, Mac and Linux x86 and x64 precompiled binaries. * SigmaOSG - OpenSceneGraph Tutorials (contains all the prior OSGHelp material from retired OSGHelp site) * Scenegraphs and Openscenegraph for 3D Software Development * OpenSceneGraph - library information webpage on www.OpenGL.org (one of four promoted libraries) Category:3D scenegraph APIs ",
    "title": "OpenSceneGraph"
}
{
    "id": "9131098",
    "text": "A six-bit character code is a character encoding designed for use on computers with word lengths a multiple of 6. Six bits can only encode 64 distinct characters, so these codes generally include only the upper-case letters, the numerals, some punctuation characters, and sometimes control characters. Such codes with additional parity bit were a natural way of storing data on 7-track magnetic tape. ==Types of six-bit codes== An early six-bit binary code was used for Braille, the reading system for the blind that was developed in the 1820s. The earliest computers dealt with numeric data only, and made no provision for character data. Six-bit BCD was used by IBM on early computers such as the IBM 704 in 1954. This encoding was replaced by the 8-bit EBCDIC code when System/360 standardized on 8-bit bytes. There are some variants of this type of code (see below). Six-bit character codes generally succeeded the five-bit Baudot code and preceded seven-bit ASCII. One popular variant was DEC SIXBIT. This is simply the ASCII character codes from 32 to 95 coded as 0 to 63 by subtracting 32 (i.e., columns 2, 3, 4, and 5 of the ASCII table (16 characters to a column), shifted to columns 0 through 3, by subtracting 2 from the high bits); it includes the space, punctuation characters, numbers, and capital letters, but no control characters. Since it included no control characters, not even end-of-line, it was not used for general text processing. However, six-character names such as filenames and assembler symbols could be stored in a single 36-bit word of PDP-10, and three characters fit in each word of the PDP-1 and two characters fit in each word of the PDP-8. Six-bit codes could encode more than 64 characters by the use of Shift Out and Shift In characters, essentially incorporating two distinct 62-character sets and switching between them. For example, the popular IBM 2741 communications terminal supported a variety of character sets of up to 88 printing characters plus control characters. A UTF-6 encoding was proposed for Unicode but was superseded by Punycode. ===BCD six-bit code=== Six-bit BCD code was the adaptation of the punched card code to binary code. IBM applied the terms binary-coded decimal and BCD to the variations of BCD alphamerics used in most early IBM computers, including the IBM 1620, IBM 1400 series, and non-decimal architecture members of the IBM 700/7000 series. ===COBOL databases six-bit code=== A six-bit code was also used in COBOL databases, where end-of-record information was stored separately. ===Magnetic stripe card six-bit code=== A six-bit code, with added odd parity bit, is used on Track 1 of magnetic stripe cards, as specified in ISO/IEC 7811-2. ===DEC six-bit code=== A DEC SIXBIT code including a few control characters--along with SO/SI, allowing code extension--was specified as ECMA-1 in 1963 (see below). Another, less common, variant is obtained by just stripping the high bit of an ASCII code in 32 - 95 range (codes 32 - 63 remain at their positions, higher values have 64 subtracted from them). Such variant was sometimes used on DEC's PDP-8 (1965). ===FIELDATA six-bit code=== FIELDATA was a seven-bit code (with optional parity) of which only 64 code positions (occupying six bits) were formally defined. A variant was used by UNIVAC's 1100-series computers. Treating the code as a six-bit code these systems used a 36-bit word (capable of storing six such reduced FIELDATA characters). ===Braille six-bit code=== Braille characters are represented using six dot positions, arranged in a rectangle. Each position may contain a raised dot or not, so Braille can be considered to be a six-bit binary code. ==Six-bit codes for binary-to-text encoding== Transmission of binary data over systems which are designed for text only can sometimes introduce problems. For example, email historically supported only 7-bit ASCII codes and would strip the 8th bit, thus corrupting binary data sent directly through any troublesome mail server. Other systems can cause issues by improperly interpreting control characters during storage or transmission. A number of schemes exist to pack 8-bit data into text-only representations which can pass through text mail systems, to be decoded at the destination. Examples of 6-bit character subsets used for packing binary data include Uuencode and Base64. These sets contain no control characters (only printable numbers, letters, some punctuation, and maybe space) and allow data to be transmitted over any medium which is also able to transmit human- readable text. ==Examples of BCD six-bit codes== Characters are shown with their Unicode equivalents. {| |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |} {| |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |} {| |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |} ==Examples of six- bit ASCII variants== {| |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |} {| |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |} {| |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |} {| |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |} ==GOST 6-bit code== {| |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |- ! || || || || || || || || || || || || || || || || |} ==Example of six-bit Braille codes== The following table shows the arrangement of characters, with the hex value, corresponding ASCII character, Braille 6-bit codes (dot combinations), Braille Unicode glyph, and general meaning (the actual meaning may change depending on context). {| |- valign=\"top\" | {| class=\"wikitable\" style=\"text-align: center\" |- !style=\"width: 2.5em\"|Hex !ASCII Glyph !style=\"width: 5.5em\"|Braille Dots !style=\"width: 2.5em\"|Braille Glyph !Braille Meaning |- |20 |(space) | ! |(space) |- |21 |! |2-3-4-6 ! |the |- |22 |\" |5 ! |(contraction) |- |23 |# |3-4-5-6 ! |(number prefix) |- |24 |$ |1-2-4-6 ! |ed |- |25 |% |1-4-6 ! |sh |- |26 |& |1-2-3-4-6 ! |and |- |27 |' |3 ! |' |- |28 |( |1-2-3-5-6 ! |of |- |29 |) |2-3-4-5-6 ! |with |- |2A |* |1-6 ! |ch |- |2B |+ |3-4-6 ! |ing |- |2C |, |6 ! |(uppercase prefix) |- |2D |- |3-6 ! |- |- |2E |. |4-6 ! |(italic prefix) |- |2F |/ |3-4 ! |st |- |30 |0 |3-5-6 ! |\" |- |31 |1 |2 ! |, |- |32 |2 |2-3 ! |; |- |33 |3 |2-5 ! |: |- |34 |4 |2-5-6 ! |. |- |35 |5 |2-6 ! |en |- |36 |6 |2-3-5 ! |! |- |37 |7 |2-3-5-6 ! |( or ) |- |38 |8 |2-3-6 ! |\" or ? |- |39 |9 |3-5 ! |in |- |3A |: |1-5-6 ! |wh |- |3B |; |5-6 ! |(letter prefix) |- |3C |< |1-2-6 ! |gh |- |3D |= |1-2-3-4-5-6 ! |for |- |3E |> |3-4-5 ! |ar |- |3F |? |1-4-5-6 ! |th |} | | {| class=\"wikitable\" style=\"text-align: center\" |- valign=\"bottom\" !style=\"width: 2.5em\"|Hex !ASCII Glyph !style=\"width: 5.5em\"|Braille Dots !style=\"width: 2.5em\"|Braille Glyph !Braille Meaning |- |40 |@ |4 ! |(accent prefix) |- |41 |A |1 ! |a |- |42 |B |1-2 ! |b |- |43 |C |1-4 ! |c |- |44 |D |1-4-5 ! |d |- |45 |E |1-5 ! |e |- |46 |F |1-2-4 ! |f |- |47 |G |1-2-4-5 ! |g |- |48 |H |1-2-5 ! |h |- |49 |I |2-4 ! |i |- |4A |J |2-4-5 ! |j |- |4B |K |1-3 ! |k |- |4C |L |1-2-3 ! |l |- |4D |M |1-3-4 ! |m |- |4E |N |1-3-4-5 ! |n |- |4F |O |1-3-5 ! |o |- |50 |P |1-2-3-4 ! |p |- |51 |Q |1-2-3-4-5 ! |q |- |52 |R |1-2-3-5 ! |r |- |53 |S |2-3-4 ! |s |- |54 |T |2-3-4-5 ! |t |- |55 |U |1-3-6 ! |u |- |56 |V |1-2-3-6 ! |v |- |57 |W |2-4-5-6 ! |w |- |58 |X |1-3-4-6 ! |x |- |59 |Y |1-3-4-5-6 ! |y |- |5A |Z |1-3-5-6 ! |z |- |5B |[ |2-4-6 ! |ow |- |5C |\\ |1-2-5-6 ! |ou |- |5D |] |1-2-4-5-6 ! |er |- |5E |^ |4-5 ! |(contraction) |- |5F |_ |4-5-6 ! |(contraction) |} |} ==See also== * Binary-coded decimal * BCD (character encoding) * CDC display code * DEC RADIX 50 / MOD40 * IBM SQUOZE * IBM Transcode * ASCII * Baudot code * EBCDIC * Unicode * ANSI X3.64 * UTF-8 * UTF-16 ==References== ==External links== * * * SIXBIT Character Code Reference Digital Equipment Corporation SIXBIT character coding system Category:Character encoding ",
    "title": "Six-bit character code"
}
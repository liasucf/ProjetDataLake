{
    "id": "51542784",
    "text": "Unnormalized form (UNF), also known as an unnormalized relation or non first normal form (NF2), is a simple database data model (organization of data in a database) lacking the efficiency of database normalization. An unnormalized data model will suffer the pitfalls of data redundancy, where multiple values and/or complex data structures may be stored within a single field or attribute, or where fields may be replicated within a single table (a way of subverting the first normal form rule of one value per field or attribute). == Overview == A relation in unnormalized form is used to represent the data entered by a user through a form. If the form contains atomic fields, then the model can be considered in 1NF form. However, if the form contains dependent attributes, they are stored as a data structure (typically another table) within that attribute. Data in unnormalized form would not be considered to be relational since it lacks atomic data. Some basic uses of unnormalized relations include dealing with form data in offices. One form would correspond to one record in the database. == History == In 1970, E.F. Codd proposed the relational data model, now widely accepted as the standard data model. At that time, office automation was the major use of data storage systems, which resulted in the proposal of many NF2 data models like the Schek model, Jaeschke models (Non-recursive and recursive algebra), and the Nested Table Data (NTD) model. IBM organized the first international workshop exclusively on this topic in 1987 which was held in Darmstadt, Germany. Moreover, a lot of research has been done and journals have been published to address the shortcomings of the relational model. Since the turn of the century, NoSQL databases have become popular owing to the demands of Web 2.0. == Example == Students take courses: {| class=\"wikitable\" !Id !Name !Course |- |1. |Jack | |- |2. |Tim |Chemistry |- |3. |Ana | |} Alternate view: {| class=\"wikitable\" !Id !Name !Course 1 !Course 2 |- |1. |Jack |Mathematics |Chemistry |- |2. |Tim |Chemistry | |- |3. |Ana |Physics |Chemistry |} The above tables represent data in unnormalized form as more than one value is stored in a single attribute within a row/tuple (or the notion of a single value per attribute is subverted with repeating columns). This lack of defined atomicity means that the table has not reached the level of First normal form. Here, one student can take several courses and that data will be reflected in a single row in the database. One can see that relating entities based on 'course' is more problematic, as is ensuring consistency of data (being either impossible or very difficult in a systematic way). Of somewhat less importance in modern systems, the word 'Chemistry' is being stored three times in the database which results in potentially excess memory consumption. == Advantages and disadvantages == Advantages of unnormalized form over normalized forms are - * It can deal with complex data structures like Objects, rows in a field. * Since there is no relation, querying this data model is simpler. * Restructuring data is easier. Disadvantages of unnormalized form are - * Absence of relations means that data is often redundant. * CRUD operations are plagued by anomalies, and if they are not handled correctly, can result in data inconsistency. == Modern applications == Today, companies like Google, Amazon and Facebook deal with large amounts of data that are difficult to store efficiently. They use NoSQL databases, which are based on the principles of the unnormalized relational model, to deal with the storage issue. Some examples of NoSQL databases are MongoDB, Apache Cassandra and Redis. These databases are more scalable and easier to query with as they do not involve expensive operations like JOIN. == See also == * Denormalization * Normalization * First normal form * Second normal form * Boyce\u2013Codd normal form * Third normal form * NoSQL == References == Category:Data modeling ",
    "title": "Unnormalized form"
}
{
    "id": "44502",
    "text": "Allegro is a software library for video game development. The functionality of the library includes support for basic 2D graphics, image manipulation, text output, audio output, MIDI music, input and timers, as well as additional routines for fixed-point and floating-point matrix arithmetic, Unicode strings, file system access, file manipulation, data files, and 3D graphics. The library is written in the C programming language and designed to be used with C, C++, or Objective-C, with bindings available for Python, Lua, Scheme, D, Go, and other languages.List of Allegro language bindings Allegro comes with extensive documentation and many examples. Allegro supports Windows, macOS, Unix-like systems, Android, and iOS, abstracting their application programming interfaces (APIs) into one portable interface. Previous versions up to 4.4 supported Windows, macOS, DOS, BeOS, and various Unix-like systems with (or without) the X Window System. There is also an independent port of Allegro on AmigaOS 4 and MorphOS. Released under the terms of the zlib license, Allegro is free and open source software. == History == Initially standing for Atari Low-Level Game Routines,Forum posting by Shawn Hargreaves Allegro was originally created by for the Atari ST in the early 1990s. However, Hargreaves abandoned the Atari version as he realized the platform was dying, and reimplemented his work for the Borland C++ and DJGPP compilers in 1995. Support for Borland C++ was dropped in version 2.0, and DJGPP was the only supported compiler. As DJGPP was a DOS compiler, all games which used Allegro therefore used DOS. Around 1998, Allegro branched out into several versions. A port to Windows, WinAllegro, was created, and also during this time, a Unix port of Allegro, XwinAllegro, was created. These various ports were brought together during the Allegro 3.9 WIP versions, with Allegro 4.0 being the first stable version of Allegro to support multiple platforms. === Allegro 5 === Current development is focused on the Allegro 5 branch, a complete redesign of both the API and much of the library's internal operation. Effort was made to make the API more consistent and multi-thread safe. By default, the library is now hardware accelerated using OpenGL or DirectX rendering backends where appropriate. Many of the addons that existed as separate projects for Allegro 4 now interface seamlessly with Allegro proper and are bundled with the default installation. Allegro 5 is event driven. == Features == Allegro provides the following graphic functions: * Vector drawing: ** pixels, lines, rectangles, triangles, circles, ellipses, arcs, B\u00e9zier curves ** shape fill, with or without pattern ** polygons: flat, Gouraud, textured (3D) and translucent * Sprites: ** masked, compressed and compiled sprites ** blitting, rotation, stretching, reduction, alpha blending, Gouraud shading ** native support for BMP, LBM, PCX and TGA files (others supported with library extensions) * Color palettes: ** color palette manipulation (reading, writing, conversion) ** conversion of color formats RGB <-> HSV * Text: ** support for different encodings and conversion, default is UTF-8 ** bitmap fonts (masking, colouring, alignment) * Misc: ** draw directly on the screen or on any-size memory bitmaps ** hardware scrolling and triple buffering (where available), mode X split screen ** animation functions for FLIC formatAllegro Introduction ==Addons== The community of Allegro users have contributed several library extensions to handle things like scrolling tile maps and import and export of various file formats (e.g. PNG, GIF, JPEG images, MPEG video, Ogg, MP3, IT, S3M, XM music, TTF fonts, and more). Allegro 4.x and below can be used in conjunction with OpenGL by using the library AllegroGL which extends Allegro's functionality into OpenGL and therefore the hardware. Allegro 5 natively supports OpenGL. == See also == * Borland Graphics Interface (BGI) * ClanLib * DirectX * List of game engines * Microsoft XNA * OpenAL * OpenGL * OpenML * Raylib * SciTech SNAP * SDL * SFML * UniVBE == References == == External links == * * Allegro Wiki * Games Using Allegro * Shawn Hargreaves's Homepage Category:AmigaOS 4 software Category:Application programming interfaces Category:C (programming language) libraries Category:Cross-platform software Category:Free game engines Category:Free software programmed in C Category:Graphics libraries Category:Linux APIs Category:MacOS APIs Category:MorphOS software Category:Software using the zlib license Category:Video game development software Category:Widget toolkits Category:Windows APIs ",
    "title": "Allegro (software library)"
}
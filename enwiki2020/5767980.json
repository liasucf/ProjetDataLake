{
    "id": "5767980",
    "text": "The cross-entropy (CE) method is a Monte Carlo method for importance sampling and optimization. It is applicable to both combinatorial and continuous problems, with either a static or noisy objective. The method approximates the optimal importance sampling estimator by repeating two phases:Rubinstein, R.Y. and Kroese, D.P. (2004), The Cross-Entropy Method: A Unified Approach to Combinatorial Optimization, Monte-Carlo Simulation, and Machine Learning, Springer-Verlag, New York . #Draw a sample from a probability distribution. #Minimize the cross-entropy between this distribution and a target distribution to produce a better sample in the next iteration. Reuven Rubinstein developed the method in the context of rare event simulation, where tiny probabilities must be estimated, for example in network reliability analysis, queueing models, or performance analysis of telecommunication systems. The method has also been applied to the traveling salesman, quadratic assignment, DNA sequence alignment, max-cut and buffer allocation problems. ==Estimation via importance sampling== Consider the general problem of estimating the quantity \\ell = \\mathbb{E}_{\\mathbf{u}}[H(\\mathbf{X})] = \\int H(\\mathbf{x})\\, f(\\mathbf{x}; \\mathbf{u})\\, \\textrm{d}\\mathbf{x}, where H is some performance function and f(\\mathbf{x};\\mathbf{u}) is a member of some parametric family of distributions. Using importance sampling this quantity can be estimated as \\hat{\\ell} = \\frac{1}{N} \\sum_{i=1}^N H(\\mathbf{X}_i) \\frac{f(\\mathbf{X}_i; \\mathbf{u})}{g(\\mathbf{X}_i)}, where \\mathbf{X}_1,\\dots,\\mathbf{X}_N is a random sample from g\\,. For positive H, the theoretically optimal importance sampling density (PDF) is given by g^*(\\mathbf{x}) = H(\\mathbf{x}) f(\\mathbf{x};\\mathbf{u})/\\ell. This, however, depends on the unknown \\ell. The CE method aims to approximate the optimal PDF by adaptively selecting members of the parametric family that are closest (in the Kullback\u2013Leibler sense) to the optimal PDF g^*. ==Generic CE algorithm== # Choose initial parameter vector \\mathbf{v}^{(0)}; set t = 1. # Generate a random sample \\mathbf{X}_1,\\dots,\\mathbf{X}_N from f(\\cdot;\\mathbf{v}^{(t-1)}) # Solve for \\mathbf{v}^{(t)}, where \\mathbf{v}^{(t)} = \\mathop{\\textrm{argmax}}_{\\mathbf{u}} \\frac{1}{N} \\sum_{i=1}^N H(\\mathbf{X}_i)\\frac{f(\\mathbf{X}_i;\\mathbf{u})}{f(\\mathbf{X}_i;\\mathbf{v}^{(t-1)})} \\log f(\\mathbf{X}_i;\\mathbf{v}^{(t-1)}) # If convergence is reached then stop; otherwise, increase t by 1 and reiterate from step 2. In several cases, the solution to step 3 can be found analytically. Situations in which this occurs are * When f\\, belongs to the natural exponential family * When f\\, is discrete with finite support * When H(\\mathbf{X}) = \\mathrm{I}_{\\\\{\\mathbf{x}\\in A\\\\}} and f(\\mathbf{X}_i;\\mathbf{u}) = f(\\mathbf{X}_i;\\mathbf{v}^{(t-1)}), then \\mathbf{v}^{(t)} corresponds to the maximum likelihood estimator based on those \\mathbf{X}_k \\in A. == Continuous optimization--example== The same CE algorithm can be used for optimization, rather than estimation. Suppose the problem is to maximize some function S, for example, S(x) = \\textrm{e}^{-(x-2)^2} + 0.8\\,\\textrm{e}^{-(x+2)^2}. To apply CE, one considers first the associated stochastic problem of estimating \\mathbb{P}_{\\boldsymbol{\\theta}}(S(X)\\geq\\gamma) for a given level \\gamma\\,, and parametric family \\left\\\\{f(\\cdot;\\boldsymbol{\\theta})\\right\\\\}, for example the 1-dimensional Gaussian distribution, parameterized by its mean \\mu_t\\, and variance \\sigma_t^2 (so \\boldsymbol{\\theta} = (\\mu,\\sigma^2) here). Hence, for a given \\gamma\\,, the goal is to find \\boldsymbol{\\theta} so that D_{\\mathrm{KL}}(\\textrm{I}_{\\\\{S(x)\\geq\\gamma\\\\}}\\|f_{\\boldsymbol{\\theta}}) is minimized. This is done by solving the sample version (stochastic counterpart) of the KL divergence minimization problem, as in step 3 above. It turns out that parameters that minimize the stochastic counterpart for this choice of target distribution and parametric family are the sample mean and sample variance corresponding to the elite samples, which are those samples that have objective function value \\geq\\gamma. The worst of the elite samples is then used as the level parameter for the next iteration. This yields the following randomized algorithm that happens to coincide with the so-called Estimation of Multivariate Normal Algorithm (EMNA), an estimation of distribution algorithm. ===Pseudocode=== // Initialize parameters \u03bc := \u22126 \u03c32 := 100 t := 0 maxits := 100 N := 100 Ne := 10 // While maxits not exceeded and not converged while t < maxits and \u03c32 > \u03b5 do // Obtain N samples from current sampling distribution X := SampleGaussian(\u03bc, \u03c32, N) // Evaluate objective function at sampled points S := exp(\u2212(X \u2212 2) ^ 2) + 0.8 exp(\u2212(X + 2) ^ 2) // Sort X by objective function values in descending order X := sort(X, S) // Update parameters of sampling distribution \u03bc := mean(X(1:Ne)) \u03c32 := var(X(1:Ne)) t := t + 1 // Return mean of final sampling distribution as solution return mu ==Related methods== * Simulated annealing * Genetic algorithms * Harmony search * Estimation of distribution algorithm * Tabu search * Natural Evolution Strategy ==See also== * Cross entropy * Kullback\u2013Leibler divergence * Randomized algorithm * Importance sampling == Journal papers == * De Boer, P-T., Kroese, D.P, Mannor, S. and Rubinstein, R.Y. (2005). A Tutorial on the Cross-Entropy Method. Annals of Operations Research, 134 (1), 19\u201367. *Rubinstein, R.Y. (1997). Optimization of Computer simulation Models with Rare Events, European Journal of Operational Research, 99, 89\u2013112. ==Software implementations== * CEoptim R package ==References== Category:Heuristics Category:Optimization algorithms and methods Category:Monte Carlo methods Category:Machine learning ",
    "title": "Cross-entropy method"
}
{
    "id": "12859776",
    "text": "A separation kernel is a type of security kernel used to simulate a distributed environment. The concept was introduced by John Rushby in a 1981 paper.John Rushby, \"The Design and Verification of Secure Systems,\" Eighth ACM Symposium on Operating System Principles, pp. 12-21, Asilomar, CA, December 1981. (ACM Operating Systems Review, Vol. 15, No. 5). Rushby proposed the separation kernel as a solution to the difficulties and problems that had arisen in the development and verification of large, complex security kernels that were intended to \"provide multilevel secure operation on general-purpose multi-user systems.\" According to Rushby, \"the task of a separation kernel is to create an environment which is indistinguishable from that provided by a physically distributed system: it must appear as if each regime is a separate, isolated machine and that information can only flow from one machine to another along known external communication lines. One of the properties we must prove of a separation kernel, therefore, is that there are no channels for information flow between regimes other than those explicitly provided.\" A variant of the separation kernel, the partitioning kernel, has gained acceptance in the commercial aviation community as a way of consolidating, onto a single processor, multiple functions, perhaps of mixed criticality. Commercial real-time operating system products in this genre have been used by aircraft manufacturers for safety-critical avionics applications. In 2007 the Information Assurance Directorate of the U.S. National Security Agency (NSA) published the Separation Kernel Protection Profile (SKPP),Information Assurance Directorate, National Security Agency, Fort George G. Meade, MD. \"U.S. Government Protection Profile for Separation Kernels in Environments Requiring High Robustness,\" Version 1.03, June 2007. a security requirements specification for separation kernels suitable to be used in the most hostile threat environments. The SKPP describes, in Common Criteria\"Common Criteria for Information Technology Security Evaluation,\" Version 3.1, CCMB-2006-09-001, 002, 003, September 2006. parlance, a class of modern products that provide the foundational properties of Rushby's conceptual separation kernel. It defines the security functional and assurance requirements for the construction and evaluation of separation kernels while yet providing some latitude in the choices available to developers. The SKPP defines separation kernel as \"hardware and/or firmware and/or software mechanisms whose primary function is to establish, isolate and separate multiple partitions and control information flow between the subjects and exported resources allocated to those partitions.\" Further, the separation kernel's core functional requirements include: * protection of all resources (including CPU, memory and devices) from unauthorized access * separation of internal resources used by the Target of Evaluation Security Functions (TSF) from exported resources made available to subjects * partitioning and isolation of exported resources * mediation of information flows between partitions and between exported resources * audit services > The separation kernel allocates all exported resources under its control > into partitions. The partitions are isolated except for explicitly allowed > information flows. The actions of a subject in one partition are isolated > from (viz., cannot be detected by or communicated to) subjects in another > partition, unless that flow has been allowed. The partitions and flows are > defined in configuration data. Note that 'partition' and 'subject' are > orthogonal abstractions. 'Partition,' as indicated by its mathematical > genesis, provides for a set-theoretic grouping of system entities, whereas > 'subject' allows us to reason about the individual active entities of a > system. Thus, a partition (a collection, containing zero or more elements) > is not a subject (an active element), but may contain zero or more subjects. > The separation kernel provides to its hosted software programs high- > assurance partitioning and information flow control properties that are both > tamperproof and non-bypassable. These capabilities provide a configurable > trusted foundation for a variety of system architectures. In September 2008, INTEGRITY-178B from Green Hills Software became the first separation kernel certified against the SKPP.http://www.niap-ccevs.org/cc- scheme/st/st_vid10119-st.pdf Wind River Systems has separation kernel technology that was in active certification process in 2009. Lynx Software Technologies has a separation kernel, LynxSecure. In 2011, the Information Assurance Directorate sunset the SKPP. NSA will no longer certify specific operating systems, including separation kernels against the SKPP, noting \"conformance to this protection profile, by itself, does not offer sufficient confidence that national security information is appropriately protected in the context of a larger system in which the conformant product is integrated\".https://www.niap-ccevs.org/pp/archived/PP_SKPP_HR_V1.03/ The seL4 microkernel has a formal proof that it can be configured as a separation kernel.https://github.com/seL4/l4v/blob/master/proof/bisim/Syscall_S.thy The proof of information flow enforcementhttps://www.nicta.com.au/publications/research- publications/?pid=6464 together with this implies a very high level of assurance for that usecase. The Muenhttps://muen.sk/muen-report.pdf separation kernel is also a formally verified open source separation kernel for x86 machines. ==See also== * For a computer security architecture based on a separation kernel see Multiple Independent Levels of Security. * Chroot * FreeBSD jail * Operating-system-level virtualization ==References== Category:Distributed computing Category:Operating system kernels ",
    "title": "Separation kernel"
}
{
    "id": "51399699",
    "text": "In software engineering and software architecture design, architectural decisions are design decisions that address architecturally significant requirements; they are perceived as hard to makeFowler, M. (2003). \"Design \u2013 Who needs an architect?\". IEEE Software. 20 (5): 11\u201344. doi:10.1109/MS.2003.1231144 and/or costly to change.Booch, G., abstracting- the-unknown, SATURN 2016 keynote ==Characteristics== Architectural decisions influence and impact the non-functional characteristics of a system. Each architectural decision describes a concrete, architecturally significant design issue (a.k.a. design problem, decision required) for which several potential solutions (a.k.a. options, alternatives) exist. An architectural decision captures the result of a conscious, often collaborative option selection process and provides design rationale for the decision making outcome, e.g., by referencing one or more of the quality attributes addressed by the architectural decision and answering \"why\" questions about the design and option selection. Architectural decisions concern a software system as a whole, or one or more of the core components of such a system. Types of architectural decisions are the selection of architectural tactics and patterns, of integration technologies, and of middleware, as well as related implementation strategies and assets (both commercial products and open source projects).Page 64 in O. Zimmermann, Architectural Decisions as Reusable Design Assets. IEEE Software, Volume 28, Issue 1, Pages 64-69, Jan./Feb. 2011. Software architecture design is a wicked problem,Conklin, Jeffrey (2006). Dialogue mapping : building shared understanding of wicked problems. Chichester, England: Wiley Publishing. . therefore architectural decisions are difficult to get right and often, no single optimal solution for any given set of architecture design problems exists. Architectural decision making is a core responsibility of software architects;Kruchten, P., What do software architects really do?, The Journal of Systems and Software 81 (2008) 2413\u20132416 additional motivation for/of the importance of architectural decisions as a first-class concept in software architecture can be found online.Hohpe, G., Is This Architecture? Look for Decisions! ==History== Rationale was mentioned in an early definition of software architecture by Perry/Woolf,Perry, D. E.; Wolf, A. L. (1992). \"Foundations for the study of software architecture\" (PDF). ACM SIGSOFT Software Engineering Notes. 17 (4): 40. doi:10.1145/141874.141884 but not researched much until 2004, when a workshop on architectural decisions and Architectural Knowledge Management was held in Groningen, NL. Early publications can be traced back to this workshop,.Jansen, A.; Bosch, J. (2005). \"Software Architecture as a Set of Architectural Design Decisions\". 5th Working IEEE/IFIP Conference on Software Architecture (WICSA'05)Kruchten, Philippe, Patricia Lago, and Hans Van Vliet. \"Building up and reasoning about architectural knowledge.\" Quality of Software Architectures. Springer Berlin Heidelberg, 2006. 43-58. From 2006 on, the architectural knowledge management and architectural decision research communities gained momentum and a number of papers was published at major software architecture conferences such as European Conference on Software Architecture (ECSA), Quality of Software Architecture (QoSA) and (Working) International Conference on Software Architecture (ICSA). A Springer book summarized the state of the art as of 2009,Babar, M.A.; Dings\u00f8yr, T.; Lago, P.; Vliet, H. van (2009). Software Architecture Knowledge Management: Theory and Practice (eds.), First Edition. Springer. and a systematic mapping study from 2013 Li, Z., Liang, P., Avgeriou, P., Application of Knowledge-based Approaches in Software Architecture: A Systematic Mapping Study, Information and Software Technology, Volume 55, Issue 5, May 2013, Pages 777-794, Elsevier. compiles and analyzes more and more recent research results. In practice, the importance of making the right decisions has always been recognized, for instance in software development processes such as OpenUP; many templates and practices for decision documentation exist. Seven of these templates are compared in.Zimmermann, O., Wegmann, L., Koziolek, H., Goldschmidt, T., Architectural Decision Guidance across Projects, Proc. of. IEEE/IFIP WICSA 2015 The most recent standard for architecture descriptions, ISO/IEC/IEEE 42010:2011 has a dedicated rationale entity, and gives detailed recommendations which architectural decisions to capture and which properties of an architectural decision to record in the decision log.ISO/IEC/IEEE 42010:Templates for using the Standard. ==Decision management steps== ===Decision identification=== Before a decision can be made, the need for a decision must be articulated: how urgent and how important is the AD? Does it have to be made now or can it wait until more is known about requirements and system under construction? Both personal and collective experience, as well as recognized design methods and practices, can assist with decision identification; it has been proposed that Agile software development team should maintain a decision backlog complementing the product backlog of the project.Hofmeister, C., Kruchten, P., Nord, R., Obbink, H.; Ran, A., America, P. (2007), A general model of software architecture design derived from five industrial approaches. ===Decision making=== A number of decision making techniques exists, both general ones and software and software architecture specific ones, for instance, dialogue mapping.Conklin, Jeffrey (2006). Dialogue mapping: building shared understanding of wicked problems. Chichester, England: Wiley Publishing. . Group decision making is an active research topic. ===Decision documentation=== Many templates and tools for decision capturing exist, both in agile communities (e.g., M. Nygard's architecture decision recordsM. Nygard, Documenting Architecture Decisions) and in software engineering and architecture design methods (e.g., see table layouts suggested by IBM UMF Zimmermann, O., An Architectural Decision Modeling Framework for SOA and Cloud Design, SEI SATURN 2010 presentation. and by Tyree and Akerman from CapitalOne.Tyree, J., Akerman, A., Architecture decisions: demystifying architecture G. Fairbanks included decision rationale in his one-page Architecture Haikus;G. Fairbanks, Architecture Haiku, http://www.slideshare.net/matthewmccullough/architecture-haiku his notation was later evolved into Y-statements. See T. van Lessen, A Brief Introduction to ADRs, https://speakerdeck.com/vanto/a-brief-introduction-to-architectural- decision-records for motivation, examples, comparisons. ===Decision enactment (enforcement)=== Architectural decisions are used in software design; hence they have to be communicated to, and accepted by, the stakeholders of the system that fund, develop, and operate it. Architecturally evident coding styles Fairbanks, G., An architecturally-evident coding style: making your design visible in your code, Proc. of OOPSLA 2010 and code reviews that focus on architectural concerns and decisions are two related practices. Architectural decisions also have to be considered when modernizing a software system in software evolution. ===Decision sharing (optional step)=== Many architectural decisions recur across projects; hence, experiences with past decisions, both good and bad, can be valuable reusable assets when employing an explicit knowledge management strategy.Babar, M.A.; Dings\u00f8yr, T.; Lago, P.; Vliet, H. van (2009). Software Architecture Knowledge Management:Theory and Practice (eds.), First Edition. Springer. ==Examples== On large scale projects, the number of architectural decisions to be made can exceed 100, including: * Selection of architectural layering scheme and individual layer responsibilities (when adopting the Layers pattern from Buschmann, Frank; Meunier, Regine; Rohnert, Hans; Sommerlad, Peter (1996). Pattern-Oriented Software Architecture, Volume 1: A System of Patterns. John Wiley & Sons. .) * Choice of implementation technology per layer, component, and connector (e.g., programming language, interface contract format, XML vs. JSON when designing integration interfaces and message exchanges) * Choice of presentation layer frameworks on client side (e.g., JavaScript frameworks) and on the server side (e.g., Java and PHP frameworks) Refer to the design concept catalogs in Attribute-Driven Design 3.0 H. Cervantes, R. Kazman, Designing Software Architectures: A Practical Approach, Addison-Wesley, 2016. and domain-specific decision guidance models Page 21 in Zimmermann, O., Guidance Models and Decision-Making Tooling for SOA, Cloud, and Outsourcing Solution Design, http://resources.sei.cmu.edu/asset_files/Presentation/2011_017_001_24654.pdf for more examples. This is an example of a decision made, which is formatted according to the Y-statement template proposed in:Uwe Zdun et al., Sustainable Architectural Design Decisions, IEEE Software, Volume 30, Number 6 (2013), available at http://www.infoq.com/articles/sustainable-architectural-design- decisions \u201cIn the context of the Web shop service, facing the need to keep user session data consistent and current across shop instances, we decided for the Database Session State Pattern (and against Client Session State or Server Session State)M. Fowler,Patterns of Enterprise Application Architecture to achieve cloud elasticity, accepting that a session database needs to be designed, implemented, and replicated.\u201d ==Templates== Many templates have been suggested by practicing architects and by software architecture researchers. GitHub repositories such as \"Architecture decision record (ADR)\"J. Parker- Hernderson, Architecture decision record (ADR), https://github.com/joelparkerhenderson/architecture_decision_record and \"Markdown Architectural Decision Records\"ADR organization,Markdown Architectural Decision Records collect many of them, as well as links to tools and writing hints. ==Software Architecture Group Decision Making== Both practitioners and researchers recognize that software architecture decision- making is a group process that involves several stakeholders discussing, evaluating and shortlisting architectural decisions. Studies of practitioners found that though groups are ideally sized, a structured approach to decision- making is largely lacking. Specifically: * There is a predominance of unstructured approach to decision-making. This limits the participation of group members. * There is a lack of collaborative tool support to assist architects in the decision-making process. * Architects often experience delays and omissions in the decision-making process due to lack a of a structured approach * Architecting teams experience challenges including Groupthink and Group polarization These challenges provide good scope for experimentation and research for the software architecture community. ==See also== *Architectural pattern (computer science) *Architecturally significant requirements *Attribute-driven design *Design rationale *Knowledge management *Software architecture ==References== Category:Software architecture ",
    "title": "Architectural decision"
}
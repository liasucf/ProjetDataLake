{
    "id": "31311408",
    "text": "Shed Skin is a Python to C++ programming language compiler. It is experimental, and can translate pure, but implicitly statically typed Python programs into optimized C++. It can generate stand-alone programs or extension modules that can be imported and used in larger Python programs. Shed Skin is an open source project with contributions from many people, however the main author is Mark Dufour. Work has been going into Shed Skin since 2005.first Shed Skin release == Features == Besides the typing restriction,Learning Python Book section on Shed Skin programs cannot freely use the Python standard library, although about 20 common modules, such as `random`, `itertools` and `re` (regular expressions), are supported as of 2011. Also, not all Python features, such as nested functions and variable numbers of arguments, are supported. Many introspective dynamic parts of the language are unsupported. For example, functions like getattr, and hasattr are unsupported. As of May 2011, Unicode is not supported.Shed Skin tutorial (\"Python Subset Restrictions\" section) As of June 2016 for a set of 75 non-trivial test programs (at over 25,000 lines in total (sloccount)),https://github.com/shedskin/shedskin measurements show a typical speedup of 2-20 times over Psyco, and 2-200 times over CPython.Speed up your Python: Unladen vs. Shed Skin vs. PyPy vs. Cython vs. CTaking on Shed- SkinSpeeding up Python code with Shed SkinMiniLight, minimal global illumination renderer benchmark Shed Skin is still in an early stage of development, so many other programs will not compile unmodified.Shed Skin webpage Shed Skin can be used to generate standalone executables which need only the C++ runtime libraries. It can also be used to generate CPython modules. This allows compiling parts of larger programs with Shed Skin, while running the other parts using regular CPython. Another use has been to wrap C++ classes using Shed Skin to allow C++ classes to be used as Python classes.Wrapping C++ classes using Shed Skin The license of the Shed Skin source code is under two parts. The main compiler code is under the GNU General Public License (GPL). The supporting code that it uses as a run time library is under a BSD or MIT license depending on the module. This allows compiling programs which are considered under the GPL or are not considered under the GPL. == Type inference == Shed Skin combines Ole Agesen's Cartesian Product Algorithm (CPA) with the data-polymorphic part of John Plevyak's Iterative Flow Analysis (IFA).Master Thesis Mark Dufour, \"Shed Skin. An Optimizing Python-to-C++ Compiler\", April 19, 2006 Version 0.6 introduced scalability improvements which repeatedly analyze larger versions of a program (in addition to the mentioned techniques), until it is fully analyzed. This allows Shed Skin to do type inference on larger programs than previously. It starts with an empty callgraph, essentially, and slowly adds to it, until the whole call graph has been added. A graph has been published by the author, showing analysis times for 50 example programs, at a total of around 15,000 lines.Type inference scalability, 2010-12 == Modules == For version 0.9 the following 25 modules are largely supportedShedskin 0.9 release notes. Several of these, such as os.path, were compiled to C++ using Shed Skin. * array * binascii * bisect * collections (defaultdict, deque) * ConfigParser (no SafeConfigParser) * copy * colorsys * csv (no Dialect, Sniffer) * datetime * fnmatch * getopt * glob * heapq * itertools (no starmap) * math * mmap * os * os.path * random * re * socket * string * struct (no Struct, pack_into, unpack_from) * sys * time Note that any other module, such as pygame, pyqt or pickle, may be used in combination with a Shed Skin generated extension module. For examples of this, see the Shed Skin examples. == See also == * Cython * PyPy == References == == External links == * * Shed Skin Blog * shedskin source code repository Category:C++ compilers Category:Source-to- source compilers ",
    "title": "Shed Skin"
}
{
    "id": "2572877",
    "text": "In computer architecture, 48-bit integers can represent 281,474,976,710,656 (248 or 2.814749767\u00d71014) discrete values. This allows an unsigned binary integer range of 0 through 281,474,976,710,655 (248 \u2212 1) or a signed two's complement range of -140,737,488,355,328 (-247) through 140,737,488,355,327 (247 \u2212 1). A 48-bit memory address can directly address every byte of 256 tebibytes of storage. 48-bit can refer to any other data unit that consumes 48 bits (6 octets) in width. Examples include 48-bit CPU and ALU architectures are those that are based on registers, address buses, or data buses of that size. ==Word size== Computers with 48-bit words include the AN/FSQ-32, CDC 1604/upper-3000 series, BESM-6, Ferranti Atlas, and Burroughs large systems. ==Addressing== The IBM System/38 and the AS/400, in its CISC variants, are 48-bit addressing systems. The address size used in logical block addressing was increased to 48 bits with the introduction of ATA-6. The Ext4 file system physically limits the file block count to 48 bits. The minimal implementation of the x86-64 architecture provides 48-bit addressing encoded into 64 bits; future versions of the architecture can expand this without breaking properly written applications. The media access control address (MAC address) of a computer uses a 48-bit address space. This can be changed to 64-bit addressing. ==Images== In digital images, 48 bits per pixel, or 16 bits per each color channel (red, green and blue), is used for accurate processing. For the human eye, it is almost impossible to see any difference between such an image and a 24-bit image, but the existence of more shades of each of the three primary colors (65,536 as opposed to 256) means that more operations can be performed on the image without risk of noticeable banding or posterization. ==Notes== Category:Data unit ",
    "title": "48-bit computing"
}
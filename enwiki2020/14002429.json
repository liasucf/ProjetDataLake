{
    "id": "14002429",
    "text": "Fail2Ban is an intrusion prevention software framework that protects computer servers from brute-force attacks. Written in the Python programming language, it is able to run on POSIX systems that have an interface to a packet-control system or firewall installed locally, for example, iptables or TCP Wrapper. ==Functionality== Fail2Ban operates by monitoring log files (e.g. , , etc.) for selected entries and running scripts based on them. Most commonly this is used to block selected IP addresses that may belong to hosts that are trying to breach the system's security. It can ban any host IP address that makes too many login attempts or performs any other unwanted action within a time frame defined by the administrator. Includes support for both IPv4 and IPv6. Optionally longer bans can be custom-configure for \"recidivist\" abusers that keep coming back. Fail2Ban is typically set up to unban a blocked host within a certain period, so as to not \"lock out\" any genuine connections that may have been temporarily misconfigured. However, an unban time of several minutes is usually enough to stop a network connection being flooded by malicious connections, as well as reducing the likelihood of a successful dictionary attack. Fail2Ban can perform multiple actions whenever an abusive IP address is detected: update Netfilter/iptables or PF firewall rules, TCP Wrapper's table, to reject an abuser's IP address; email notifications; or any user- defined action that can be carried out by a Python script. The standard configuration ships with filters for Apache, Lighttpd, sshd, vsftpd, qmail, Postfix and Courier Mail Server. Filters are defined by Python regexes, which may be conveniently customized by an administrator familiar with regular expressions. A combination of a filter and an action is known as a \"jail\" and is what causes a malicious host to be blocked from accessing specified network services. As well as the examples that are distributed with the software, a \"jail\" may be created for any network-facing process that creates a log file of access. == Shortcomings == * Fail2Ban fails to protect against a distributed brute-force attack. * There is no interaction with application- specific APIs/AGIs. ==See also== * IPBan, a log-based intrusion-prevention security tool for Windows * DenyHosts, a log-based intrusion-prevention security tool * Stockade, a rate-limiting approach to spam mitigation. * OSSEC, an open-source host-based intrusion-detection system. ==References== ==External links== * * Debian popularity contest results for fail2ban Category:Free software programmed in Python Category:Computer network security Category:Computer security software Category:Internet Protocol based network software Category:Free network-related software Category:Free security software Category:Linux security software Category:Brute force blocking software ",
    "title": "Fail2ban"
}
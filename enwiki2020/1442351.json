{
    "id": "1442351",
    "text": "An XML database is a data persistence software system that allows data to be specified, and sometimes stored, in XML format. This data can be queried, transformed, exported and returned to a calling system. XML databases are a flavor of document-oriented databases which are in turn a category of NoSQL database. == Rationale for XML in databases == There are a number of reasons to directly specify data in XML or other document formats such as JSON. For XML in particular, they include: * An enterprise may have a lot of XML in an existing standard format * Data may need to be exposed or ingested as XML, so using another format such as relational forces double-modeling of the data * XML is very well suited to sparse data, deeply nested data and mixed content (such as text with embedded markup tags) * XML is human readable whereas relational tables require expertise to access * Metadata is often available as XML * Semantic web data is available as RDF/XML * Provides a solution for Object-relational impedance mismatch[NoSQL Distilled: A Brief Guide to the Emerging World of Polyglot Persistence. Addison-Wesley Educational Publishers Inc, 2009] Steve O'Connell gives one reason for the use of XML in databases: the increasingly common use of XML for data transport, which has meant that \"data is extracted from databases and put into XML documents and vice-versa\". It may prove more efficient (in terms of conversion costs) and easier to store the data in XML format. In content-based applications, the ability of the native XML database also minimizes the need for extraction or entry of metadata to support searching and navigation. == XML enabled databases == XML enabled databases typically offer one or more of the following approaches to storing XML within the traditional relational structure: #XML is stored into a CLOB (Character large object) #XML is `shredded` into a series of Tables based on a Schema. Section Creating XMLType Tables and Columns Based on XML Schema #XML is stored into a native XML Type as defined by ISO Standard 9075-14 RDBMS that support the ISO XML Type are: #IBM DB2 (pureXML) #Microsoft SQL Server #Oracle Database #PostgreSQL Typically an XML enabled database is best suited where the majority of data are non-XML. For datasets where the majority of data are XML, a native XML database is better suited. === Example of XML Type Query in IBM DB2 SQL === select id, vol, xmlquery('$j/name', passing journal as \"j\") as name from journals where xmlexists('$j[licence=\"CreativeCommons\"]', passing journal as \"j\") == Native XML databases == Native XML databases are especially tailored for working with XML data. As managing XML as large strings would be inefficient, and due to the hierarchical nature of XML, custom optimized data structures are used for storage and querying. This usually increases performance both in terms of read-only queries and updates. XML nodes and documents are the fundamental unit of (logical) storage, just as a relational database has fields and rows. The standard for querying XML data per W3C recommendation is XQuery; the latest version is XQuery 3.1. XQuery includes XPath as a sub-language and XML itself is a valid sub-syntax of XQuery. In contrast to XML enabled databases, native databases provide full support for XQuery. In addition to XPath, some XML databases support XSLT as a method of transforming documents or query results retrieved from the database. === Language features === {| class=\"wikitable sortable\" |- ! Name ! License ! Native Language ! XQuery 3.1 ! XQuery 3.0 ! XQuery 1.0 ! XQuery Update ! XQuery Full Text ! EXPath Extensions ! EXQuery Extensions ! XSLT 2.0 ! XForms 1.1 ! XProc 1.0 |- | BaseX | | Java | || || || || || || || || || |- | eXist | | Java | || || || || || || || || || |- | MarkLogic Server | | C++ | || || || || || || || || || |- |OpenText xDB | | Java | | | | | | | | | | |- |Oracle Berkeley DB XML | | | | | | | | | | | | |- | Qizx | | Java | || || || || || || || || || |- |Sedna |Apache License 2.0 | | | | | | | | | | | |} === Supported APIs === {| class=\"wikitable sortable\" |- ! Name ! XQJ ! XML:DB ! RESTful ! RESTXQ ! WebDAV |- | BaseX | || || || || |- | eXist | || || || || |- | MarkLogic Server | || || || || |- | Qizx | || || || || |- | Sedna | || || || || |} == Data-centric XML datasets == For data-centric XML datasets, the unique and distinct keyword search method, namely, XDMA for XML databases is designed and developed based on dual indexing and mutual summation. == References == == External links == * Ranking of Native XML DBMS by popularity, updated monthly, from DB-Engines * XML Databases - The Business Case, Charles Foster, June 2008 - Talks about the current state of Databases and data persistence, how the current Relational Database model is starting to crack at the seams and gives an insight into a strong alternative for today's requirements. * An XML-based Database of Molecular Pathways (2005-06-02) Speed / Performance comparisons of eXist, X-Hive, Sedna and Qizx/open * XML Native Database Systems: Review of Sedna, Ozone, NeoCoreXMS 2006 * XML Data Stores: Emerging Practices * Bhargava, P.; Rajamani, H.; Thaker, S.; Agarwal, A. (2005) XML Enabled Relational Databases, Texas, The University of Texas at Austin. * Initiative for XML Databases * XML and Databases, Ronald Bourret, September 2005 * The State of Native XML Databases, Elliotte Rusty Harold, August 13, 2007 Category:XML Category:Data management Category:Data modeling ",
    "title": "XML database"
}
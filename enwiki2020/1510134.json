{
    "id": "1510134",
    "text": "In statistics and econometrics, and in particular in time series analysis, an autoregressive integrated moving average (ARIMA) model is a generalization of an autoregressive moving average (ARMA) model. Both of these models are fitted to time series data either to better understand the data or to predict future points in the series (forecasting). ARIMA models are applied in some cases where data show evidence of non-stationarity, where an initial differencing step (corresponding to the \"integrated\" part of the model) can be applied one or more times to eliminate the non-stationarity.For further information on Stationarity and Differencing see https://www.otexts.org/fpp/8/1 The part of ARIMA indicates that the evolving variable of interest is regressed on its own lagged (i.e., prior) values. The part indicates that the regression error is actually a linear combination of error terms whose values occurred contemporaneously and at various times in the past. The (for \"integrated\") indicates that the data values have been replaced with the difference between their values and the previous values (and this differencing process may have been performed more than once). The purpose of each of these features is to make the model fit the data as well as possible. Non-seasonal ARIMA models are generally denoted ARIMA(p,d,q) where parameters p, d, and q are non-negative integers, p is the order (number of time lags) of the autoregressive model, d is the degree of differencing (the number of times the data have had past values subtracted), and q is the order of the moving-average model. Seasonal ARIMA models are usually denoted ARIMA(p,d,q)(P,D,Q)m, where m refers to the number of periods in each season, and the uppercase P,D,Q refer to the autoregressive, differencing, and moving average terms for the seasonal part of the ARIMA model. When two out of the three terms are zeros, the model may be referred to based on the non-zero parameter, dropping \"\", \"\" or \"\" from the acronym describing the model. For example, is , is , and is . ARIMA models can be estimated following the Box\u2013Jenkins approach. ==Definition== Given a time series data Xt where t is an integer index and the Xt are real numbers, an \\text{ARMA}(p',q) model is given by :X_t-\\alpha_1X_{t-1}- \\dots -\\alpha_{p'}X_{t-p'} = \\varepsilon_t + \\theta_1 \\varepsilon_{t-1} + \\cdots +\\theta_q \\varepsilon_{t-q}, or equivalently by : \\left( 1 - \\sum_{i=1}^{p'} \\alpha_i L^i \\right) X_t = \\left( 1 + \\sum_{i=1}^q \\theta_i L^i \\right) \\varepsilon_t \\, where L is the lag operator, the \\alpha_i are the parameters of the autoregressive part of the model, the \\theta_i are the parameters of the moving average part and the \\varepsilon_t are error terms. The error terms \\varepsilon_t are generally assumed to be independent, identically distributed variables sampled from a normal distribution with zero mean. Assume now that the polynomial \\textstyle \\left( 1 - \\sum_{i=1}^{p'} \\alpha_i L^i \\right) has a unit root (a factor (1-L)) of multiplicity d. Then it can be rewritten as: : \\left( 1 - \\sum_{i=1}^{p'} \\alpha_i L^i \\right) = \\left( 1 - \\sum_{i=1}^{p'-d} \\varphi_i L^i \\right) \\left( 1 - L \\right)^d. An ARIMA(p,d,q) process expresses this polynomial factorisation property with p=p'\u2212d, and is given by: : \\left( 1 - \\sum_{i=1}^p \\varphi_i L^i \\right) (1-L)^d X_t = \\left( 1 + \\sum_{i=1}^q \\theta_i L^i \\right) \\varepsilon_t \\, and thus can be thought as a particular case of an ARMA(p+d,q) process having the autoregressive polynomial with d unit roots. (For this reason, no process that is accurately described by an ARIMA model with d > 0 is wide-sense stationary.) The above can be generalized as follows. : \\left( 1 - \\sum_{i=1}^p \\varphi_i L^i\\right) (1-L)^d X_t = \\delta + \\left( 1 + \\sum_{i=1}^q \\theta_i L^i \\right) \\varepsilon_t . \\, This defines an ARIMA(p,d,q) process with drift \\frac{\\delta}{1 - \\sum \\varphi_i} . ==Other special forms== The explicit identification of the factorisation of the autoregression polynomial into factors as above, can be extended to other cases, firstly to apply to the moving average polynomial and secondly to include other special factors. For example, having a factor ( 1 - L^s) in a model is one way of including a non- stationary seasonality of period s into the model; this factor has the effect of re-expressing the data as changes from s periods ago. Another example is the factor \\left( 1 -\\sqrt{3} L + L^2 \\right), which includes a (non- stationary) seasonality of period 2. The effect of the first type of factor is to allow each season's value to drift separately over time, whereas with the second type values for adjacent seasons move together. Identification and specification of appropriate factors in an ARIMA model can be an important step in modelling as it can allow a reduction in the overall number of parameters to be estimated, while allowing the imposition on the model of types of behaviour that logic and experience suggest should be there. ==Differencing== Differencing in statistics is a transformation applied to time-series data in order to make it stationary. A stationary time series' properties do not depend on the time at which the series is observed. In order to difference the data, the difference between consecutive observations is computed. Mathematically, this is shown as : y_t'= y_t - y_{t-1} \\, Differencing removes the changes in the level of a time series, eliminating trend and seasonality and consequently stabilizing the mean of the time series. Sometimes it may be necessary to difference the data a second time to obtain a stationary time series, which is referred to as second order differencing: : \\begin{align} y_t^* & = y_t' - y_{t-1}' \\\\\\ & =(y_t - y_{t-1})-(y_{t-1} - y_{t-2}) \\\\\\ & =y_ t - 2y_{t-1} + y_{t-2} \\end{align} Another method of differencing data is seasonal differencing, which involves computing the difference between an observation and the corresponding observation in the previous season e.g a year. This is shown as: : y_t'= y_t - y_{t-m} \\quad \\text{where } m=\\text{duration of season}. The differenced data is then used for the estimation of an ARMA model. ==Examples== Some well-known special cases arise naturally or are mathematically equivalent to other popular forecasting models. For example: * An ARIMA(0, 1, 0) model (or model) is given by X_t = X_{t-1} + \\varepsilon_t \u2014 which is simply a random walk. * An ARIMA(0, 1, 0) with a constant, given by X_t = c + X_{t-1} + \\varepsilon_t \u2014 which is a random walk with drift. * An ARIMA(0, 0, 0) model is a white noise model. * An ARIMA(0, 1, 2) model is a Damped Holt's model. * An ARIMA(0, 1, 1) model without constant is a basic exponential smoothing model. * An ARIMA(0, 2, 2) model is given by X_t = 2X_{t-1} - X_{t-2} +(\\alpha + \\beta - 2) \\varepsilon_{t-1} + (1-\\alpha)\\varepsilon_{t-2} + \\varepsilon_{t} \u2014 which is equivalent to Holt's linear method with additive errors, or double exponential smoothing. == Choosing the order== To determine the order of a non-seasonal ARIMA model, a useful criterion is the Akaike information criterion (AIC) . It is written as : \\text{AIC} = -2\\log(L)+2(p+q+k), where L is the likelihood of the data, p is the order of the autoregressive part and q is the order of the moving average part. The k represents the intercept of the ARIMA model. For AIC, if k = 1 then there is an intercept in the ARIMA model (c \u2260 0) and if k = 0 then there is no intercept in the ARIMA model (c = 0). The corrected AIC for ARIMA models can be written as :\\text{AICc}= \\text{AIC}+ \\frac{2(p+q+k)(p+q+k+1)}{T-p-q-k-1}. The Bayesian Information Criterion can be written as :\\text{BIC}= \\text{AIC}+((\\log T)-2)(p+q+k). The objective is to minimize the AIC, AICc or BIC values for a good model. The lower the value of one of these criteria for a range of models being investigated, the better the model will suit the data. The AIC and the BIC are used for two completely different purposes. While the AIC tries to approximate models towards the reality of the situation, the BIC attempts to find the perfect fit. The BIC approach is often criticized as there never is a perfect fit to real-life complex data; however, it is still a useful method for selection as it penalizes models more heavily for having more parameters than the AIC would. AICc can only be used to compare ARIMA models with the same orders of differencing. For ARIMAs with different orders of differencing, RMSE can be used for model comparison. ==Estimation of coefficients== ==Forecasts using ARIMA models== The ARIMA model can be viewed as a \"cascade\" of two models. The first is non-stationary: : Y_t = (1-L)^d X_t while the second is wide-sense stationary: : \\left( 1 - \\sum_{i=1}^p \\varphi_i L^i \\right) Y_t = \\left( 1 + \\sum_{i=1}^q \\theta_i L^i \\right) \\varepsilon_t \\, . Now forecasts can be made for the process Y_t, using a generalization of the method of autoregressive forecasting. ===Forecast intervals=== The forecast intervals (confidence intervals for forecasts) for ARIMA models are based on assumptions that the residuals are uncorrelated and normally distributed. If either of these assumptions does not hold, then the forecast intervals may be incorrect. For this reason, researchers plot the ACF and histogram of the residuals to check the assumptions before producing forecast intervals. 95% forecast interval: \\hat{y}_{T+h\\,\\mid\\, T}\\pm1.96\\sqrt{v_{T+h\\,\\mid\\, T}}, where v_{T+h\\mid T} is the variance of y_{T+h} \\mid y_1,\\dots,y_T. For h=1, v_{T+h\\,\\mid\\, T}=\\hat{\\sigma}^2 for all ARIMA models regardless of parameters and orders. For ARIMA(0,0,q), y_t=e_t+\\sum_{i=1}^q\\theta_ie_{t-i}. : v_{T+h\\,\\mid\\, T} = \\hat{\\sigma}^2 \\left[1+\\sum_{i=1}^{h-1}\\theta_ie_{t-i}\\right], \\text{ for } h=2,3,\\ldots In general, forecast intervals from ARIMA models will increase as the forecast horizon increases. ==Variations and extensions== A number of variations on the ARIMA model are commonly employed. If multiple time series are used then the X_t can be thought of as vectors and a VARIMA model may be appropriate. Sometimes a seasonal effect is suspected in the model; in that case, it is generally considered better to use a SARIMA (seasonal ARIMA) model than to increase the order of the AR or MA parts of the model. If the time-series is suspected to exhibit long-range dependence, then the d parameter may be allowed to have non-integer values in an autoregressive fractionally integrated moving average model, which is also called a Fractional ARIMA (FARIMA or ARFIMA) model. ==Software implementations== Various packages that apply methodology like Box\u2013Jenkins parameter optimization are available to find the right parameters for the ARIMA model. * EViews: has extensive ARIMA and SARIMA capabilities. * Julia: contains an ARIMA implementation in the TimeModels packageTimeModels.jl www.github.com * Mathematica: includes ARIMAProcess function. * MATLAB: the Econometrics Toolbox includes ARIMA models and regression with ARIMA errors * NCSS: includes several procedures for `ARIMA` fitting and forecasting.ARIMA in NCSS,Automatic ARMA in NCSS,Autocorrelations and Partial Autocorrelations in NCSS * Python: the \"statsmodels\" package includes models for time series analysis \u2013 univariate time series analysis: AR, ARIMA \u2013 vector autoregressive models, VAR and structural VAR \u2013 descriptive statistics and process models for time series analysis. * R: the standard R stats package includes an arima function, which is documented in \"ARIMA Modelling of Time Series\". Besides the part, the function also includes seasonal factors, an intercept term, and exogenous variables (xreg, called \"external regressors\"). The CRAN task view on Time Series is the reference with many more links. The \"forecast\" package in R can automatically select an ARIMA model for a given time series with the function and can also simulate seasonal and non-seasonal ARIMA models with its function. * Ruby: the \"statsample-timeseries\" gem is used for time series analysis, including ARIMA models and Kalman Filtering. * SAFE TOOLBOXES: includes ARIMA modelling and regression with ARIMA errors. * SAS: includes extensive ARIMA processing in its Econometric and Time Series Analysis system: SAS/ETS. * IBM SPSS: includes ARIMA modeling in its Statistics and Modeler statistical packages. The default Expert Modeler feature evaluates a range of seasonal and non-seasonal autoregressive (p), integrated (d), and moving average (q) settings and seven exponential smoothing models. The Expert Modeler can also transform the target time-series data into its square root or natural log. The user also has the option to restrict the Expert Modeler to ARIMA models, or to manually enter ARIMA nonseasonal and seasonal p, d, and q settings without Expert Modeler. Automatic outlier detection is available for seven types of outliers, and the detected outliers will be accommodated in the time-series model if this feature is selected. * SAP: the APO-FCS package in SAP ERP from SAP allows creation and fitting of ARIMA models using the Box\u2013Jenkins methodology. * SQL Server Analysis Services: from Microsoft includes ARIMA as a Data Mining algorithm. * Stata includes ARIMA modelling (using its arima command) as of Stata 9. *Teradata Vantage has the ARIMA function as part of its machine learning engine. * TOL (Time Oriented Language) is designed to model ARIMA models (including SARIMA, ARIMAX and DSARIMAX variants) . * Scala: spark-timeseries library contains ARIMA implementation for Scala, Java and Python. Implementation is designed to run on Apache Spark. * PostgreSQL/MadLib: Time Series Analysis/ARIMA. *X-12-ARIMA: from the US Bureau of the Census ==See also== * Autocorrelation * ARMA * Partial autocorrelation * Finite impulse response * Infinite impulse response ==References== ==Further reading== * * * ==External links== *The US Census Bureau uses ARIMA for \"seasonally adjusted\" data (programs, docs, and papers here) *Lecture notes on ARIMA models (Robert Nau, Duke University) Category:Time series models de:ARMA-Modell#ARIMA ",
    "title": "Autoregressive integrated moving average"
}
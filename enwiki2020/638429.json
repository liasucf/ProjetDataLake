{
    "id": "638429",
    "text": "Free Pascal Compiler (FPC) is a compiler for the closely related programming- language dialects Pascal and Object Pascal. It is free software released under the GNU General Public License, with exception clauses that allow static linking against its runtime libraries and packages for any purpose in combination with any other software license. It supports its own Object Pascal dialect, as well as the dialects of several other Pascal family compilers to a certain extent, including those of Turbo Pascal, Delphi, and some historical Macintosh compilers. The dialect is selected on a per-unit (module) basis, and more than one dialect can be used per program. It follows a write once, compile anywhere philosophy and is available for many CPU architectures and operating systems (see Targets). It supports inline assembly language and includes an internal assembler capable of parsing several dialects such as AT&T; and Intel style. Separate projects exist to facilitate developing cross- platform graphical user interface (GUI) applications, the most prominent one being the Lazarus integrated development environment (IDE). == Supported dialects == Initially, Free Pascal adopted the de facto standard dialect of Pascal programmers Borland Pascal but later on adopted Delphi. From version 2.0 on, Delphi compatibility has been continuously implemented or improved. The project has a compilation mode concept, and the developers made it clear that they would incorporate working patches for the standardized dialects of the American National Standards Institute (ANSI) and International Organization for Standardization (ISO) to create a standards-compliant mode. A small effort has been made to support some of the Apple Pascal syntax to ease interfacing to the Classic Mac OS and macOS. Since the Apple dialect implements some standard Pascal features that Turbo Pascal and Delphi omit, Free Pascal is a bit more ISO-compatible than these. The 2.2.x release series did not significantly change the dialect objectives beyond roughly Delphi 7 level syntax, instead aiming for closer compatibility. A notable exception to this was the addition of support for generics to Free Pascal in version 2.2.0, several years before they were supported in any capacity by Delphi. , several Delphi 2006-specific features were added in the development branch, and some of the starting work for the features new in Delphi 2009 (most notably the addition of the `UnicodeString` type) was completed. The development branch also features an Objective-Pascal extension for Objective-C (Cocoa) interfacing. As of version 2.7.1, Free Pascal implemented basic ISO Pascal mode, though many things such as `Get` and `Put` procedure and file-buffer variable concept for file handling were still absent. As of version 3.0.0, ISO Pascal mode is fairly complete, with one remaining bug that has since been fixed in the trunk branch. It has been able to compile standardpascal.org's P5 ISO Pascal compiler with no changes. == History == === Early years === Free Pascal was created when Borland clarified that Borland Pascal development for DOS would stop with version 7, to be replaced by a Windows-only product, which later became Delphi. Student Florian Paul Kl\u00e4mpfl began developing his own compiler written in the Turbo Pascal dialect and produced 32-bit code for the GO32v1 DOS extender, which was used and developed by the DJ's GNU Programming Platform (DJGPP) project at that time. Originally, the compiler was a 16-bit DOS executable compiled by Turbo Pascal. After two years, the compiler was able to compile itself and became a 32-bit executable. === Expansion === The initial 32-bit compiler was published on the Internet, and the first contributors joined the project. Later, a Linux port was created by Michael van Canneyt, five years before the Borland Kylix compiler became available. The DOS port was adapted for use in OS/2 using the Eberhard Mattes eXtender (EMX) which made OS/2 the second supported compiling target. As well as Florian Kl\u00e4mpfl the original author, Dani\u00ebl Mantione also contributed significantly to make this happen, providing the original port of the run-time library to OS/2 and EMX. The compiler improved gradually, and the DOS version migrated to the GO32v2 extender. This culminated in release 0.99.5, which was much more widely used than prior versions, and was the last release aiming only for Turbo Pascal compliance; later releases added a Delphi compatibility mode. This release was also ported to systems using Motorola 68000 family (m68k) processors. With release 0.99.8 the Win32 target was added, and a start was made with incorporating some Delphi features. Stabilizing for a non-beta release began, and version 1.0 was released in July 2000. The 1.0.x series was widely used, in business and education. For the 1.0.x releases, the port to 68k CPU was redone, and the compiler produced stable code for several 68k Unix-like and AmigaOS operating systems. === Version 2 === During the stabilization of what would become 1.0.x, and also when porting to the Motorola 68k systems, it was clear that the design of the code generator was far too limited in many aspects. The principal problems were that adding processors meant rewriting the code generator, and that the register allocation was based on the principle of always keeping three free registers between building blocks, which was inflexible and difficult to maintain. For these reasons, the 1.1.x series branched off from the 1.0.x main branch in December 1999. At first, changes were mostly clean-ups and rewrite-redesigns to all parts of the compiler. The code generator and register allocator were also rewritten. Any remaining missing Delphi compatibility was added. The work on 1.1.x continued slowly but steadily. In late 2003, a working PowerPC port became available, followed by an ARM port in summer 2004, a SPARC port in fall 2004, and an x86-64-AMD64 port in early 2004, which made the compiler available for a 64-bit platform. In November 2003, a first beta release of the 1.1.x branch was packaged and numbered 1.9.0. These were quickly followed by versions 1.9.2 and 1.9.4; the latter introduced OS X support. The work continued with version 1.9.6 (January 2005), 1.9.8 (late February 2005), 2.0.0 (May 2005), 2.0.2 (December 2005), and 2.0.4 (August 2006). === Version 2.2.x === In 2006, some of the major reworks planned for 2.2, such as the rewrite of the unit system, had still not begun, and it was decided to instead start stabilizing the already implemented features. Some of the motives for this roadmap change were the needs of the Lazarus integrated development environment project, particularly the internal linker, support for Win64, Windows CE, and OS X on x86, and related features like DWARF. After betas 2.1.2 and 2.1.4, version 2.2.0 was released in September 2007, followed by version 2.2.2 in August 2008 and version 2.2.4 in March 2009. The 2.2.x series vastly improved support for the ActiveX and Component Object Model (COM) interface, and Object Linking and Embedding (OLE), though bugs were still being found. The delegation to interface using the `implements` keyword was partly implemented, but was not complete .bugs.freepascal.org Library support for ActiveX was also improved. Another major feature was the internal linker for Win32, Win64, and Windows CE, which greatly improved linking time and memory use, and make the compile-link-run cycle in Lazarus much faster. The efficiency for smart-linking, or dead code elimination, was also improved. Minor new features included improved DWARF (2/3) debug format support, and optimizations such as tail recursion, omission of unneeded stack frames and register-based common subexpression elimination (CSE) optimization. A first implementation of generic programming (generics) support also became available, but only experimentally. === Version 2.4.x === The 2.4.x release series had a less clear set of goals than earlier releases. The unit system rewrite was postponed again, and the branch that became 2.4 was created to keep risky commits from 2.2 to stabilize it. Mostly these risky commits were more involved improvements to the new platforms, Mac PowerPC 64, Mac x86-64, iPhone, and many fixes to the ARM and x86-64 architectures in general, as well as DWARF. Other compiler improvements included whole program optimization (WPO) and devirtualization and ARM embedded-application binary interface (EABI) support. Later, during the 2.2 cycle, a more Delphi-like resource support (based on special sections in the binary instead of Pascal constants) was added. This feature, direly needed by Lazarus, became the main highlight of the branch. Other more minor additions were a memory manager that improved heap manager performance in threaded environments, small improvements in Delphi compatibility such as `OleVariant`, and improvements in interface delegation. On January 1, 2010, Free Pascal 2.4.0 was released, followed on November 13, 2010, by bug fix release 2.4.2, with support for `for..in` loops, `sealed` and `abstract` classes, and other changes.User Changes 2.4.2 === Version 2.6.x === In January 2012, Free Pascal 2.6 was released. This first version from the 2.6 release series also supported Objective Pascal on OS X and iOS targets and implemented many small improvements and bug fixes. In February 2013, FPC 2.6.2 was released. It contained NetBSD and OpenBSD releases for the first time since 1.0.10, based on fresh ports. In March 2014, the last point release in the 2.6 series, 2.6.4, was launched, featuring mostly database (fcl-db) updates. === Version 3.0.x === Version 3.0.0 was released on November 25, 2015 and was the first major release since January 1, 2012. It contains many new language features: FPC New Features 3.0 Version 3.0.2 was released on February 15, 2017 and includes bug fixes and minor compiler updates. Version 3.0.4 was released on November 28, 2017. It includes many language improvements over previous versions like an internal linker for Executable and Linkable Format (ELF), Arm AARCH64 for iOS and Linux, a revived i8086 platform, extended libraries and much more. === Version 3.2.x === The next major release, version 3.2.0, was published on June 19, 2020. It introduced a plethora of new language features including generic routines, standard namespaces, managed records and expanded functionality for dynamic arrays, in addition to the advent of new standard units and the support of additional platforms. == Targets == {| class=\"wikitable\" |- ! Processor architecture ! Operating system, device ! Version 3.0.0 - 3.3.1 (Trunk) ! Version 2.6.2 ! Version 2.6.0 ! Version 2.4.4 ! Version 2.4.2 ! Version 2.4.0 ! Version 2.2.4 ! Version 2.0.x ! Version 1.0.x |- ! rowspan=\"17\" | i386 | DOS (GO32v2 extender) || || || || || || || || || |- | FreeBSD || || || || || || || || || |- | OpenBSD || || || || || || || || || |- | NetBSD || || || || || || || || || |- | Linux || || || || || || || || || |- | macOS || || || || || || || || || |- | OS/2 || || || || || || || || || |- | Windows || || || || || || || || || |- | Windows CE || || || || || || || || || |- | BeOS || || || || || || || || || |- | Haiku || || || || || || || || || |- | NetWare || || || || || || || || || |- | Solaris || || || || || || || || || |- | iPhone Sim || || || || || || || || || |- | QNX Neutrino || || || || || || || || || |- | Android || || || || || || || || || |- | AROS || || || || || || || || || |- ! rowspan=\"11\" | x86-64 | FreeBSD || || || || || || || || || |- | OpenBSD || || || || || || || || || |- | NetBSD || || || || || || || || || |- | Linux || || || || || || || || || |- | macOS || || || || || || || || || |- | Windows || || || || || || || || || |- | iPhone Sim || || || || || || || || || |- | AROS || || || || || || || || || |- |DragonFly BSD|| || || || || || || || || |- | Solaris || || || || || || || || || |- | Haiku || || || || || || || || || |- ! rowspan=\"8\" | ARM | iOS || || || || || || || || || |- | Game Boy Advance || || || || || || || || || |- | Nintendo DS || || || || || || || || || |- | Linux || || || || || || || || || |- | Windows CE || || || || || || || || || |- | Android || || || || || || || || || |- | Embedded || || || || || || || || || |- | AROS || || || || || || || || || |- ! rowspan=\"3\" | AArch64 | Linux || || || || || || || || || |- | iOS || || || || || || || || || |- | Android || || || || || || || || || |- ! rowspan=\"1\" | AVR | Embedded || || || || || || || || || |- ! rowspan=\"6\" | PowerPC | Linux || || || || || || || || || |- | macOS || || || || || || || || || |- | Classic Mac OS || || || || || || || || || |- | MorphOS || || || || || || || || || |- | AIX || || || || || || || || || |- | Wii || || || || || || || || || |- ! rowspan=\"3\" | PowerPC 64-bit | Linux || || || || || || || || || |- | macOS || || || || || || || || || |- | AIX || || || || || || || || || |- ! rowspan=\"4\" | SPARC | Solaris || || || || || || || || || |- | NetBSD || || || || || || || || || |- | Embedded || || || || || || || || || |- | Linux || || || || || || || || || |- ! rowspan=\"1\" | SPARC64 | Linux || || || || || || || || || |- ! rowspan=\"1\" | RISC-V | Embedded || || || || || || || || || |- ! rowspan=\"1\" | RISC-V64 | Embedded || || || || || || || || || |- ! rowspan=\"2\" | Java virtual machine | Java || || || || || || || || || |- | Android || || || || || || || || || |- ! rowspan=\"2\" | MIPS (BE and LE) | Linux || || || || || || || || || |- | Embedded || || || || || || || || || |- ! rowspan=\"3\" | 8086 (16-bit) | DOS || || || || || || || || || |- | Win16 || || || || || || || || || |- | Embedded || || || || || || || || || |- ! rowspan=\"5\" | m68k | Linux || || || || || || || || || |- | NetBSD || || || || || || || || || |- | AmigaOS || || || || || || || || || |- | Atari TOS || || || || || || || || || limited cross-compiler only |- | Palm OS || || || || || || || || || |- |- |} Free Pascal also supports byte code generation for the Java Virtual Machine as of version 3.0.0 and targets both Oracle's Java and Google's Android JVM,freepascal wiki: FPC JVM although Object Pascal syntax is not fully supported. Free Pascal 3.0.0 also supports ARMHF platforms like the Raspberry Pi, including ARMV6-EABIHF running on Raspbian. Work on 64-bit ARM has resulted in support for iOS in 3.0.0 as well. A native ARM Android target has been added, ending the formerly hacked ARM Linux target to generate native ARM libraries for Android. This makes porting Lazarus applications to Android (using Custom Drawn InterfaceCustom Drawn Interface) easier. Since FPC 2.6.2, OpenBSD and NetBSD are supported on IA32 and X86_64 architectures. A new target embedded has been added for usage without OS (ARM Cortex M and MIPS mainly). With InstantFPC it is possible to run Pascal programs, which are translated just in time, as Unix scripts or CGI back-end. == Integrated development environments == Like most modern compilers, Free Pascal can be used with an integrated development environment (IDE). Besides independent IDEs there are also plugins to various existing IDEs Free Pascal IDE in Linux *Free Pascal has its own text-mode IDE resembling Turbo Pascal's IDE. It is made using the Free Vision framework (also included with Free Pascal), a Turbo Vision clone. In addition to many features of the Turbo Pascal IDE, it has code completion and support for multiple help file formats (HTML, Microsoft Compiled HTML Help (CHM), Information Presentation Facility (IPF). Instead of using command line tools, the IDE uses its own embedded compiler, based on the same source as the command line compiler and debugger (using libgdb or GDBMI) to provide its functionality. *Lazarus is the most popular IDE used by Free Pascal programmers. It looks and feels similar to the Delphi IDE, and can be used to create console and graphical applications, Windows services, daemons, and web applications. Lazarus provides a cross- platform user interface framework, called Lazarus Component Library (LCL). Graphical applications created with LCL can be ported to another platform via recompiling or cross compiling. *Dev-Pascal is a free Windows-only IDE for Free Pascal and GNU Pascal, with no further development following the 2004 FPC version and the 2005 GPC version. == Bundled libraries == Apart from a compiler and an IDE Free Pascal provides the following libraries: * Free Pascal Runtime Library (RTL): Basic low-level runtime library for general programming tasks * Free Component Library (FCL): High-level software component library for general programming tasks == Examples of software produced with Free Pascal == * Beyond Compare is a data comparison utility for Windows, OS X, and Linux. The Linux and OS X versions are compiled with Lazarus/FPC. * Cartes du Ciel is a free planetarium program for Linux, OS X, and Windows. It maps and labels most constellations, planets, and objects visible by telescope. It was fully written in Lazarus/FPC, and released under GPL. * Cheat Engine is an open-source memory scanner, hex editor, and debugger. It can be used for cheating in computer games. Since version 6.0 it is compiled with Lazarus/FPC. * D_2D & D_3D data plotting programs. * Double Commander is an open-source multi-platform two-panel orthodox file manager inspired by the Microsoft Windows-only Total Commander. * Free Pascal is written in Object Pascal and assembly language, and self-compiled. * HNSKY, Hallo Northern Sky is a free planetarium program for Windows and Linux. Since version 3.4.0 written & compiled with Lazarus/FPC. * Lazarus: Free Pascal\u2019s affiliated Delphi-like software package for rapid development of graphical applications. * MeKin2D: package for planar linkage, cam and gear mechanism kinematics. * Morfik: Morfik WebOS AppBuilder uses Free Pascal to produce CGI binaries. *MyNotex is a free software note-taking and notes manager for GNU/Linux. * Early versions of the Nim compiler were developed in Free Pascal, before it became self-hosting in Nim. * Peazip is an open source archiver, made with Lazarus/FPC. *TorChat, previously written in Python, is now being rewritten in Free Pascal and Lazarus. == See also == * fpGUI Free Pascal GUI toolkit \u2013 a cross-platform and custom-drawn toolkit implemented in Object Pascal == References == == External links == === Official websites === * FPC * Lazarus RAD IDE === General introduction === * Official documentation * Modern Object Pascal Introduction for Programmers - by Michalis Kamburelis === Sites specialized in game development === * Pascal Game Development * Pascal Gamer Magazine * FPC 4 GBA Programming Tutorial \u2013 an extensive tutorial into game programming on the Game Boy Advance with Free Pascal Category:Classic Mac OS software Category:Compilers Category:Cross-platform free software Category:Cross-platform software Category:Free compilers and interpreters Category:Free software programmed in Pascal Category:Linux programming tools Category:MacOS programming tools Category:MorphOS software Category:Object- oriented programming languages Category:Pascal (programming language) Category:Pascal (programming language) compilers Category:Pascal programming language family Category:Pascal (programming language) software Category:Platform-sensitive development Category:Programming tools for Windows Category:Self-hosting software Category:Software using the GPL license Category:Solaris software Category:Systems programming languages ",
    "title": "Free Pascal"
}
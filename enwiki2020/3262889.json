{
    "id": "3262889",
    "text": "The \u03c9-regular languages are a class of \u03c9-languages that generalize the definition of regular languages to infinite words. B\u00fcchi showed in 1962 that \u03c9-regular languages are precisely the ones definable in a particular monadic second-order logic called S1S. == Formal definition == An \u03c9-language L is \u03c9-regular if it has the form * A\u03c9 where A is a nonempty regular language not containing the empty string * AB, the concatenation of a regular language A and an \u03c9-regular language B (Note that BA is not well-defined) * A \u222a B where A and B are \u03c9-regular languages (this rule can only be applied finitely many times) The elements of A\u03c9 are obtained by concatenating words from A infinitely many times. Note that if A is regular, A\u03c9 is not necessarily \u03c9-regular, since A could be {\u03b5}, the set containing only the empty string, in which case A\u03c9=A, which is not an \u03c9-language and therefore not an \u03c9-regular language. == Equivalence to B\u00fcchi automaton== Theorem: An \u03c9-language is recognized by a B\u00fcchi automaton if and only if it is an \u03c9-regular language. Proof: Every \u03c9-regular language is recognized by a nondeterministic B\u00fcchi automaton; the translation is constructive. Using the closure properties of B\u00fcchi automata and structural induction over the definition of \u03c9-regular language, it can be easily shown that a B\u00fcchi automaton can be constructed for any given \u03c9-regular language. Conversely, for a given B\u00fcchi automaton A = (Q, \u03a3, \u0394, I, F), we construct an \u03c9-regular language and then we will show that this language is recognized by A. For an \u03c9-word w = a1a2... let w(i,j) be the finite segment ai+1...aj-1aj of w. For every q, q' \u2208 Q, we define a regular language Lq,q' that is accepted by the finite automaton (Q, \u03a3, \u0394, q, {q'}). :Lemma: We claim that B\u00fcchi automaton A recognizes language \u22c3q\u2208I,q'\u2208F Lq,q' (Lq',q' - {\u03b5} )\u03c9. :Proof: Let's suppose word w \u2208 L(A) and q0,q1,q2,... is an accepting run of A on w. Therefore, q0 is in I and there must be a state q' in F such that q' occurs infinitely often in the accepting run. Let's pick the increasing infinite sequence of indexes i0,i1,i2... such that, for all k\u22650, qik is q'. Therefore, w(0,i0)\u2208Lq0,q' and, for all k\u22650, w(ik,ik+1)\u2208Lq',q' . Therefore, w \u2208 Lq0,q' (Lq',q' )\u03c9. :Now, suppose w \u2208 Lq,q' (Lq',q' - {\u03b5} )\u03c9 for some q\u2208I and q'\u2208F. Therefore, there is an infinite and strictly increasing sequence i0,i1,i2... such that w(0,i0) \u2208 Lq,q' and, for all k\u22650,w(ik,ik+1)\u2208Lq',q' . By definition of Lq,q', there is a finite run of A from q to q' on word w(0,i0). For all k\u22650, there is a finite run of A from q' to q' on word w(ik,ik+1). By this construction, there is a run of A, which starts from q and in which q' occurs infinitely often. Hence, w \u2208 L(A). == Bibliography == * W. Thomas, \"Automata on infinite objects.\" In Jan van Leeuwen, editor, Handbook of Theoretical Computer Science, volume B: Formal Models and Semantics, pages 133-192. Elsevier Science Publishers, Amsterdam, 1990. Category:Formal languages ",
    "title": "Omega-regular language"
}
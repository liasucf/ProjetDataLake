{
    "id": "26938706",
    "text": "The \u03b1-algorithm is an algorithm used in process mining, aimed at reconstructing causality from a set of sequences of events. It was first put forward by van der Aalst, Weijters and M\u0103ru\u015fter.van der Aalst, W M P and Weijters, A J M M and Maruster, L (2004). \"Workflow Mining: Discovering process models from event logs\", IEEE Transactions on Knowledge and Data Engineering, vol 16 Several extensions or modifications of it have since been presented, which will be listed below. It constructs P/T nets with special properties (workflow nets) from event logs (as might be collected by an ERP system). Each transition in the net corresponds to an observed task. ==Short description== The algorithm takes a workflow log W\\subseteq T^{*} as input and results in a workflow net being constructed. It does so by examining causal relationships observed between tasks. For example, one specific task might always precede another specific task in every execution trace, which would be useful information. ===Definitions used=== * A workflow trace or execution trace is a string over an alphabet T of tasks. * A workflow log is a set of workflow traces. ==Description== Declaratively, the algorithm can be presented as follows. Three sets of tasks are determined: * T_W is the set of all tasks which occur in at least one trace * T_I is the set of all tasks which occur trace-initially * T_O is the set of all tasks which occur trace- terminally Basic ordering relations are determined (\\succ_{W} first, the latter three can be constructed therefrom) * a \\succ_W b iff a directly precedes b in some trace * a\\rightarrow_W b iff a\\succ_Wb \\wedge b ot\\succ_Wa * a\\\\#{}_Wb iff a ot\\succ_Wb \\wedge b ot\\succ_Wa * a\\Vert_Wb iff a\\succ_Wb \\wedge b\\succ_Wa Places are discovered. Each place is identified with a pair of sets of tasks, in order to keep the number of places low. * Y_W is the set of all pairs (A,B) of maximal sets of tasks such that ** Neither A \\times A and B \\times B contain any members of \\succ_W and ** A \\times B is a subset of \\rightarrow_W * P_W contains one place p_{(A,B)} for every member of Y_W, plus the input place i_W and the output place o_W The flow relation F_W is the union of the following: * \\\\{(a,p_{(C,B)}) | (A,B) \\in Y_W \\wedge a \\in A\\\\} * \\\\{(p_{(A,B)},b) | (A,B) \\in Y_W \\wedge b \\in B\\\\} * \\\\{(i_W,t) | t\\in T_I\\\\} * \\\\{(t,i_O) | t\\in T_O\\\\} The result is * a Petri net structure \\alpha(W) = (P_W,T_W,F_W) * with one input place i_W and one output place o_W * because every transition of T_W is on a F_W-path from i_W to o_W, it is indeed a workflow net. ==Properties== It can be shown van der Aalst et al. 2003 that in the case of a complete workflow log generated by a sound SWF net, the net generating it can be reconstructed. Complete means that its \\succ_W relation is maximal. It is not required that all possible traces be present (which would be countably infinite for a net with a loop). ==Limitations== General workflow nets may contain several types of constructs A. de Medeiros, A K and van der Aalst, W M P and Weijters, A J M M (2003). \"Workflow Mining: Current Status and Future Directions\". in: \"volume 2888 of Lecture Notes in Computer Science\", Springer-Verlag which the \u03b1-algorithm cannot rediscover. Constructing Y_W takes exponential time in the number of tasks, since \\succ_W is not constrained and arbitrary subsets of T_W must be considered. ==Extensions== for example A. de Medeiros, A K and van Dongen, B F and van der Aalst, W M P and Weijters, A J M M (2004). \"Process mining: extending the \u03b1-algorithm to mine short loops\" Wen, L and van der Aalst, W M P and Wang, J and Sun, J (2007). \"Mining process models with non-free-choice constructs\", \"Data Mining and Knowledge Discovery\" vol 15, p. 145--180, Springer-Verlag ==References== Category:Process mining Category:Data mining algorithms ",
    "title": "Alpha algorithm"
}
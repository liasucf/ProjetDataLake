{
    "id": "519460",
    "text": "This is a list of file formats used by archivers and compressors used to create archive files. ==Archiving only== {| class=\"wikitable\" |- !File extension(s)File extensions may differ across platforms. The case of these extensions may differ on case-insensitive platforms. !MIME typeMIME media types may be conjectural. Very few have been officially registered with the IANA. Compression-only formats should often be denoted by the media type of the decompressed data, with a content coding indicating the compression format. !Official nameOfficial names may be disputed. !PlatformCreation platform indicates the platform(s) under which a format can be created. !Description |- |.a, .ar |application/x-archive |Unix Archiver |Unix-like |The traditional archive format on Unix-like systems, now used mainly for the creation of static libraries. |- |.cpio |application/x-cpio |cpio |Unix-like |RPM files consist of metadata concatenated with (usually) a cpio archive. Newer RPM systems also support other archives, as cpio is becoming obsolete. cpio is also used with initramfs. |- |.shar |application/x-shar |Shell archive |Unix-like |A self-extracting archive that uses the Bourne shell (sh). |- |.LBR | |.LBR |CP/M DOS |A system for storing multiple files. LBR archives typically contained files processed by SQ, or the archive itself was compressed with SQ. LBR archives that were compressed with SQ ended with the extension .LQR |- |.iso |application/x-iso9660-image |ISO-9660 image |(Various; cross platform) |An archive format originally used mainly for archiving and distribution of the exact, nearly-exact, or custom-modified contents of an optical storage medium such as a CD-ROM or DVD-ROM. However, it can be used to archive the contents of other storage media, selected partitions, folders, and/or files. The resulting archive is typically optimized for convenient rendering to (re-)writable CD or DVD media. |- |.lbr | | |Commodore 64/128 |A library format used primarily on the Commodore 64 and 128 lines of computers. This bears no resemblance to the DOS LBR format. While library files were quick to implement (a number of programs exist to work with them) they are crippled in that they cannot grow with use: once a file has been created it cannot be amended (files added, changed or deleted) without recreating the entire file. |- |.mar | |Mozilla ARchive |(Various; cross platform) |An archive format used by Mozilla for storing binary diffs. Used in conjunction with bzip2. |- |.sbx |application/x-sbx |SeqBox |(Various; cross platform) |A single file container/archive that can be reconstructed even after total loss of file system structures. |- |.tar |application/x-tar |Tape archive |Unix-like |A common archive format used on Unix-like systems. Generally used in conjunction with compressors such as gzip, bzip2, compress or xz to create .tar.gz, .tar.bz2, .tar.Z or tar.xz files. |} ==Compression only== {| class=\"wikitable\" |- !File extension(s) !MIME type !Official name !Platform !Description |- |.bz2 |application/x-bzip2 |bzip2 |Unix-like |An open source, patent- and royalty-free compression format. The compression algorithm is a Burrows-Wheeler transform followed by a move-to-front transform and finally Huffman coding. |- |.F, .?XFIf attaching `.F` to the file name is not possible with the DOS operating system, the second and third character of the filename extension are replaced by `XF`. | |Freeze/melt |QNX4, Unix-like and DOS |Old compressor for QNX4 OS. The compression algorithm is a modified LZSS, with an adaptive Huffman coding. |- |.gz |application/gzip |gzip |Unix- like |GNU Zip, the primary compression format used by Unix-like systems. The compression algorithm is DEFLATE, which combines LZSS with Huffman coding. |- |.lz |application/x-lzip |lzip |Unix-like |An alternate LZMA algorithm implementation, with support for checksums and ident bytes. |- |.lz4 | |LZ4 |Unix-like |Algorithm developed by Yann Collet, designed for very high (de)compression speeds. It is an LZ77 derivative, without entropy encoding. |- |.lzma |application/x-lzma |lzma |Unix-like |The LZMA compression algorithm as used by 7-Zip. |- |.lzo |application/x-lzop |lzop |Unix-like |An implementation of the LZO data compression algorithm. |- |.rz | |rzip |Unix- like |A compression program designed to do particularly well on very large files containing long distance redundancy. |- |.sfark | |sfArk |Windows compress/decompress- Linux and macOS decompress only |A compression program designed to do high compression on SF2 files (SoundFont). |- |.sz |application/x-snappy-framed |Snappy |Unix-like |A compression format developed by Google, and open-sourced in 2011. Snappy aims for very high speeds, reasonable compression, and maximum stability rather than maximum compression or compatibility with any other compression library. It is an LZ77 derivative, without entropy encoding. |- |.?Q? | |SQ |CP/M and DOS |Squeeze: A program which compressed files. A file which was \"squeezed\" had the middle initial of the name changed to \"Q\", so that a squeezed text file would end with .TQT, a squeezed executable would end with .CQM or .EQE. Typically used with .LBR archives, either by storing the squeezed files in the archive, or by storing the files decompressed and then compressing the archive, which would have a name ending in \".LQR\". |- |.?Z? | |CRUNCH |CP/M and DOS |A compression program written by Steven Greenberg implementing the LZW algorithm. For several years in the CP/M world when no implementation was available of ARC, CRUNCHed files stored in .LBR archives were very popular. CRUNCH's implementation of LZW had a somewhat unusual feature of modifying and occasionally clearing the code table in memory when it became full, resulting in a few percent better compression on many files. |- |.xz |application/x-xz |xz |Unix-like |A compression format using LZMA2 to yield high compression ratios. The LZMA algorithm is an LZ77 derivative, with entropy encoding in the form of range encoding. |- |.z |application/x-compress |deflate (pack) |Unix- like |The traditional Huffman coding compression format. |- |.Z |application/x-compress |compress |Unix-like |The traditional LZW compression format. |- |.zst |application/zstd |Zstandard |Cross-platform |Algorithm developed by Yann Collet at Facebook, combining high speed and high compression. It is an LZ77 derivative, with entropy encoding in the form of Finite State Entropy and Huffman coding. |- |.??_ | | |MS-DOS/Windows |Compression format(s) used by some DOS and Windows install programs. MS-DOS includes expand.exe to decompress its install files. The compressed files are created with a matching compress.exe command. The compression algorithm is LZSS. |} ==Archiving and compression== {| class=\"wikitable sortable\" |- !File extension(s) !MIME type !Official name !Creation platform !Restoration platformRestoration platform indicates the platform(s) under which a format can be restored/extracted. Most file formats can be understood by more than one platform. !Restorable with free software\"Restorable with free software\" indicates whether the format can be restored using an extraction tool that is free software. !Description |- |.7z |application/x-7z-compressed |7z |Multiple |Multiple | |Open source file format. Used by 7-Zip. |- |.s7z |application/x-7z-compressed |7zX |macOS |macOS, restoration on different platforms is possible although not immediate | |Based on 7z. Preserves Spotlight metadata, resource forks, owner/group information, dates and other data which would be otherwise lost with compression. Made obsolete by the introduction of AppleDouble-encoded 7z archives (Macintosh only). |- |.ace |application/x-ace-compressed |ACE |Windows |Multiple | |Proprietary format |- |.afa |application/x-astrotite-afa |AFA |UNIX-like |UNIX-like | |A format that compresses and doubly encrypt the data (AES256 and CAS256) avoiding brute force attacks, also hide files in an AFA file. It has two ways to safeguard data integrity and subsequent repair of the file if has an error (repair with AstroA2P (online) or Astrotite (offline)). |- |.alz |application/x-alz- compressed |ALZip |Windows |Multiple | |A mainly Korean format designed for very large archives. |- |.apk |application/vnd.android.package-archive |APK |Multiple |Multiple | |Android application package (variant of JAR file format). |- |.arc, .ark |application/octet-stream |ARC |Multiple |Multiple | |Very popular in the early days of BBSes, one of the first to offer compression and archiving in a single program. Largely replaced by PKZIP. |- |.arc, .cdx |application/x-freearc |FreeArc |Windows, Linux |Windows, Linux | |Open source file format developed by Bulat Ziganshin. A \"FreeArc Next\" version is under development which includes Zstandard support. |- |.arj |application/x-arj |ARJ |Originally DOS, now multiple |Multiple | |Competitor to PKZIP in the 1990s, offered better multi-part archive handling. |- |.b1 |application/x-b1 |B1 |Multiple |Multiple | |Open archive format, used by B1 Free Archiver (http://dev.b1.org/standard/archive-format.html) |- |.b6z | |B6Z |macOS |Multiple | |Compressed archive format B6Zip |- |.ba | |Scifer |Multiple |Multiple | |Binary Archive with external header |- |.bh | |BlakHole | | | |Proprietary format from the ZipTV Compression Components |- |.cab |application/vnd.ms-cab-compressed |Cabinet |Windows |Multiple | |The Microsoft Windows native archive format, which is also used by many commercial installers such as WISE. |- |.car | |Compressia archive |Originally DOS, now DOS and Windows |Originally DOS, now DOS and Windows | |Created by Yaakov Gringeler; released last in 2003 (Compressia 1.0.0.1 beta), now apparently defunct. Free trial of 30 days lets user create and extract archives; after that it is possible to extract, but not to create. |- |.cfs |application/x-cfs-compressed |Compact File Set |Windows, Unix-like including macOS |Multiple | |Open source file format. |- |.cpt | |Compact Pro |Classic Mac OS |Multiple | | Compact Pro archive, a common archiver used on Mac platforms until about Mac OS 7.5.x. Competed with StuffIt; now obsolete. |- |.dar |application/x-dar |Disk Archiver |Unix-like including macOS |Unix-like including macOS, Windows | |Open source file format. Files are compressed individually with either gzip, bzip2 or lzo. |- |.dd | |DiskDoubler |Classic Mac OS | | | obsolete |- |.dgc |application/x-dgc-compressed |DGCA |Windows |Windows | | |- |.dmg |application/x-apple-diskimage |Apple Disk Image |macOS |macOS, Windows, Linux | |Supports \"Internet-enabled\" disk images, which, once downloaded, are automatically decompressed, mounted, have the contents extracted, and thrown away. Currently, Safari is the only browser that supports this form of extraction; however, the images can be manually extracted as well. This format can also be password-protected or encrypted with 128-bit or 256-bit AES encryption. |- |.ear | |EAR |Multiple |Multiple | |Enterprise Java Archive archive |- |.gca |application/x-gca-compressed |GCA | | | |The predecessor of DGCA. |- |.ha | | |Originally DOS |Originally DOS |, but may be covered by patents |DOS era format; uses arithmetic/Markov coding |- |.hki | |WinHKI |MS Windows |MS Windows | |HKI |- |.ice | |ICE |Windows |Windows | |Produced by ICEOWS program. Excels at text file compression. |- |.jar |application/java-archive |JAR |Multiple |Multiple | |Java archive, compatible with ZIP files |- |.kgb | |KGB Archiver |Multiple |Multiple | |Open sourced archiver with compression using the PAQ family of algorithms and optional encryption. |- |.lzh, .lha |application/x-lzh |LHA |Originally DOS, now multiple |Multiple | |The standard format on Amiga. |- |.lzx |application/x-lzx |LZX |Amiga | | |Archiver originally used on The Amiga. Now copied by Microsoft to use in their .cab and .chm files. |- |.pak | |PAK |HP NonStop |HP NonStop |Tandem Unpak GUI http://sybond.web.id/project/?p=8 |file format from NoGate Consultings, a rival from ARC-Compressor. .pak was also briefly used by the short lived MSDOS PKPAK program. |- |.partimg | |PartImage |Multiple |Multiple | |A disk image archive format that supports several compression methods as well as splitting the archive into smaller pieces. |- |.paq6, .paq7, .paq8 and variants | |PAQ |Unix-like and Windows |Unix-like and Windows | |An experimental open source packager (http://mattmahoney.net/dc) |- |.pea | |PeaZip |Linux and Windows |Linux and Windows | |Open source archiver supporting authenticated encryption, cascaded encryption, volume spanning, customizable object level and volume level integrity checks (form CRCs to SHA-512 and Whirlpool hashes), fast deflate based compression |- |.pim | |PIM |Windows |Windows | |The format from the PIM - a freeware compression tool by Ilia Muraviev. It uses an LZP-based compression algorithm with set of filters for executable, image and audio files. |- |.pit | |PackIt |Classic Mac OS | | | obsolete |- |.qda | |Quadruple D |Windows |Windows | |Used for data in games written using the Quadruple D library for Delphi. Uses byte pair compression. |- |.rar |application/x-rar-compressed |RAR |Originally DOS, now multiple |Multiple | |A proprietary archive format, second in popularity to .zip files. |- |.rk | | RK and WinRK |Multiple |Multiple | |The format from a commercial archiving package. Odd among commercial packages in that they focus on incorporating experimental algorithms with the highest possible compression (at the expense of speed and memory), such as PAQ, PPMD and PPMZ (PPMD with unlimited-length strings), as well as a proprietary algorithms. |- |.sda | |Self Dissolving ARChive |Commodore 64, Commodore 128 |Commodore 64, Commodore 128 | |SDAs refer to Self Dissolving ARC files, and are based on the Commodore 64 and Commodore 128 versions of ARC, originally written by Chris Smeets. While the files share the same extension, they are not compatible between platforms. That is, an SDA created on a Commodore 64 but run on a Commodore 128 in Commodore 128 mode will crash the machine, and vice versa. The intended successor to SDA is SFX. |- |.sea | |Self Extracting Archive |Classic Mac OS |Classic Mac OS (implicitly) | |A pre-Mac OS X Self-Extracting Archive format. StuffIt, Compact Pro, Disk Doubler and others could create .sea files, though the StuffIt versions were the most common. |- |.sen | |Scifer |Multiple |Multiple | |Scifer Archive with internal header |- |.sfx | |Self Extracting Archive |Commodore 64, Commodore 128 |Commodore 64, Commodore 128 | |SFX is a Self Extracting Archive which uses the LHArc compression algorithm. It was originally developed by Chris Smeets on the Commodore platform, and runs primarily using the CS-DOS extension for the Commodore 128. Unlike its predecessor SDA, SFX files will run on both the Commodore 64 and Commodore 128 regardless of which machine they were created on. |- |.shk | |NuFX |Originally Apple II, now multiple |Multiple | |An archive format designed for the Apple II series of computers. The canonical implementation is ShrinkIt, which can operate on disk images as well as files. Preferred compression algorithm is a combination of RLE and 12-bit LZW. Archives can be manipulated with the command-line NuLib tool, or the Windows-based CiderPress. |- |.sit |application/x-stuffit |StuffIt |Originally Classic Mac OS, now multiple |Originally Classic Mac OS, now multiple | |A compression format common on Apple Macintosh computers. The free StuffIt Expander is available for Windows and macOS. |- |.sitx |application/x-stuffitx |StuffIt X |Multiple |Multiple | |The replacement for the .sit format that supports more compression methods, UNIX file permissions, long file names, very large files, more encryption options, data specific compressors (JPEG, Zip, PDF, 24-bit image, MP3). The free StuffIt Expander is available for Windows and OS X. |- |.sqx | |SQX |Windows |Windows | |A royalty-free compressing format |- |.tar.gz, .tgz, .tar.Z, .tar.bz2, .tbz2, .tar.lz, .tlz. .tar.xz, .txz |application/x-gtar |tar with gzip, compress, bzip2, lzip, or xz |Multiple |Multiple | |The \"tarball\" format combines tar archives with a file-based compression scheme (usually gzip). Commonly used for source and binary distribution on Unix-like platforms, widely available elsewhere. |- |.uc .uc0 .uc2 .ucn .ur2 .ue2 | |UltraCompressor II |DOS |DOS | |UltraCompressor 2.3 was developed to act as an alternative to the then popular PKZIP application. The main feature of the application is its ability to create large archives. This means that compressed archives with the UC2 file extension can hold almost 1 million files. |- |.uca | |PerfectCompress |Windows |Windows | |Based on PAQ, RZM, CSC, CCM, and 7zip. The format consists of a PAQ, RZM, CSC, or CCM compressed file and a manifest with compression settings stored in a 7z archive. |- |.uha | |UHarc |DOS/Windows |DOS/Windows | | A high compression rate archive format originally for DOS. |- |.war | |WAR |Multiple |Multiple | |Web Application archive (Java-based web app) |- |.wim |application/x-ms-wim |Windows Image |Windows |Windows | |File-based disk image format developed to deploy Microsoft Windows. |- |.xar |application/x-xar |XAR |Multiple |Multiple | | |- |.xp3 | |KiriKiri |Windows |Windows | |Native format of the Open Source KiriKiri Visual Novel engine. Uses combination of block splitting and zlib compression. The filenames and pathes are stored in UTF-16 format. For integrity check, the Adler-32 hashsum is used. For many commercial games, the files are encrypted (and decoded on runtime) via so-called \"cxdec\" module, which implements xor-based encryption. |- |.yz1 | |YZ1 |Windows, DOS, Linux |Windows, DOS, Linux | |Yamazaki zipper archive. Compression format used in DeepFreezer archiver utility created by Yamazaki Satoshi. Read and write support exists in TUGZip, IZArc and ZipZag |- |.zip, .zipx |application/zip |ZIP |Originally DOS, now multiple |Multiple | |The most widely used compression format on Microsoft Windows. Commonly used on Macintosh and Unix systems as well. |- |.zoo |application/x-zoo |zoo |Multiple |Multiple | | |- |.zpaq | |ZPAQ |Multiple |Multiple | |Journaling (append-only) archive format with rollback capability. Supports deduplication and incremental update based on last-modified dates. Multi-threaded. Compresses in LZ77, BWT, and context mixing formats. Open source. |- |.zz | |Zzip |Multiple |Multiple | |Archiver with a compression algorithm based on the Burrows-Wheeler transform method. |} ==Data recovery== {| class=\"wikitable\" |- !File extension(s) !MIME type !Official name !Platform !Description |- |.ecc | |dvdisaster error-correction file |Multiple |File format used by dvdisaster to be used for data recovery when discs become damaged or partially unreadable. |- |.ecsbx | |Error- correcting SeqBox |Multiple |Archive with forward error correction and sector level recoverability. Error-correcting version of SeqBox. |- |.par .par2 |application/x-par2 |Parchive file |Multiple |File format used in conjunction with any archive format to provide redundancy and data recovery, most often in newsgroup distribution of binary files. |- |.rev | |WinRAR recovery volume |Multiple |File format used with WinRAR rar volumes. The data recovery is an optional data redundancy which is provided in the form of open recovery records and/or recovery volumes, allowing reconstruction of good archives (including reconstruction of entirely volumes) |} ==Comparison== ===Containers and compression === {| class=\"wikitable sortable\" style=\"width: auto; text-align: center; font-size: smaller; table-layout: fixed;\" ! Format ! Filename extension ! Created by ! Introduced in ! Based on ! Compression ! Integrity check ! Recovery record ! Encryption supported ! Unicode filenames ! Modification date resolution ! Pre-processing ! License |- ! Archive (ar) | .a, .ar | CSRG | 1971 | Original | | | | | | 1 s | | |- ! cpio | .cpio | Bell Labs | 1983 Unix System V | | | , select formats only | | | | 1 s | | |- ! Shell Archive (shar and makeself) | .shar, .run | James Gosling, Alan Hewett | 1994 4.4BSD | Original | | , commonly MD5 | | | | arbitrary (typically 1 s) | | |- ! Tape Archive (tar) | .tar | Bell Labs | 1975 Version 6 Unix | | | , metadata only. Full integrity providable by filters such as gzip. | | | | 1 s | | |- ! Extended TAR format (pax) | .tar | OpenGroup | 2001 | Sun proposal + TAR | | metadata | | | | arbitrary (typically 1 ns) | | |- ! BagIt | \u2013 | The Library of Congress | 2007 | file system | | | | | | | | |- ! 7z | .7z | Igor Pavlov | 2000 | LZMA, LZMA2, Bzip2, PPMd, DEFLATE | | , CRC32 | | , AES-256 | | 100 nshttps://sourceforge.net/p/sevenzip/discussion/45797/thread/3964f1db/#cbcb/7556 | | |- ! ACE | .ace | Marcel Lemke | 1998http://www.hugi.scene.org/online/coding/hugi%2012%20-%20coace.htm | LZ77 | | | | , Blowfish | | 2s | | |- ! AFA | .afa | Vicente S\u00e1nchez-Alarcos | 2009 | Original | | | | , AES and CAST | | | | |- ! ARC | .arc | Thom Henderson (SEA) | 1985 | | | | | | | 2s | | |- ! ARJ | .arj | Robert Jung | 1991 | AR001 and AR002 | | | | | | | | |- ! B1 | .b1 | Catalina Group Ltd | 2011 | LZMA | | | | , AES | | | | |- ! Cabinet | .cab | Microsoft | 1992 Windows 3.1 | DEFLATE | | PKCS7 Authenticode signature | | (with SDK) | | 2 s | | |- ! Compact File Set | .cfs | Joe Lowe (Pismo Technic Inc.) | 2008 | ZIP/LZMA | | | | | | | | |- ! Compact Pro | .cpt | Bill Goodman | 1990 (as \"Compactor\") | Original | | | | | | | | |- ! Disk Archive (DAR) | .dar | Denis Corbin | 2002 | Original | | | | | | 1 \u00b5s | | |- ! DGCA | .dgc | Shin-ichi Tsuruta | 2001 | GCA | | | | | | | | |- ! FreeArc | .arc | Bulat Ziganshin | 2006 | LZMA, PPMd, TTA | | | | , AES, Blowfish, Twofish and Serpent | | | | |- ! LHA (also LZH) | .lzh, .lha | Haruyasu Yoshizaki | 1988 | Frozen | | Only on recent LHA releases | | | | 1\u20132 s | | |- ! LZX | .lzx | Jonathan Forbes and Tomi Poutanen | 1995 | LZ77 | | Only on recent LZX releases | | | | | | |- ! ISO image | .iso, .img, .ima | ISO 9660 | 1988 | High Sierra Format | | | | | | | | |- ! SparkFS | .arc | David Pilling | 1989 | | | | | | | | | |- ! WinMount format | .mou | ? | 2007 | ? | | | | | | | | |- ! Macintosh Disk Image | .dmg | Apple Computer | 2001 Mac OS X | Original | | | | | | | | |- ! Partition Image (PartImage) | .partimg | Fran\u00e7ois Dupoux and Franck Ladurelle | 2000 | | | | | | | | | |- ! PAQ Family (Several formats) | .paq#*, .lpaq#* | Matt Mahoney | 2002\u20132006 | Original | | | | | | | | |- ! PEA | .pea | Giorgio Tani | 2006 | Original, Deflate based compression | | Adler32, CRC32, CRC64, MD5, SHA1, RIPEMD-160, SHA256, SHA512, Whirlpool | | Authenticated Encryption, AES128 and AES256 in EAX mode | system dependent | arbitrary | | |- ! PIM | .pim | Ilia Muraviev | 2004\u20132008 | Original | | | | | | | | |- ! Quadruple D | .qda | Taku Hayase (aka sandman) | 1997 | | | | | | | | | |- ! RAR | .rar | Eugene Roshal | 1993 | Original | | , CRC32, BLAKE2 | , Reed\u2013Solomon | , AES-256 for RAR 5.0 archives | , UTF-8 | 2 s, 1 s, 6.5536 ms, 25.6 \u00b5s or 100 ns | | |- ! RK | .rk | M Software, Ltd. | 2004 | Original | | | | , AES, Square, Twofish | | 1 s | | |- ! NuFX | .shk | Andy Nicholas | 1989 | Original | | | | | | 1 s | | |- ! StuffIt (also SIT) | .sit | Raymond Lau | 1987 | | | | | | | | | |- ! StuffIt X (also SITx) | .sitx | Aladdin/Allume Systems | 2002 | | | | | , RC4,Blowfish, AES,DES | | | | |- ! UltraCompressor II | .uc .uc0 .uc2 .ucn .ur2 .ue2 | Nico de Vries | 1992\u20131996 | LZ77 and Huffman coding | | | | , triple DES | | ? | | |- ! Windows Image | .wim, .swm, .esd | Microsoft | 2006 | Original | | | | | | 100 ns | | |- ! ZIP | .zip | Phil Katz | 1989 | DEFLATE | | | | , AES | | 1\u20132 s, depending on version | | |- ! ZPAQ | .zpaq | Matt Mahoney | 2009 | PAQ | | , SHA-1 | | , AES-256 | | | | |} ==== Notes ==== While the original tar format uses the ASCII character encoding, current implementations use the UTF-8 (Unicode) encoding, which is backwards compatible with ASCII. Supports the external Parchive program (par2). From 3.20 release RAR can store modification, creation and last access time with the precision up to 0.0000001 second (= 0.1 \u00b5s). The PAQ family (with its lighter weight derivative LPAQ) went through many revisions, each revision suggested its own extension. For example: \".paq9a\". WIM can store the ciphertext of encrypted files on an NTFS volume, but such files can only by decrypted if an administrator extracts the file to an NTFS volume, and the decryption key is available (typically from the file's original owner on the same Windows installation). Microsoft has also distributed some download versions of the Windows operating system as encrypted WIM files, but via an external encryption process and not a feature of WIM. *Purpose: Archive formats are used for backups, mobility, and archiving. Many archive formats compress the data to consume less storage space and result in quicker transfer times as the same data is represented by fewer bytes. Another benefit is that files are combined into one archive file which has less overhead for managing or transferring. There are numerous compression algorithms available to losslessly compress archived data and some algorithms work better (smaller archive or faster compression) with particular data types. Archive formats are also used by most operating systems to package software for easier distribution and installation than binary executables. *Filename extension: The DOS and Windows operating systems required filenames to include an extension (of at least one, and typically 3 characters) to identify the file type and use. Filename extensions must be unique for each type of file. Many operating systems identify a file's type from its contents without the need for an extension in its name. However, the use of three- character extensions has been embraced as a useful and efficient shorthand for identifying file types. *Integrity check: Archive files are often stored on magnetic media, which is subject to data storage errors. Early tape media had a higher rate of errors than they do today. Many archive formats contain extra error-correction information to detect storage or transmission errors, and the software used to read the archive files contains logic to detect and possibly correct errors. *Recovery record: Many archive formats contain redundant data embedded in the files in order to detect data storage or transmission errors, and the software used to read the archive files contains logic to detect and correct errors. *Encryption: In order to protect the data being stored or transferred from being read if intercepted, many archive formats include the capability to encrypt the data. There are multiple mathematical algorithms available to encrypt data. ===Software packaging and distribution=== {| class=\"wikitable sortable\" style=\"width: auto; text-align: center; font-size: smaller; table-layout: fixed;\" ! Format ! Filename extension ! Created by ! Introduced in ! Based on ! Integrity check ! Recovery record ! Encryption supported ! Unicode filenames ! Modification date resolution |- ! Debian package (deb) | .deb | Debian | 1994 Debian 0.91 | ar, tar, and gzip | | | | | 1 s |- ! Macintosh Installer |.pkg, .mpkg (metapackage) | NeXT | 1989 NeXTSTEP 1.0 | pax and gzip | | | | | |- ! RPM Package Manager (RPM) | .rpm | Red Hat | 1995 Red Hat Linux 1.0 | cpio and gzip | | | | | 1 s |- ! Slackware Package | .tgz | Patrick Volkerding | 1993 Slackware 1.0 | tar and gzip | | | | | |- ! Windows Installer (also MSI) | .msi | Microsoft | 2000 Windows 2000 | OLE Structured Storage, Cabinet and SQL | PKCS7 Authenticode Signature | | | | 2 s |- ! Java Archive (JAR) | .jar | Sun Microsystems | 1997 JDK 1.1 | PKZIP | | | | | |- ! Google Chrome extension package | .crx | Google | 2009 (Chrome 4.0) | Zip | | | | | |- ! Pacman | .pkg.tar.zst, .pkg.tar (no compression) | Judd Vinet | 2001 (before ArchLinux 0.1) | tar and zstd (formerly xz) | | | | | 1 s |} ==== Notes ==== Not to be confused with the archiver JAR written by Robert K. Jung, which produces \".j\" files. ===Features=== {| class=\"wikitable sortable\" style=\"width: auto; text-align: center; font-size: smaller; table-layout: fixed;\" |- ! Archive format ! Built- in compression ! Self-extracting ! Directory structure ! POSIX attributes ! ACLs | Alternate data streams |- ! cpio | | | | | | |- ! tar | | | | | | |- ! dar | | | | | | |- ! ar | | | | | | |- ! pax | | | | | | |- ! dump | | | | | | |- ! shar | | | | | | |- ! makeself | | | | | | |- ! zip | | | | | | |- ! rar | | | | | | |- ! ace | | | | | | |- ! arj | | | | | | |- ! zoo | | | | | | |- ! ISO 9660 (CD-ROM) | | | | | | |- ! cab | | | | | | |- ! rpm | | | | | | |- ! deb | | | | | | |- ! 7z | | | | | | |- ! Archive format ! Built-in compression ! Self-extracting ! Directory Structure ! POSIX attributes ! ACLs | Alternate data streams |} === Notes === Compression is not a built-in feature of the formats, however, the resulting archive can be compressed with any algorithm of choice. Several implementations include functionality to do this automatically Most implementations can optionally produce a self-extracting executable Per-file compression with gzip, bzip2, lzo, xz, lzma (as opposed to compressing the whole archive). An individual can choose not to compress already compressed filenames based on their suffix as well. ==Footnotes== ==See also== *Archive file *Comparison of file archivers *Comparison of file systems *List of file systems *Solid compression *zlib Category:Lists of file formats * ",
    "title": "List of archive formats"
}
{
    "id": "1284224",
    "text": "thumb In computer vision and image processing feature detection includes methods for computing abstractions of image information and making local decisions at every image point whether there is an image feature of a given type at that point or not. The resulting features will be subsets of the image domain, often in the form of isolated points, continuous curves or connected regions. == Definition of a feature == There is no universal or exact definition of what constitutes a feature, and the exact definition often depends on the problem or the type of application. Nevertheless, a feature is typically defined as an \"interesting\" part of an image, and features are used as a starting point for many computer vision algorithms. Since features are used as the starting point and main primitives for subsequent algorithms, the overall algorithm will often only be as good as its feature detector. Consequently, the desirable property for a feature detector is repeatability: whether or not the same feature will be detected in two or more different images of the same scene. Feature detection is a low-level image processing operation. That is, it is usually performed as the first operation on an image, and examines every pixel to see if there is a feature present at that pixel. If this is part of a larger algorithm, then the algorithm will typically only examine the image in the region of the features. As a built-in pre-requisite to feature detection, the input image is usually smoothed by a Gaussian kernel in a scale-space representation and one or several feature images are computed, often expressed in terms of local image derivatives operations. Occasionally, when feature detection is computationally expensive and there are time constraints, a higher level algorithm may be used to guide the feature detection stage, so that only certain parts of the image are searched for features. There are many computer vision algorithms that use feature detection as the initial step, so as a result, a very large number of feature detectors have been developed. These vary widely in the kinds of feature detected, the computational complexity and the repeatability. == Types of image features == === Edges === Edges are points where there is a boundary (or an edge) between two image regions. In general, an edge can be of almost arbitrary shape, and may include junctions. In practice, edges are usually defined as sets of points in the image which have a strong gradient magnitude. Furthermore, some common algorithms will then chain high gradient points together to form a more complete description of an edge. These algorithms usually place some constraints on the properties of an edge, such as shape, smoothness, and gradient value. Locally, edges have a one-dimensional structure. === Corners / interest points === The terms corners and interest points are used somewhat interchangeably and refer to point-like features in an image, which have a local two dimensional structure. The name \"Corner\" arose since early algorithms first performed edge detection, and then analysed the edges to find rapid changes in direction (corners). These algorithms were then developed so that explicit edge detection was no longer required, for instance by looking for high levels of curvature in the image gradient. It was then noticed that the so-called corners were also being detected on parts of the image which were not corners in the traditional sense (for instance a small bright spot on a dark background may be detected). These points are frequently known as interest points, but the term \"corner\" is used by tradition. === Blobs / regions of interest points === Blobs provide a complementary description of image structures in terms of regions, as opposed to corners that are more point-like. Nevertheless, blob descriptors may often contain a preferred point (a local maximum of an operator response or a center of gravity) which means that many blob detectors may also be regarded as interest point operators. Blob detectors can detect areas in an image which are too smooth to be detected by a corner detector. Consider shrinking an image and then performing corner detection. The detector will respond to points which are sharp in the shrunk image, but may be smooth in the original image. It is at this point that the difference between a corner detector and a blob detector becomes somewhat vague. To a large extent, this distinction can be remedied by including an appropriate notion of scale. Nevertheless, due to their response properties to different types of image structures at different scales, the LoG and DoH blob detectors are also mentioned in the article on corner detection. === Ridges === For elongated objects, the notion of ridges is a natural tool. A ridge descriptor computed from a grey-level image can be seen as a generalization of a medial axis. From a practical viewpoint, a ridge can be thought of as a one-dimensional curve that represents an axis of symmetry, and in addition has an attribute of local ridge width associated with each ridge point. Unfortunately, however, it is algorithmically harder to extract ridge features from general classes of grey-level images than edge-, corner- or blob features. Nevertheless, ridge descriptors are frequently used for road extraction in aerial images and for extracting blood vessels in medical images\u2014see ridge detection. == Feature detectors == {| class=\"wikitable\" |+ Common feature detectors and their classification: !Feature detector!!Edge!!Corner!!Blob |- | Canny | | | |- |- | Sobel | | | |- |- | Kayyali | | | |- |- |Harris & Stephens / Plessey / Shi\u2013Tomasi | | | |- |SUSAN | | | |- |Shi & Tomasi | | | |- |Level curve curvature | | | |- |FAST | | | |- |Laplacian of Gaussian | | | |- | Difference of Gaussians | | | |- |Determinant of Hessian | | | |- | MSER | | | |- | PCBR | | | |- | Grey-level blobs | | | |} == Feature extraction == Once features have been detected, a local image patch around the feature can be extracted. This extraction may involve quite considerable amounts of image processing. The result is known as a feature descriptor or feature vector. Among the approaches that are used to feature description, one can mention N-jets and local histograms (see scale- invariant feature transform for one example of a local histogram descriptor). In addition to such attribute information, the feature detection step by itself may also provide complementary attributes, such as the edge orientation and gradient magnitude in edge detection and the polarity and the strength of the blob in blob detection. == See also == * Automatic image annotation * Feature extraction * Feature learning * Feature selection * Foreground detection * Vectorization (image tracing) == References == * (summary and review of a number of feature detectors formulated based on a scale-space operations) *. (Canny edge detection) * (Harris/Plessey corner detection) *(The SUSAN corner detector) * (The Shi and Tomasi corner detector) *(The FAST corner detector) * (Laplacian and determinant of Hessian blob detection as well as automatic scale selection) * (DOG blob detection with automatic scale selection) *(The MSER blob detector) * (Grey-level blob detection and scale- space blobs) *R. Haralick, \"Ridges and Valleys on Digital Images,\" Computer Vision, Graphics, and Image Processing vol. 22, no. 10, pp. 28\u201338, Apr. 1983. (Ridge detection using facet model) *J. L. Crowley and A. C. Parker, \"A Representation for Shape Based on Peaks and Ridges in the Difference of Low Pass Transform\", IEEE Transactions on PAMI, PAMI 6 (2), pp. 156\u2013170, March 1984. (Ridge detection based on DOGs) *D. Eberly, R. Gardner, B. Morse, S. Pizer, C. Scharlach, Ridges for image analysis, Journal of Mathematical Imaging and Vision, v. 4 n. 4, pp. 353\u2013373, Dec. 1994. (Fixed scale ridge detection) * (Ridge detection with automatic scale selection) ",
    "title": "Feature detection (computer vision)"
}
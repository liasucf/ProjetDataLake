{
    "id": "46194161",
    "text": "alt= NodeMCU is a low-cost open source IoT platform. It initially included firmware which runs on the ESP8266 Wi-Fi SoC from Espressif Systems, and hardware which was based on the ESP-12 module. Later, support for the ESP32 32-bit MCU was added. == Overview == NodeMCU is an open source firmware for which open source prototyping board designs are available. The name \"NodeMCU\" combines \"node\" and \"MCU\" (micro-controller unit).https://developer.ibm.com/tutorials/iot-nodemcu-open-why-use/. The term \"NodeMCU\" strictly speaking refers to the firmware rather than the associated development kits. Both the firmware and prototyping board designs are open source.https://developer.ibm.com/tutorials/iot-nodemcu-open-why-use/ The firmware uses the Lua scripting language. The firmware is based on the eLua project, and built on the Espressif Non-OS SDK for ESP8266. It uses many open source projects, such as lua-cjson and SPIFFS. Due to resource constraints, users need to select the modules relevant for their project and build a firmware tailored to their needs. Support for the 32-bit ESP32 has also been implemented. The prototyping hardware typically used is a circuit board functioning as a dual in-line package (DIP) which integrates a USB controller with a smaller surface-mounted board containing the MCU and antenna. The choice of the DIP format allows for easy prototyping on breadboards. The design was initially was based on the ESP-12 module of the ESP8266, which is a Wi-Fi SoC integrated with a Tensilica Xtensa LX106 core, widely used in IoT applications (see related projects). == History == NodeMCU was created shortly after the ESP8266 came out. On December 30, 2013, Espressif Systems began production of the ESP8266. NodeMCU started on 13 Oct 2014, when Hong committed the first file of nodemcu-firmware to GitHub. Two months later, the project expanded to include an open-hardware platform when developer Huang R committed the gerber file of an ESP8266 board, named devkit v0.9. Later that month, Tuan PM ported MQTT client library from Contiki to the ESP8266 SoC platform, and committed to NodeMCU project, then NodeMCU was able to support the MQTT IoT protocol, using Lua to access the MQTT broker. Another important update was made on 30 Jan 2015, when Devsaurus ported the u8glib to the NodeMCU project, enabling NodeMCU to easily drive LCD, Screen, OLED, even VGA displays. In the summer of 2015 the original creators abandoned the firmware project and a group of independent contributors took over. By the summer of 2016 the NodeMCU included more than 40 different modules. == Related projects == === ESP8266 Arduino Core === As Arduino.cc began developing new MCU boards based on non- AVR processors like the ARM/SAM MCU and used in the Arduino Due, they needed to modify the Arduino IDE so that it would be relatively easy to change the IDE to support alternate toolchains to allow Arduino C/C++ to be compiled for these new processors. They did this with the introduction of the Board Manager and the SAM Core. A \"core\" is the collection of software components required by the Board Manager and the Arduino IDE to compile an Arduino C/C++ source file for the target MCU's machine language. Some ESP8266 enthusiasts developed an Arduino core for the ESP8266 WiFi SoC, popularly called the \"ESP8266 Core for the Arduino IDE\". This has become a leading software development platform for the various ESP8266-based modules and development boards, including NodeMCUs. == Pins == NodeMCU provides access to the GPIO (General Purpose Input/Output) and a pin mapping table is part of the API documentation. {| class=\"wikitable\" |- !I/O index !ESP8266 pin |- |0 [*] |GPIO16 |- |1 |GPIO5 |- |2 |GPIO4 |- |3 |GPIO0 |- |4 |GPIO2 |- |5 |GPIO14 |- |6 |GPIO12 |- |7 |GPIO13 |- |8 |GPIO15 |- |9 |GPIO3 |- |10 |GPIO1 |- |11 |GPIO9 |- |12 |GPIO10 |} [*] D0 (GPIO16) can only be used for GPIO read/write. It does not support open- drain/interrupt/PWM/I\u00b2C or 1-Wire. == See also == * Internet of things * MCU (Micro Controller Unit) == References == == External links == * Category:Open hardware electronic devices Category:Internet of things Category:Robotics hardware ",
    "title": "NodeMCU"
}
{
    "id": "42301",
    "text": "Arity () is the number of arguments or operands that a function or operation in logic, mathematics, and computer science takes. In mathematics, arity may also be named rank, but this word can have many other meanings in mathematics. In logic and philosophy, it is also called adicity and degree. In linguistics, it is usually named valency. ==Terminology== Latinate names are commonly used for specific arities, primarily based on Latin distributive numbers meaning \"in group of n\", though some are based on Latin cardinal numbers or ordinal numbers. For example, 1-ary is based on cardinal unus, rather than from distributive singul\u012b that would result in singulary. {| class=\"wikitable\" |- ! x-ary !! Arity (Latin based) !! Adicity (Greek based) !! Example in mathematics !! Example in computer science |- | 0-ary || Nullary (from n\u016bllus) || Niladic || A constant || A function without arguments, True, False |- | 1-ary || Unary || Monadic || Additive inverse || Logical NOT operator |- | 2-ary || Binary || Dyadic || Addition || OR, XOR, AND |- | 3-ary || Ternary || Triadic || Triple product of vectors || Conditional operator |- | 4-ary || Quaternary || Tetradic || Quaternion | |- | 5-ary || Quinary || Pentadic || Quantile | |- | 6-ary || Senary || Hexadic || || |- | 7-ary || Septenary || Hebdomadic || || |- | 8-ary || Octonary || Ogdoadic || || |- | 9-ary || Novenary (alt. nonary) || Enneadic || || |- | 10-ary || Denary (alt. decenary) || Decadic || || |- | More than 2-ary || Multary and multiary || Polyadic || || |- | Varying || || Variadic || Sum; e.g., \\sum || Variadic function, reduce |} n-ary means n operands (or parameters), but is often used as a synonym of \"polyadic\". These words are often used to describe anything related to that number (e.g., undenary chess is a chess variant with an 11\u00d711 board, or the Millenary Petition of 1603). The arity of a relation (or predicate) is the dimension of the domain in the corresponding Cartesian product. (A function of arity n thus has arity n+1 considered as a relation.) In computer programming, there is often a syntactical distinction between operators and functions; syntactical operators usually have arity 0, 1, or 2 (the ternary operator ?: is also common). Functions vary widely in the number of arguments, though large numbers can become unwieldy. Some programming languages also offer support for variadic functions, i.e., functions syntactically accepting a variable number of arguments. ==Examples== The term \"arity\" is rarely employed in everyday usage. For example, rather than saying \"the arity of the addition operation is 2\" or \"addition is an operation of arity 2\" one usually says \"addition is a binary operation\". In general, the naming of functions or operators with a given arity follows a convention similar to the one used for n-based numeral systems such as binary and hexadecimal. One combines a Latin prefix with the -ary ending; for example: * A nullary function takes no arguments. ** Example: f()=2 * A unary function takes one argument. ** Example: f(x)=2x * A binary function takes two arguments. ** Example: f(x,y)=2xy * A ternary function takes three arguments. ** Example: f(x,y,z)=2xyz * An n-ary function takes n arguments. ** Example: f(x_1, x_2, \\ldots, x_n)=2\\prod_{i=1}^n \\displaystyle x_i ===Nullary=== Sometimes it is useful to consider a constant to be an operation of arity 0, and hence call it nullary. Also, in non-functional programming, a function without arguments can be meaningful and not necessarily constant (due to side effects). Often, such functions have in fact some hidden input which might be global variables, including the whole state of the system (time, free memory, \u2026). The latter are important examples which usually also exist in \"purely\" functional programming languages. ===Unary=== Examples of unary operators in mathematics and in programming include the unary minus and plus, the increment and decrement operators in C-style languages (not in logical languages), and the successor, factorial, reciprocal, floor, ceiling, fractional part, sign, absolute value, square root (the principal square root), complex conjugate (unary of \"one\" complex number, that however has two parts at a lower level of abstraction), and norm functions in mathematics. The two's complement, address reference and the logical NOT operators are examples of unary operators in math and programming. All functions in lambda calculus and in some functional programming languages (especially those descended from ML) are technically unary, but see n-ary below. According to Quine, the Latin distributives being singuli, bini, terni, and so forth, the term \"singulary\" is the correct adjective, rather than \"unary.\" Abraham Robinson follows Quine's usage. ===Binary=== Most operators encountered in programming and mathematics are of the binary form. For both programming and mathematics, these can be the multiplication operator, the radix operator, the often omitted exponentiation operator, the logarithm operator, the addition operator, the division operator. Logical predicates such as OR, XOR, AND, IMP are typically used as binary operators with two distinct operands. In CISC architectures, it is common to have two source operands (and store result in one of them). ===Ternary=== Common ternary operations besides generic function in mathematics are the summatory and the productory though some other n-ary operation may be implied. The computer programming language C and its various descendants (including C++, C#, Java, Julia, Perl, and others) provides the ternary operator `?:`, also known as the conditional operator, taking three operands. The first operand (the condition) is evaluated, and if it is true, the result of the entire expression is the value of the second operand, otherwise it is the value of the third operand. The Forth language also contains a ternary operator, `*/`, which multiplies the first two (one-cell) numbers, dividing by the third, with the intermediate result being a double cell number. This is used when the intermediate result would overflow a single cell. The Python language has a ternary conditional expression, `x if C else y`. The Unix dc calculator has several ternary operators, such as `|`, which will pop three values from the stack and efficiently compute x^y \\bmod z with arbitrary precision. Additionally, many (RISC) assembly language instructions are ternary (as opposed to only two operands specified in CISC); or higher, such as MOV %AX, (%BX, %CX), which will load (MOV) into register the contents of a calculated memory location that is the sum (parenthesis) of the registers and . ===n-ary=== From a mathematical point of view, a function of n arguments can always be considered as a function of one single argument which is an element of some product space. However, it may be convenient for notation to consider n-ary functions, as for example multilinear maps (which are not linear maps on the product space, if ). The same is true for programming languages, where functions taking several arguments could always be defined as functions taking a single argument of some composite type such as a tuple, or in languages with higher-order functions, by currying. ===Varying arity=== In computer science, a function accepting a variable number of arguments is called variadic. In logic and philosophy, predicates or relations accepting a variable number of arguments are called multigrade, anadic, or variably polyadic. ==See also== * Logic of relatives * Binary relation * Triadic relation * Theory of relations * Signature (logic) * Parameter * p-adic number * Cardinality * Valency * n-ary code * n-ary group ==References== ==External links== A monograph available free online: * Burris, Stanley N., and H.P. Sankappanavar, H. P., 1981. A Course in Universal Algebra. Springer-Verlag. . Especially pp. 22\u201324. Category:Abstract algebra Category:Universal algebra cs:Operace (matematika)#Arita operace ",
    "title": "Arity"
}